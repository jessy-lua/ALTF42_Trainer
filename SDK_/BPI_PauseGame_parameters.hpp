#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PauseGame

#include "Basic.hpp"

#include "EInputDeviceType_structs.hpp"


namespace SDK::Params
{

// Function BPI_PauseGame.BPI_PauseGame_C.Pause
// 0x0010 (0x0010 - 0x0000)
struct BPI_PauseGame_C_Pause final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInputDeviceType                              InputDeviceType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TooltipON_;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndingSkech_;                                      // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inventory_;                                        // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PauseGame_C_Pause) == 0x000008, "Wrong alignment on BPI_PauseGame_C_Pause");
static_assert(sizeof(BPI_PauseGame_C_Pause) == 0x000010, "Wrong size on BPI_PauseGame_C_Pause");
static_assert(offsetof(BPI_PauseGame_C_Pause, PlayerController) == 0x000000, "Member 'BPI_PauseGame_C_Pause::PlayerController' has a wrong offset!");
static_assert(offsetof(BPI_PauseGame_C_Pause, InputDeviceType) == 0x000008, "Member 'BPI_PauseGame_C_Pause::InputDeviceType' has a wrong offset!");
static_assert(offsetof(BPI_PauseGame_C_Pause, TooltipON_) == 0x000009, "Member 'BPI_PauseGame_C_Pause::TooltipON_' has a wrong offset!");
static_assert(offsetof(BPI_PauseGame_C_Pause, EndingSkech_) == 0x00000A, "Member 'BPI_PauseGame_C_Pause::EndingSkech_' has a wrong offset!");
static_assert(offsetof(BPI_PauseGame_C_Pause, Inventory_) == 0x00000B, "Member 'BPI_PauseGame_C_Pause::Inventory_' has a wrong offset!");

// Function BPI_PauseGame.BPI_PauseGame_C.Resume
// 0x0008 (0x0008 - 0x0000)
struct BPI_PauseGame_C_Resume final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PauseGame_C_Resume) == 0x000008, "Wrong alignment on BPI_PauseGame_C_Resume");
static_assert(sizeof(BPI_PauseGame_C_Resume) == 0x000008, "Wrong size on BPI_PauseGame_C_Resume");
static_assert(offsetof(BPI_PauseGame_C_Resume, PlayerController) == 0x000000, "Member 'BPI_PauseGame_C_Resume::PlayerController' has a wrong offset!");

}

