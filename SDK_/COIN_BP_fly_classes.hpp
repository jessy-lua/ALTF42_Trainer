#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COIN_BP_fly

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass COIN_BP_fly.COIN_BP_fly_C
// 0x0068 (0x0300 - 0x0298)
class ACOIN_BP_fly_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere1;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_01a;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTickOptToolkitTargetComponent*         TickOptToolkitTarget;                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SFX_PickUp_Cue;                                    // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_PickupCast;                                     // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TakeCoin_Rotation_TL______0_E3CD1E2F4619A5F9E490E497DA625B68; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TakeCoin_Rotation_TL__Direction_E3CD1E2F4619A5F9E490E497DA625B68; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3840[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TakeCoin_Rotation_TL;                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Normal_Rotatio_TL_Alpha_30BE1A664AFB19EAC831A4BBE8B5DCF8; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Normal_Rotatio_TL__Direction_30BE1A664AFB19EAC831A4BBE8B5DCF8; // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3841[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Normal_Rotatio_TL;                                 // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CoinValue;                                         // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3842[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UALTF42_GameInstance_C*                 ALTF42_GI;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void TakeCoin_Rotation_TL__UpdateFunc();
	void TakeCoin_Rotation_TL__FinishedFunc();
	void ReceiveBeginPlay();
	void Normal_Rotatio_TL__UpdateFunc();
	void Normal_Rotatio_TL__FinishedFunc();
	void ExecuteUbergraph_COIN_BP_fly(int32 EntryPoint);
	void CoinRotationStop();
	void BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"COIN_BP_fly_C">();
	}
	static class ACOIN_BP_fly_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACOIN_BP_fly_C>();
	}
};
static_assert(alignof(ACOIN_BP_fly_C) == 0x000008, "Wrong alignment on ACOIN_BP_fly_C");
static_assert(sizeof(ACOIN_BP_fly_C) == 0x000300, "Wrong size on ACOIN_BP_fly_C");
static_assert(offsetof(ACOIN_BP_fly_C, UberGraphFrame) == 0x000298, "Member 'ACOIN_BP_fly_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, Sphere1) == 0x0002A0, "Member 'ACOIN_BP_fly_C::Sphere1' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, SM_Coin_01a) == 0x0002A8, "Member 'ACOIN_BP_fly_C::SM_Coin_01a' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, Sphere) == 0x0002B0, "Member 'ACOIN_BP_fly_C::Sphere' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, TickOptToolkitTarget) == 0x0002B8, "Member 'ACOIN_BP_fly_C::TickOptToolkitTarget' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, SFX_PickUp_Cue) == 0x0002C0, "Member 'ACOIN_BP_fly_C::SFX_PickUp_Cue' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, NS_PickupCast) == 0x0002C8, "Member 'ACOIN_BP_fly_C::NS_PickupCast' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, TakeCoin_Rotation_TL______0_E3CD1E2F4619A5F9E490E497DA625B68) == 0x0002D0, "Member 'ACOIN_BP_fly_C::TakeCoin_Rotation_TL______0_E3CD1E2F4619A5F9E490E497DA625B68' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, TakeCoin_Rotation_TL__Direction_E3CD1E2F4619A5F9E490E497DA625B68) == 0x0002D4, "Member 'ACOIN_BP_fly_C::TakeCoin_Rotation_TL__Direction_E3CD1E2F4619A5F9E490E497DA625B68' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, TakeCoin_Rotation_TL) == 0x0002D8, "Member 'ACOIN_BP_fly_C::TakeCoin_Rotation_TL' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, Normal_Rotatio_TL_Alpha_30BE1A664AFB19EAC831A4BBE8B5DCF8) == 0x0002E0, "Member 'ACOIN_BP_fly_C::Normal_Rotatio_TL_Alpha_30BE1A664AFB19EAC831A4BBE8B5DCF8' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, Normal_Rotatio_TL__Direction_30BE1A664AFB19EAC831A4BBE8B5DCF8) == 0x0002E4, "Member 'ACOIN_BP_fly_C::Normal_Rotatio_TL__Direction_30BE1A664AFB19EAC831A4BBE8B5DCF8' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, Normal_Rotatio_TL) == 0x0002E8, "Member 'ACOIN_BP_fly_C::Normal_Rotatio_TL' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, CoinValue) == 0x0002F0, "Member 'ACOIN_BP_fly_C::CoinValue' has a wrong offset!");
static_assert(offsetof(ACOIN_BP_fly_C, ALTF42_GI) == 0x0002F8, "Member 'ACOIN_BP_fly_C::ALTF42_GI' has a wrong offset!");

}

