#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuControllerComponent

#include "Basic.hpp"

#include "BP_MenuControllerComponent_classes.hpp"
#include "BP_MenuControllerComponent_parameters.hpp"


namespace SDK
{

// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.ExecuteUbergraph_BP_MenuControllerComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::ExecuteUbergraph_BP_MenuControllerComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "ExecuteUbergraph_BP_MenuControllerComponent");

	Params::BP_MenuControllerComponent_C_ExecuteUbergraph_BP_MenuControllerComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.GetAllPlayerMappingsByKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPlayerKeyMapping>        OutPlayerKeyMappings                                   (Parm, OutParm)

void UBP_MenuControllerComponent_C::GetAllPlayerMappingsByKey(const struct FKey& Key, bool* bFound, TArray<struct FPlayerKeyMapping>* OutPlayerKeyMappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "GetAllPlayerMappingsByKey");

	Params::BP_MenuControllerComponent_C_GetAllPlayerMappingsByKey Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	if (OutPlayerKeyMappings != nullptr)
		*OutPlayerKeyMappings = std::move(Parms.OutPlayerKeyMappings);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.GetKeyFromKeyBinderButtonData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFKeyBinderButtonData            KeyBinderButtonData                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPlayerKeyMapping                PlayerKeyMapping                                       (Parm, OutParm, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::GetKeyFromKeyBinderButtonData(const struct FFKeyBinderButtonData& KeyBinderButtonData, bool* bSuccess, struct FPlayerKeyMapping* PlayerKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "GetKeyFromKeyBinderButtonData");

	Params::BP_MenuControllerComponent_C_GetKeyFromKeyBinderButtonData Parms{};

	Parms.KeyBinderButtonData = std::move(KeyBinderButtonData);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (PlayerKeyMapping != nullptr)
		*PlayerKeyMapping = std::move(Parms.PlayerKeyMapping);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.IsKeyDuplicateInInputMappingContext
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FFKeyBinderButtonData            KeyBinderButtonData                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bAllowRebind                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsDuplicate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPlayerKeyMapping                DuplicatePlayerKeyMapping                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::IsKeyDuplicateInInputMappingContext(const struct FKey& NewKey, const struct FFKeyBinderButtonData& KeyBinderButtonData, bool* bAllowRebind, bool* bIsDuplicate, struct FPlayerKeyMapping* DuplicatePlayerKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "IsKeyDuplicateInInputMappingContext");

	Params::BP_MenuControllerComponent_C_IsKeyDuplicateInInputMappingContext Parms{};

	Parms.NewKey = std::move(NewKey);
	Parms.KeyBinderButtonData = std::move(KeyBinderButtonData);

	UObject::ProcessEvent(Func, &Parms);

	if (bAllowRebind != nullptr)
		*bAllowRebind = Parms.bAllowRebind;

	if (bIsDuplicate != nullptr)
		*bIsDuplicate = Parms.bIsDuplicate;

	if (DuplicatePlayerKeyMapping != nullptr)
		*DuplicatePlayerKeyMapping = std::move(Parms.DuplicatePlayerKeyMapping);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.IsKeyFromKeyBinderButtonBindable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFKeyBinderButtonData            KeyBinderButtonData                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_MenuControllerComponent_C::IsKeyFromKeyBinderButtonBindable(const struct FFKeyBinderButtonData& KeyBinderButtonData, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "IsKeyFromKeyBinderButtonBindable");

	Params::BP_MenuControllerComponent_C_IsKeyFromKeyBinderButtonBindable Parms{};

	Parms.KeyBinderButtonData = std::move(KeyBinderButtonData);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnAddInitialInputMappingContexts
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnAddInitialInputMappingContexts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnAddInitialInputMappingContexts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnAddMenuInputContext
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnAddMenuInputContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnAddMenuInputContext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnChangePlayerMappedKey
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MappingName                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             NewKey                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// EPlayerMappableKeySlot                  Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::OnChangePlayerMappedKey(const class FName MappingName, const struct FKey& NewKey, EPlayerMappableKeySlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnChangePlayerMappedKey");

	Params::BP_MenuControllerComponent_C_OnChangePlayerMappedKey Parms{};

	Parms.MappingName = MappingName;
	Parms.NewKey = std::move(NewKey);
	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnRegisterInputMappingContexts
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnRegisterInputMappingContexts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnRegisterInputMappingContexts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnRemoveMenuInputContext
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnRemoveMenuInputContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnRemoveMenuInputContext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnRequestRebuildControlMappings
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnRequestRebuildControlMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnRequestRebuildControlMappings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnResetAllInputUserSettings
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnResetAllInputUserSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnResetAllInputUserSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnResetPlayerKeyMapping
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInputMappingContext*             InputMappingContext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FPlayerKeyMapping                PlayerKeyMapping                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::OnResetPlayerKeyMapping(class UInputMappingContext* InputMappingContext, const struct FPlayerKeyMapping& PlayerKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnResetPlayerKeyMapping");

	Params::BP_MenuControllerComponent_C_OnResetPlayerKeyMapping Parms{};

	Parms.InputMappingContext = InputMappingContext;
	Parms.PlayerKeyMapping = std::move(PlayerKeyMapping);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnResumeGameMode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnResumeGameMode__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnResumeGameMode__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnSetActiveKeyProfile
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     KeyProfile                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::OnSetActiveKeyProfile(const struct FGameplayTag& KeyProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnSetActiveKeyProfile");

	Params::BP_MenuControllerComponent_C_OnSetActiveKeyProfile Parms{};

	Parms.KeyProfile = std::move(KeyProfile);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OnSetupErrorCheck
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::OnSetupErrorCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OnSetupErrorCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OpenDocumentsMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputDeviceType                        Param_CurrentInputDevice                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::OpenDocumentsMenu(EInputDeviceType Param_CurrentInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OpenDocumentsMenu");

	Params::BP_MenuControllerComponent_C_OpenDocumentsMenu Parms{};

	Parms.Param_CurrentInputDevice = Param_CurrentInputDevice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OpenInventoryMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputDeviceType                        Param_CurrentInputDevice                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::OpenInventoryMenu(EInputDeviceType Param_CurrentInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OpenInventoryMenu");

	Params::BP_MenuControllerComponent_C_OpenInventoryMenu Parms{};

	Parms.Param_CurrentInputDevice = Param_CurrentInputDevice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.OpenTooltip_Menu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputDeviceType                        Param_CurrentInputDevice                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::OpenTooltip_Menu(EInputDeviceType Param_CurrentInputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "OpenTooltip_Menu");

	Params::BP_MenuControllerComponent_C_OpenTooltip_Menu Parms{};

	Parms.Param_CurrentInputDevice = Param_CurrentInputDevice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.Pause
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInputDeviceType                        InputDeviceType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TooltipON_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EndingSkech_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Inventory_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::Pause(class APlayerController* PlayerController, EInputDeviceType InputDeviceType, bool TooltipON_, bool EndingSkech_, bool Inventory_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "Pause");

	Params::BP_MenuControllerComponent_C_Pause Parms{};

	Parms.PlayerController = PlayerController;
	Parms.InputDeviceType = InputDeviceType;
	Parms.TooltipON_ = TooltipON_;
	Parms.EndingSkech_ = EndingSkech_;
	Parms.Inventory_ = Inventory_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_MenuControllerComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.Resume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuControllerComponent_C::Resume(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "Resume");

	Params::BP_MenuControllerComponent_C_Resume Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.Rumble
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::Rumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "Rumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuControllerComponent.BP_MenuControllerComponent_C.UpdateControlsValuesFromConfig
// (BlueprintCallable, BlueprintEvent)

void UBP_MenuControllerComponent_C::UpdateControlsValuesFromConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuControllerComponent_C", "UpdateControlsValuesFromConfig");

	UObject::ProcessEvent(Func, nullptr);
}

}

