#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoverNotImage_CenterButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HoverNotImage_CenterButton.HoverNotImage_CenterButton_C.ExecuteUbergraph_HoverNotImage_CenterButton
// 0x0018 (0x0018 - 0x0000)
struct HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsHovered;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlaySound;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton) == 0x000008, "Wrong alignment on HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton");
static_assert(sizeof(HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton) == 0x000018, "Wrong size on HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton");
static_assert(offsetof(HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton, EntryPoint) == 0x000000, "Member 'HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton, K2Node_Event_bIsHovered) == 0x000010, "Member 'HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton::K2Node_Event_bIsHovered' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton, K2Node_Event_bPlaySound) == 0x000011, "Member 'HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton::K2Node_Event_bPlaySound' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton, K2Node_Event_IsDesignTime) == 0x000012, "Member 'HoverNotImage_CenterButton_C_ExecuteUbergraph_HoverNotImage_CenterButton::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function HoverNotImage_CenterButton.HoverNotImage_CenterButton_C.GetBrush
// 0x01D0 (0x01D0 - 0x0000)
struct HoverNotImage_CenterButton_C_GetBrush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FVector2D                              Ekey_Size;                                         // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Ekey_Image;                                        // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BE[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00F0(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x01C0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HoverNotImage_CenterButton_C_GetBrush) == 0x000010, "Wrong alignment on HoverNotImage_CenterButton_C_GetBrush");
static_assert(sizeof(HoverNotImage_CenterButton_C_GetBrush) == 0x0001D0, "Wrong size on HoverNotImage_CenterButton_C_GetBrush");
static_assert(offsetof(HoverNotImage_CenterButton_C_GetBrush, ReturnValue) == 0x000000, "Member 'HoverNotImage_CenterButton_C_GetBrush::ReturnValue' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_GetBrush, Ekey_Size) == 0x0000D0, "Member 'HoverNotImage_CenterButton_C_GetBrush::Ekey_Size' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_GetBrush, Ekey_Image) == 0x0000E0, "Member 'HoverNotImage_CenterButton_C_GetBrush::Ekey_Image' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_GetBrush, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed) == 0x0000E8, "Member 'HoverNotImage_CenterButton_C_GetBrush::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_GetBrush, K2Node_MakeStruct_SlateBrush) == 0x0000F0, "Member 'HoverNotImage_CenterButton_C_GetBrush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_GetBrush, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0001C0, "Member 'HoverNotImage_CenterButton_C_GetBrush::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function HoverNotImage_CenterButton.HoverNotImage_CenterButton_C.OnSetHoverEffect
// 0x0002 (0x0002 - 0x0000)
struct HoverNotImage_CenterButton_C_OnSetHoverEffect final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HoverNotImage_CenterButton_C_OnSetHoverEffect) == 0x000001, "Wrong alignment on HoverNotImage_CenterButton_C_OnSetHoverEffect");
static_assert(sizeof(HoverNotImage_CenterButton_C_OnSetHoverEffect) == 0x000002, "Wrong size on HoverNotImage_CenterButton_C_OnSetHoverEffect");
static_assert(offsetof(HoverNotImage_CenterButton_C_OnSetHoverEffect, bIsHovered) == 0x000000, "Member 'HoverNotImage_CenterButton_C_OnSetHoverEffect::bIsHovered' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_OnSetHoverEffect, bPlaySound) == 0x000001, "Member 'HoverNotImage_CenterButton_C_OnSetHoverEffect::bPlaySound' has a wrong offset!");

// Function HoverNotImage_CenterButton.HoverNotImage_CenterButton_C.SetGlobalSettings
// 0x0010 (0x0010 - 0x0000)
struct HoverNotImage_CenterButton_C_SetGlobalSettings final
{
public:
	struct FLinearColor                           CustomColor;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HoverNotImage_CenterButton_C_SetGlobalSettings) == 0x000004, "Wrong alignment on HoverNotImage_CenterButton_C_SetGlobalSettings");
static_assert(sizeof(HoverNotImage_CenterButton_C_SetGlobalSettings) == 0x000010, "Wrong size on HoverNotImage_CenterButton_C_SetGlobalSettings");
static_assert(offsetof(HoverNotImage_CenterButton_C_SetGlobalSettings, CustomColor) == 0x000000, "Member 'HoverNotImage_CenterButton_C_SetGlobalSettings::CustomColor' has a wrong offset!");

// Function HoverNotImage_CenterButton.HoverNotImage_CenterButton_C.SetHoverEffect
// 0x0010 (0x0010 - 0x0000)
struct HoverNotImage_CenterButton_C_SetHoverEffect final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HoverNotImage_CenterButton_C_SetHoverEffect) == 0x000008, "Wrong alignment on HoverNotImage_CenterButton_C_SetHoverEffect");
static_assert(sizeof(HoverNotImage_CenterButton_C_SetHoverEffect) == 0x000010, "Wrong size on HoverNotImage_CenterButton_C_SetHoverEffect");
static_assert(offsetof(HoverNotImage_CenterButton_C_SetHoverEffect, bIsHovered) == 0x000000, "Member 'HoverNotImage_CenterButton_C_SetHoverEffect::bIsHovered' has a wrong offset!");
static_assert(offsetof(HoverNotImage_CenterButton_C_SetHoverEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'HoverNotImage_CenterButton_C_SetHoverEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function HoverNotImage_CenterButton.HoverNotImage_CenterButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HoverNotImage_CenterButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HoverNotImage_CenterButton_C_PreConstruct) == 0x000001, "Wrong alignment on HoverNotImage_CenterButton_C_PreConstruct");
static_assert(sizeof(HoverNotImage_CenterButton_C_PreConstruct) == 0x000001, "Wrong size on HoverNotImage_CenterButton_C_PreConstruct");
static_assert(offsetof(HoverNotImage_CenterButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HoverNotImage_CenterButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

