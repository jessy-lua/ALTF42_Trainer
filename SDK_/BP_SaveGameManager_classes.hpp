#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SaveGameManager

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SaveGameManager.BP_SaveGameManager_C
// 0x0020 (0x0048 - 0x0028)
class UBP_SaveGameManager_C final : public UObject
{
public:
	class UBP_CustomSaveGameObject_C*             SaveGameObject;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPDA_MenuSystemConfig_C*                MenuSystemConfig;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 LastLoadedSaveSlotName;                            // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void AnySaveGameExists(const class FString& SlotPrefix, int32 Amount, int32 UserIndex, bool* bSaveGameExists);
	void CreateNewGame(const class FString& SlotName, int32 UserIndex, class FName LevelName, bool* bSuccess);
	void GetLatestSaveGame(const class FString& SlotPrefix, int32 UserIndex, int32 Amount, bool* Success, class FString* SlotName);
	void GetLevelFromCustomSaveGameObject(class FName* LevelName);
	void Initialize();
	void LoadGame(const class FString& SlotName, int32 UserIndex, class USaveGame** Param_SaveGameObject);
	void LoadSaveMetaData(const class FString& SlotName, const int32 UserIndex, class USaveGame** Param_SaveGameObject);
	void SaveGame(const class FString& SlotName, int32 UserIndex, bool* bSuccess);
	void SetCustomSaveGameObject(class USaveGame* Param_SaveGameObject);
	void SetCustomSaveGameObjectData();
	void SetInitialCustomSaveGameObjectData(class FName AreaName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SaveGameManager_C">();
	}
	static class UBP_SaveGameManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SaveGameManager_C>();
	}
};
static_assert(alignof(UBP_SaveGameManager_C) == 0x000008, "Wrong alignment on UBP_SaveGameManager_C");
static_assert(sizeof(UBP_SaveGameManager_C) == 0x000048, "Wrong size on UBP_SaveGameManager_C");
static_assert(offsetof(UBP_SaveGameManager_C, SaveGameObject) == 0x000028, "Member 'UBP_SaveGameManager_C::SaveGameObject' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameManager_C, MenuSystemConfig) == 0x000030, "Member 'UBP_SaveGameManager_C::MenuSystemConfig' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameManager_C, LastLoadedSaveSlotName) == 0x000038, "Member 'UBP_SaveGameManager_C::LastLoadedSaveSlotName' has a wrong offset!");

}

