#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FSR2Apply

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_CustomSettingsApplyClass_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FSR2Apply.BP_FSR2Apply_C
// 0x0030 (0x0060 - 0x0030)
class UBP_FSR2Apply_C final : public UBP_CustomSettingsApplyClass_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FSR2Apply_C;                     // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 FSR2Enable;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 FSR2Quality;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        QualityScreenPercentage;                           // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FSR2Apply(int32 EntryPoint);
	void OnApply(class UPDA_SettingsData_C* SettingsData, const struct FFValueTypes& Value, class UBP_SettingsManager_C* SettingsManager);
	void OnPreApply(class UPDA_SettingsData_C* SettingsData, const struct FFValueTypes& Value, class UBP_SettingsManager_C* SettingsManager);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FSR2Apply_C">();
	}
	static class UBP_FSR2Apply_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FSR2Apply_C>();
	}
};
static_assert(alignof(UBP_FSR2Apply_C) == 0x000008, "Wrong alignment on UBP_FSR2Apply_C");
static_assert(sizeof(UBP_FSR2Apply_C) == 0x000060, "Wrong size on UBP_FSR2Apply_C");
static_assert(offsetof(UBP_FSR2Apply_C, UberGraphFrame_BP_FSR2Apply_C) == 0x000030, "Member 'UBP_FSR2Apply_C::UberGraphFrame_BP_FSR2Apply_C' has a wrong offset!");
static_assert(offsetof(UBP_FSR2Apply_C, FSR2Enable) == 0x000038, "Member 'UBP_FSR2Apply_C::FSR2Enable' has a wrong offset!");
static_assert(offsetof(UBP_FSR2Apply_C, FSR2Quality) == 0x000048, "Member 'UBP_FSR2Apply_C::FSR2Quality' has a wrong offset!");
static_assert(offsetof(UBP_FSR2Apply_C, QualityScreenPercentage) == 0x000058, "Member 'UBP_FSR2Apply_C::QualityScreenPercentage' has a wrong offset!");

}

