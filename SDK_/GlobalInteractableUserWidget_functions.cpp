#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalInteractableUserWidget

#include "Basic.hpp"

#include "GlobalInteractableUserWidget_classes.hpp"
#include "GlobalInteractableUserWidget_parameters.hpp"


namespace SDK
{

// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.DelayAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 Param_DelayAnimation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TDelegate<void()>                       Delegate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::DelayAnimation(class UWidgetAnimation* Param_DelayAnimation, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "DelayAnimation");

	Params::GlobalInteractableUserWidget_C_DelayAnimation Parms{};

	Parms.Param_DelayAnimation = Param_DelayAnimation;
	Parms.Delegate = Delegate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.ExecuteUbergraph_GlobalInteractableUserWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::ExecuteUbergraph_GlobalInteractableUserWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "ExecuteUbergraph_GlobalInteractableUserWidget");

	Params::GlobalInteractableUserWidget_C_ExecuteUbergraph_GlobalInteractableUserWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetAllowNavigation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bAllowNavigation                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetAllowNavigation(bool* Param_bAllowNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetAllowNavigation");

	Params::GlobalInteractableUserWidget_C_GetAllowNavigation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bAllowNavigation != nullptr)
		*Param_bAllowNavigation = Parms.Param_bAllowNavigation;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetCurrentInputDeviceUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bIsGamepadBeingUsed                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetCurrentInputDeviceUI(bool* Param_bIsGamepadBeingUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetCurrentInputDeviceUI");

	Params::GlobalInteractableUserWidget_C_GetCurrentInputDeviceUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bIsGamepadBeingUsed != nullptr)
		*Param_bIsGamepadBeingUsed = Parms.Param_bIsGamepadBeingUsed;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalColors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     Param_MainColor                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_HighlightColor                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_HighlightExtraColor                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_MenuBackgroundColor                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_WidgetBackgroundColor                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_SymbolColor                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_SubtleColor                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_DecisionButtonColor                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_SliderBackgroundColor                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetGlobalColors(struct FLinearColor* Param_MainColor, struct FLinearColor* Param_HighlightColor, struct FLinearColor* Param_HighlightExtraColor, struct FLinearColor* Param_MenuBackgroundColor, struct FLinearColor* Param_WidgetBackgroundColor, struct FLinearColor* Param_SymbolColor, struct FLinearColor* Param_SubtleColor, struct FLinearColor* Param_DecisionButtonColor, struct FLinearColor* Param_SliderBackgroundColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalColors");

	Params::GlobalInteractableUserWidget_C_GetGlobalColors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MainColor != nullptr)
		*Param_MainColor = std::move(Parms.Param_MainColor);

	if (Param_HighlightColor != nullptr)
		*Param_HighlightColor = std::move(Parms.Param_HighlightColor);

	if (Param_HighlightExtraColor != nullptr)
		*Param_HighlightExtraColor = std::move(Parms.Param_HighlightExtraColor);

	if (Param_MenuBackgroundColor != nullptr)
		*Param_MenuBackgroundColor = std::move(Parms.Param_MenuBackgroundColor);

	if (Param_WidgetBackgroundColor != nullptr)
		*Param_WidgetBackgroundColor = std::move(Parms.Param_WidgetBackgroundColor);

	if (Param_SymbolColor != nullptr)
		*Param_SymbolColor = std::move(Parms.Param_SymbolColor);

	if (Param_SubtleColor != nullptr)
		*Param_SubtleColor = std::move(Parms.Param_SubtleColor);

	if (Param_DecisionButtonColor != nullptr)
		*Param_DecisionButtonColor = std::move(Parms.Param_DecisionButtonColor);

	if (Param_SliderBackgroundColor != nullptr)
		*Param_SliderBackgroundColor = std::move(Parms.Param_SliderBackgroundColor);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalFonts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateFontInfo                   Param_MainFont                                         (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   Param_SmallTitleFont                                   (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   Param_MediumTitleFont                                  (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   Param_LargeTitleFont                                   (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   Param_ValueFont                                        (Parm, OutParm, HasGetValueTypeHash)
// bool                                    Param_OnlyUppercase                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetGlobalFonts(struct FSlateFontInfo* Param_MainFont, struct FSlateFontInfo* Param_SmallTitleFont, struct FSlateFontInfo* Param_MediumTitleFont, struct FSlateFontInfo* Param_LargeTitleFont, struct FSlateFontInfo* Param_ValueFont, bool* Param_OnlyUppercase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalFonts");

	Params::GlobalInteractableUserWidget_C_GetGlobalFonts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MainFont != nullptr)
		*Param_MainFont = std::move(Parms.Param_MainFont);

	if (Param_SmallTitleFont != nullptr)
		*Param_SmallTitleFont = std::move(Parms.Param_SmallTitleFont);

	if (Param_MediumTitleFont != nullptr)
		*Param_MediumTitleFont = std::move(Parms.Param_MediumTitleFont);

	if (Param_LargeTitleFont != nullptr)
		*Param_LargeTitleFont = std::move(Parms.Param_LargeTitleFont);

	if (Param_ValueFont != nullptr)
		*Param_ValueFont = std::move(Parms.Param_ValueFont);

	if (Param_OnlyUppercase != nullptr)
		*Param_OnlyUppercase = Parms.Param_OnlyUppercase;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalGeneralData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bPlayFadeAnimations                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_PlayFadeAnimationLength                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_bIntroLogosSkippable                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_bIntroEnabled                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetGlobalGeneralData(bool* Param_bPlayFadeAnimations, double* Param_PlayFadeAnimationLength, bool* Param_bIntroLogosSkippable, bool* Param_bIntroEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalGeneralData");

	Params::GlobalInteractableUserWidget_C_GetGlobalGeneralData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bPlayFadeAnimations != nullptr)
		*Param_bPlayFadeAnimations = Parms.Param_bPlayFadeAnimations;

	if (Param_PlayFadeAnimationLength != nullptr)
		*Param_PlayFadeAnimationLength = Parms.Param_PlayFadeAnimationLength;

	if (Param_bIntroLogosSkippable != nullptr)
		*Param_bIntroLogosSkippable = Parms.Param_bIntroLogosSkippable;

	if (Param_bIntroEnabled != nullptr)
		*Param_bIntroEnabled = Parms.Param_bIntroEnabled;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalSounds
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USoundCue*                        Param_SelectSound                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Param_BackSound                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Param_HoverSound                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Param_ChangeSound                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Param_SliderSound                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Param_BackgroundMusic                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Param_CreditsMusic                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetGlobalSounds(class USoundCue** Param_SelectSound, class USoundCue** Param_BackSound, class USoundCue** Param_HoverSound, class USoundCue** Param_ChangeSound, class USoundCue** Param_SliderSound, class USoundCue** Param_BackgroundMusic, class USoundCue** Param_CreditsMusic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalSounds");

	Params::GlobalInteractableUserWidget_C_GetGlobalSounds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SelectSound != nullptr)
		*Param_SelectSound = Parms.Param_SelectSound;

	if (Param_BackSound != nullptr)
		*Param_BackSound = Parms.Param_BackSound;

	if (Param_HoverSound != nullptr)
		*Param_HoverSound = Parms.Param_HoverSound;

	if (Param_ChangeSound != nullptr)
		*Param_ChangeSound = Parms.Param_ChangeSound;

	if (Param_SliderSound != nullptr)
		*Param_SliderSound = Parms.Param_SliderSound;

	if (Param_BackgroundMusic != nullptr)
		*Param_BackgroundMusic = Parms.Param_BackgroundMusic;

	if (Param_CreditsMusic != nullptr)
		*Param_CreditsMusic = Parms.Param_CreditsMusic;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetIsActiveMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bIsActiveMenu                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetIsActiveMenu(bool* Param_bIsActiveMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetIsActiveMenu");

	Params::GlobalInteractableUserWidget_C_GetIsActiveMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bIsActiveMenu != nullptr)
		*Param_bIsActiveMenu = Parms.Param_bIsActiveMenu;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetIsGamepadBeingUsed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bIsGamepadBeingUsed                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetIsGamepadBeingUsed(bool* Param_bIsGamepadBeingUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetIsGamepadBeingUsed");

	Params::GlobalInteractableUserWidget_C_GetIsGamepadBeingUsed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bIsGamepadBeingUsed != nullptr)
		*Param_bIsGamepadBeingUsed = Parms.Param_bIsGamepadBeingUsed;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetIsMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bIsMenu                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetIsMenu(bool* Param_bIsMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetIsMenu");

	Params::GlobalInteractableUserWidget_C_GetIsMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bIsMenu != nullptr)
		*Param_bIsMenu = Parms.Param_bIsMenu;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnChangeInputDeviceUI__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bIsGamepadBeingUsed                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::OnChangeInputDeviceUI__DelegateSignature(bool Param_bIsGamepadBeingUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnChangeInputDeviceUI__DelegateSignature");

	Params::GlobalInteractableUserWidget_C_OnChangeInputDeviceUI__DelegateSignature Parms{};

	Parms.Param_bIsGamepadBeingUsed = Param_bIsGamepadBeingUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnGlobalSettingsApply
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnGlobalSettingsApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnGlobalSettingsApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnKeyDown");

	Params::GlobalInteractableUserWidget_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnKeyUp");

	Params::GlobalInteractableUserWidget_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnMouseButtonDown");

	Params::GlobalInteractableUserWidget_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnMouseMove");

	Params::GlobalInteractableUserWidget_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnNavigationCooldownStart
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnNavigationCooldownStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnNavigationCooldownStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedAnyKey
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedAnyKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedAnyKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedBack
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedDown
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedExtra
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedExtra()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedExtra");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedHold
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedHold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedHold");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedLeft
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedMenuLeft
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedMenuLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedMenuLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedMenuRight
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedMenuRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedMenuRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedReleased
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedReset
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedRight
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedSelect
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedUp
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "PreConstruct");

	Params::GlobalInteractableUserWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.Set Current Input Device UI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsMouseInput                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::Set_Current_Input_Device_UI(const struct FKey& InKey, bool bIsMouseInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "Set Current Input Device UI");

	Params::GlobalInteractableUserWidget_C_Set_Current_Input_Device_UI Parms{};

	Parms.InKey = std::move(InKey);
	Parms.bIsMouseInput = bIsMouseInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetActiveMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bIsActiveMenu                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetActiveMenu(bool Param_bIsActiveMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetActiveMenu");

	Params::GlobalInteractableUserWidget_C_SetActiveMenu Parms{};

	Parms.Param_bIsActiveMenu = Param_bIsActiveMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetAllowNavigation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bAllowNavigation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetAllowNavigation(bool Param_bAllowNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetAllowNavigation");

	Params::GlobalInteractableUserWidget_C_SetAllowNavigation Parms{};

	Parms.Param_bAllowNavigation = Param_bAllowNavigation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetEditableTextAppearence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEditableText*                    EditableText                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FSlateFontInfo                   Font                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetEditableTextAppearence(class UEditableText* EditableText, const struct FSlateFontInfo& Font, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetEditableTextAppearence");

	Params::GlobalInteractableUserWidget_C_SetEditableTextAppearence Parms{};

	Parms.EditableText = EditableText;
	Parms.Font = std::move(Font);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsColors
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsFonts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsFonts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsFonts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsGeneral
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsGeneral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsGeneral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsMenuKeybindings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsMenuKeybindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsMenuKeybindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsSounds
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalVariableValues
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalVariableValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalVariableValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetIsGamepadBeingUsed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bIsGamepadBeingUsed                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetIsGamepadBeingUsed(bool Param_bIsGamepadBeingUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetIsGamepadBeingUsed");

	Params::GlobalInteractableUserWidget_C_SetIsGamepadBeingUsed Parms{};

	Parms.Param_bIsGamepadBeingUsed = Param_bIsGamepadBeingUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetIsMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bIsMenu                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetIsMenu(bool Param_bIsMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetIsMenu");

	Params::GlobalInteractableUserWidget_C_SetIsMenu Parms{};

	Parms.Param_bIsMenu = Param_bIsMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetTextAppearence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       TextObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FSlateFontInfo                   Font                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetTextAppearence(class UTextBlock* TextObject, const struct FSlateFontInfo& Font, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetTextAppearence");

	Params::GlobalInteractableUserWidget_C_SetTextAppearence Parms{};

	Parms.TextObject = TextObject;
	Parms.Font = std::move(Font);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}

}

