#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FuncLib_0

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FuncLib.BP_FuncLib_C.RandomRotSeeded
// 0x0098 (0x0098 - 0x0000)
struct BP_FuncLib_C_RandomRotSeeded final
{
public:
	struct FRotator                               Min;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Max;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRandomStream                          Seed;                                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Out;                                               // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_2; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4149[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FuncLib_C_RandomRotSeeded) == 0x000008, "Wrong alignment on BP_FuncLib_C_RandomRotSeeded");
static_assert(sizeof(BP_FuncLib_C_RandomRotSeeded) == 0x000098, "Wrong size on BP_FuncLib_C_RandomRotSeeded");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, Min) == 0x000000, "Member 'BP_FuncLib_C_RandomRotSeeded::Min' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, Max) == 0x000018, "Member 'BP_FuncLib_C_RandomRotSeeded::Max' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, Seed) == 0x000030, "Member 'BP_FuncLib_C_RandomRotSeeded::Seed' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, __WorldContext) == 0x000038, "Member 'BP_FuncLib_C_RandomRotSeeded::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, Out) == 0x000040, "Member 'BP_FuncLib_C_RandomRotSeeded::Out' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_BreakRotator_Roll) == 0x000058, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_BreakRotator_Pitch) == 0x00005C, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_BreakRotator_Yaw) == 0x000060, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_BreakRotator_Roll_1) == 0x000064, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_BreakRotator_Pitch_1) == 0x000068, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_BreakRotator_Yaw_1) == 0x00006C, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000070, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000074, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_RandomFloatInRangeFromStream_ReturnValue_2) == 0x000078, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_RandomFloatInRangeFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomRotSeeded, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'BP_FuncLib_C_RandomRotSeeded::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_FuncLib.BP_FuncLib_C.RandomVectorSeeded
// 0x00E0 (0x00E0 - 0x0000)
struct BP_FuncLib_C_RandomVectorSeeded final
{
public:
	struct FVector                                Min;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Max;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          Seed;                                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_2; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414A[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_2; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_2; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FuncLib_C_RandomVectorSeeded) == 0x000008, "Wrong alignment on BP_FuncLib_C_RandomVectorSeeded");
static_assert(sizeof(BP_FuncLib_C_RandomVectorSeeded) == 0x0000E0, "Wrong size on BP_FuncLib_C_RandomVectorSeeded");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, Min) == 0x000000, "Member 'BP_FuncLib_C_RandomVectorSeeded::Min' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, Max) == 0x000018, "Member 'BP_FuncLib_C_RandomVectorSeeded::Max' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, Seed) == 0x000030, "Member 'BP_FuncLib_C_RandomVectorSeeded::Seed' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, __WorldContext) == 0x000038, "Member 'BP_FuncLib_C_RandomVectorSeeded::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, Out) == 0x000040, "Member 'BP_FuncLib_C_RandomVectorSeeded::Out' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_BreakVector_X_1) == 0x000070, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000088, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x00008C, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_ReturnValue_2) == 0x000090, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast) == 0x0000B0, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1) == 0x0000B4, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_2) == 0x0000B8, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x0000BC, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1) == 0x0000C0, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_2) == 0x0000C4, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_MakeVector_X_ImplicitCast) == 0x0000C8, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_MakeVector_Z_ImplicitCast) == 0x0000D0, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FuncLib_C_RandomVectorSeeded, CallFunc_MakeVector_Y_ImplicitCast) == 0x0000D8, "Member 'BP_FuncLib_C_RandomVectorSeeded::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");

}

