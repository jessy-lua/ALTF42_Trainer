#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsActionBinder

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function OptionsActionBinder.OptionsActionBinder_C.ChangeInputBinding
// 0x0078 (0x0078 - 0x0000)
struct OptionsActionBinder_C_ChangeInputBinding final
{
public:
	struct FInputChord                            InInputChord;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyAlreadyBound_bIsAlreadyInUse;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3390[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_IsKeyAlreadyBound_OldActionMapping;       // 0x0028(0x0028)()
	struct FInputAxisKeyMapping                   CallFunc_IsKeyAlreadyBound_OldAxisMapping;         // 0x0050(0x0028)()
};
static_assert(alignof(OptionsActionBinder_C_ChangeInputBinding) == 0x000008, "Wrong alignment on OptionsActionBinder_C_ChangeInputBinding");
static_assert(sizeof(OptionsActionBinder_C_ChangeInputBinding) == 0x000078, "Wrong size on OptionsActionBinder_C_ChangeInputBinding");
static_assert(offsetof(OptionsActionBinder_C_ChangeInputBinding, InInputChord) == 0x000000, "Member 'OptionsActionBinder_C_ChangeInputBinding::InInputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ChangeInputBinding, CallFunc_IsKeyAlreadyBound_bIsAlreadyInUse) == 0x000020, "Member 'OptionsActionBinder_C_ChangeInputBinding::CallFunc_IsKeyAlreadyBound_bIsAlreadyInUse' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ChangeInputBinding, CallFunc_IsKeyAlreadyBound_OldActionMapping) == 0x000028, "Member 'OptionsActionBinder_C_ChangeInputBinding::CallFunc_IsKeyAlreadyBound_OldActionMapping' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ChangeInputBinding, CallFunc_IsKeyAlreadyBound_OldAxisMapping) == 0x000050, "Member 'OptionsActionBinder_C_ChangeInputBinding::CallFunc_IsKeyAlreadyBound_OldAxisMapping' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.CheckIfNotSameKey
// 0x0030 (0x0030 - 0x0000)
struct OptionsActionBinder_C_CheckIfNotSameKey final
{
public:
	struct FInputChord                            InNewKey;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_2;        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_3;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_CheckIfNotSameKey) == 0x000008, "Wrong alignment on OptionsActionBinder_C_CheckIfNotSameKey");
static_assert(sizeof(OptionsActionBinder_C_CheckIfNotSameKey) == 0x000030, "Wrong size on OptionsActionBinder_C_CheckIfNotSameKey");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, InNewKey) == 0x000000, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::InNewKey' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, ReturnValue) == 0x000020, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000021, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000022, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000023, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x000024, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_EqualEqual_BoolBool_ReturnValue_2) == 0x000026, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_EqualEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_EqualEqual_BoolBool_ReturnValue_3) == 0x000027, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_EqualEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_BooleanAND_ReturnValue_1) == 0x000028, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_BooleanOR_ReturnValue) == 0x00002B, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameKey, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'OptionsActionBinder_C_CheckIfNotSameKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.CheckIfNotSameModifierKey
// 0x0002 (0x0002 - 0x0000)
struct OptionsActionBinder_C_CheckIfNotSameModifierKey final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNotSame;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_CheckIfNotSameModifierKey) == 0x000001, "Wrong alignment on OptionsActionBinder_C_CheckIfNotSameModifierKey");
static_assert(sizeof(OptionsActionBinder_C_CheckIfNotSameModifierKey) == 0x000002, "Wrong size on OptionsActionBinder_C_CheckIfNotSameModifierKey");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameModifierKey, NewParam) == 0x000000, "Member 'OptionsActionBinder_C_CheckIfNotSameModifierKey::NewParam' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_CheckIfNotSameModifierKey, IsNotSame) == 0x000001, "Member 'OptionsActionBinder_C_CheckIfNotSameModifierKey::IsNotSame' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.ExecuteUbergraph_OptionsActionBinder
// 0x0090 (0x0090 - 0x0000)
struct OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsHovered;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlaySound;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3391[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_CustomEvent_InInputChord;                   // 0x0008(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAllowNavigation_bAllowNavigation;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3392[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0030(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0050(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_2;                    // 0x0070(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder) == 0x000008, "Wrong alignment on OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder");
static_assert(sizeof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder) == 0x000090, "Wrong size on OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, EntryPoint) == 0x000000, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, K2Node_Event_bIsHovered) == 0x000004, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::K2Node_Event_bIsHovered' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, K2Node_Event_bPlaySound) == 0x000005, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::K2Node_Event_bPlaySound' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, K2Node_CustomEvent_InInputChord) == 0x000008, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::K2Node_CustomEvent_InInputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, K2Node_Event_IsDesignTime) == 0x000028, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, CallFunc_GetAllowNavigation_bAllowNavigation) == 0x000029, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::CallFunc_GetAllowNavigation_bAllowNavigation' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, K2Node_MakeStruct_InputChord) == 0x000030, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, K2Node_MakeStruct_InputChord_1) == 0x000050, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder, K2Node_MakeStruct_InputChord_2) == 0x000070, "Member 'OptionsActionBinder_C_ExecuteUbergraph_OptionsActionBinder::K2Node_MakeStruct_InputChord_2' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.Get_InputKeyName
// 0x00C0 (0x00C0 - 0x0000)
struct OptionsActionBinder_C_Get_InputKeyName final
{
public:
	class FName                                   Input_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionValueType                         Value_Type;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3393[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3394[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3395[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item;                           // 0x0050(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3396[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_Get_InputKeyName) == 0x000008, "Wrong alignment on OptionsActionBinder_C_Get_InputKeyName");
static_assert(sizeof(OptionsActionBinder_C_Get_InputKeyName) == 0x0000C0, "Wrong size on OptionsActionBinder_C_Get_InputKeyName");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, Input_Name) == 0x000000, "Member 'OptionsActionBinder_C_Get_InputKeyName::Input_Name' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, Value_Type) == 0x000008, "Member 'OptionsActionBinder_C_Get_InputKeyName::Value_Type' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, Key) == 0x000010, "Member 'OptionsActionBinder_C_Get_InputKeyName::Key' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, Temp_int_Array_Index_Variable) == 0x000028, "Member 'OptionsActionBinder_C_Get_InputKeyName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'OptionsActionBinder_C_Get_InputKeyName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_Array_Get_Item) == 0x000050, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_GetDisplayName_ReturnValue) == 0x0000A8, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B9, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_Get_InputKeyName, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'OptionsActionBinder_C_Get_InputKeyName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.GetModifierKey
// 0x0028 (0x0028 - 0x0000)
struct OptionsActionBinder_C_GetModifierKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsShift;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCtrl;                                           // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAlt;                                            // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCmd;                                            // 0x001B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_5;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_6;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_7;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_GetModifierKey) == 0x000008, "Wrong alignment on OptionsActionBinder_C_GetModifierKey");
static_assert(sizeof(OptionsActionBinder_C_GetModifierKey) == 0x000028, "Wrong size on OptionsActionBinder_C_GetModifierKey");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, InKey) == 0x000000, "Member 'OptionsActionBinder_C_GetModifierKey::InKey' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, bIsShift) == 0x000018, "Member 'OptionsActionBinder_C_GetModifierKey::bIsShift' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, bIsCtrl) == 0x000019, "Member 'OptionsActionBinder_C_GetModifierKey::bIsCtrl' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, bIsAlt) == 0x00001A, "Member 'OptionsActionBinder_C_GetModifierKey::bIsAlt' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, bIsCmd) == 0x00001B, "Member 'OptionsActionBinder_C_GetModifierKey::bIsCmd' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00001C, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00001D, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00001E, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00001F, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x000021, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue_5) == 0x000022, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_BooleanOR_ReturnValue_1) == 0x000023, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue_6) == 0x000024, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_EqualEqual_KeyKey_ReturnValue_7) == 0x000025, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_EqualEqual_KeyKey_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_BooleanOR_ReturnValue_2) == 0x000026, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_GetModifierKey, CallFunc_BooleanOR_ReturnValue_3) == 0x000027, "Member 'OptionsActionBinder_C_GetModifierKey::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.IsBlacklistedKey
// 0x0048 (0x0048 - 0x0000)
struct OptionsActionBinder_C_IsBlacklistedKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsBlacklisted;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3397[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           BlacklistedKeys;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FKey>                           K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_IsBlacklistedKey) == 0x000008, "Wrong alignment on OptionsActionBinder_C_IsBlacklistedKey");
static_assert(sizeof(OptionsActionBinder_C_IsBlacklistedKey) == 0x000048, "Wrong size on OptionsActionBinder_C_IsBlacklistedKey");
static_assert(offsetof(OptionsActionBinder_C_IsBlacklistedKey, InKey) == 0x000000, "Member 'OptionsActionBinder_C_IsBlacklistedKey::InKey' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsBlacklistedKey, bIsBlacklisted) == 0x000018, "Member 'OptionsActionBinder_C_IsBlacklistedKey::bIsBlacklisted' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsBlacklistedKey, BlacklistedKeys) == 0x000020, "Member 'OptionsActionBinder_C_IsBlacklistedKey::BlacklistedKeys' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsBlacklistedKey, K2Node_MakeArray_Array) == 0x000030, "Member 'OptionsActionBinder_C_IsBlacklistedKey::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsBlacklistedKey, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'OptionsActionBinder_C_IsBlacklistedKey::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.IsKeyAlreadyBound
// 0x0248 (0x0248 - 0x0000)
struct OptionsActionBinder_C_IsKeyAlreadyBound final
{
public:
	struct FInputChord                            InInputChord;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsGamepad;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAlreadyInUse;                                   // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3398[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 Param_OldActionMapping;                            // 0x0028(0x0028)(Parm, OutParm)
	struct FInputAxisKeyMapping                   Param_OldAxisMapping;                              // 0x0050(0x0028)(Parm, OutParm)
	struct FInputChord                            InputChord;                                        // 0x0078(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   OldInputAxis;                                      // 0x0098(0x0028)(Edit, BlueprintVisible)
	struct FInputActionKeyMapping                 OldInputAction;                                    // 0x00C0(0x0028)(Edit, BlueprintVisible)
	bool                                          bIsGamepadButton;                                  // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3399[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0100(0x0020)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339A[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_InputChordInputChord_ReturnValue; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339B[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0148(0x0020)(HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_InputChordInputChord_ReturnValue_1; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339C[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAxisNames_AxisNames;                   // 0x0178(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339D[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0198(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339E[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339F[0x2];                                     // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetActionNames_ActionNames;               // 0x01E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A0[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0208(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_3;                         // 0x0218(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_IsKeyAlreadyBound) == 0x000008, "Wrong alignment on OptionsActionBinder_C_IsKeyAlreadyBound");
static_assert(sizeof(OptionsActionBinder_C_IsKeyAlreadyBound) == 0x000248, "Wrong size on OptionsActionBinder_C_IsKeyAlreadyBound");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, InInputChord) == 0x000000, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::InInputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, bIsGamepad) == 0x000020, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::bIsGamepad' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, bIsAlreadyInUse) == 0x000021, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::bIsAlreadyInUse' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Param_OldActionMapping) == 0x000028, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Param_OldActionMapping' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Param_OldAxisMapping) == 0x000050, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Param_OldAxisMapping' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, InputChord) == 0x000078, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, OldInputAxis) == 0x000098, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::OldInputAxis' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, OldInputAction) == 0x0000C0, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::OldInputAction' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, bIsGamepadButton) == 0x0000E8, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::bIsGamepadButton' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Loop_Counter_Variable_1) == 0x0000F4, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F8, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, K2Node_MakeStruct_InputChord) == 0x000100, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Loop_Counter_Variable_2) == 0x000120, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000124, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Add_IntInt_ReturnValue_2) == 0x000128, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Array_Index_Variable_1) == 0x00012C, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Array_Index_Variable_2) == 0x000130, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Loop_Counter_Variable_3) == 0x000134, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Add_IntInt_ReturnValue_3) == 0x000138, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, Temp_int_Array_Index_Variable_3) == 0x00013C, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_EqualEqual_InputChordInputChord_ReturnValue) == 0x000140, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_EqualEqual_InputChordInputChord_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, K2Node_MakeStruct_InputChord_1) == 0x000148, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_GetInputSettings_ReturnValue) == 0x000168, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_EqualEqual_InputChordInputChord_ReturnValue_1) == 0x000170, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_EqualEqual_InputChordInputChord_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_GetAxisNames_AxisNames) == 0x000178, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_GetAxisNames_AxisNames' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Get_Item) == 0x000188, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_GetAxisMappingByName_OutMappings) == 0x000198, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Length_ReturnValue_1) == 0x0001D8, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001DC, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x0001DD, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_GetInputSettings_ReturnValue_1) == 0x0001E0, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_GetActionNames_ActionNames) == 0x0001E8, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_GetActionNames_ActionNames' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Length_ReturnValue_2) == 0x0001F8, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Get_Item_2) == 0x0001FC, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Less_IntInt_ReturnValue_2) == 0x000204, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_GetActionMappingByName_OutMappings) == 0x000208, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Get_Item_3) == 0x000218, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Array_Length_ReturnValue_3) == 0x000240, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_IsKeyAlreadyBound, CallFunc_Less_IntInt_ReturnValue_3) == 0x000244, "Member 'OptionsActionBinder_C_IsKeyAlreadyBound::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.OnEndKeyChange
// 0x0020 (0x0020 - 0x0000)
struct OptionsActionBinder_C_OnEndKeyChange final
{
public:
	struct FInputChord                            InInputChord;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_OnEndKeyChange) == 0x000008, "Wrong alignment on OptionsActionBinder_C_OnEndKeyChange");
static_assert(sizeof(OptionsActionBinder_C_OnEndKeyChange) == 0x000020, "Wrong size on OptionsActionBinder_C_OnEndKeyChange");
static_assert(offsetof(OptionsActionBinder_C_OnEndKeyChange, InInputChord) == 0x000000, "Member 'OptionsActionBinder_C_OnEndKeyChange::InInputChord' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.OnKeyUp
// 0x0578 (0x0578 - 0x0000)
struct OptionsActionBinder_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   KeyStruct;                                         // 0x0130(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0148(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnKeyUp_ReturnValue;                      // 0x0160(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0218(0x00B8)()
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x02D0(0x0020)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x02F0(0x00B8)()
	bool                                          CallFunc_CheckIfNotSameKey_ReturnValue;            // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A1[0x7];                                     // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_2;                  // 0x03B0(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_3;                  // 0x0468(0x00B8)()
	bool                                          CallFunc_Key_IsModifierKey_ReturnValue;            // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A2[0x7];                                     // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0528(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetModifierKey_bIsShift;                  // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetModifierKey_bIsCtrl;                   // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetModifierKey_bIsAlt;                    // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetModifierKey_bIsCmd;                    // 0x054B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfNotSameKey_ReturnValue_1;          // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A3[0x3];                                     // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord_2;                    // 0x0550(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfNotSameKey_ReturnValue_2;          // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBlacklistedKey_bIsBlacklisted;          // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_OnKeyUp) == 0x000008, "Wrong alignment on OptionsActionBinder_C_OnKeyUp");
static_assert(sizeof(OptionsActionBinder_C_OnKeyUp) == 0x000578, "Wrong size on OptionsActionBinder_C_OnKeyUp");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'OptionsActionBinder_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'OptionsActionBinder_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'OptionsActionBinder_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, KeyStruct) == 0x000130, "Member 'OptionsActionBinder_C_OnKeyUp::KeyStruct' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000148, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_OnKeyUp_ReturnValue) == 0x000160, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_OnKeyUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000218, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, K2Node_MakeStruct_InputChord) == 0x0002D0, "Member 'OptionsActionBinder_C_OnKeyUp::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_Unhandled_ReturnValue_1) == 0x0002F0, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_CheckIfNotSameKey_ReturnValue) == 0x0003A8, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_CheckIfNotSameKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_Unhandled_ReturnValue_2) == 0x0003B0, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_Unhandled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_Unhandled_ReturnValue_3) == 0x000468, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_Unhandled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_Key_IsModifierKey_ReturnValue) == 0x000520, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_Key_IsModifierKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, K2Node_MakeStruct_InputChord_1) == 0x000528, "Member 'OptionsActionBinder_C_OnKeyUp::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_GetModifierKey_bIsShift) == 0x000548, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_GetModifierKey_bIsShift' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_GetModifierKey_bIsCtrl) == 0x000549, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_GetModifierKey_bIsCtrl' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_GetModifierKey_bIsAlt) == 0x00054A, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_GetModifierKey_bIsAlt' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_GetModifierKey_bIsCmd) == 0x00054B, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_GetModifierKey_bIsCmd' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_CheckIfNotSameKey_ReturnValue_1) == 0x00054C, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_CheckIfNotSameKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, K2Node_MakeStruct_InputChord_2) == 0x000550, "Member 'OptionsActionBinder_C_OnKeyUp::K2Node_MakeStruct_InputChord_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_CheckIfNotSameKey_ReturnValue_2) == 0x000570, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_CheckIfNotSameKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnKeyUp, CallFunc_IsBlacklistedKey_bIsBlacklisted) == 0x000571, "Member 'OptionsActionBinder_C_OnKeyUp::CallFunc_IsBlacklistedKey_bIsBlacklisted' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.OnMouseWheel
// 0x02A0 (0x02A0 - 0x0000)
struct OptionsActionBinder_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A4[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0170(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A5[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0198(0x0020)(HasGetValueTypeHash)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x01B8(0x00B8)()
	struct FInputChord                            K2Node_Select_Default;                             // 0x0270(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfNotSameKey_ReturnValue;            // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBlacklistedKey_bIsBlacklisted;          // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A6[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_OnMouseWheel) == 0x000008, "Wrong alignment on OptionsActionBinder_C_OnMouseWheel");
static_assert(sizeof(OptionsActionBinder_C_OnMouseWheel) == 0x0002A0, "Wrong size on OptionsActionBinder_C_OnMouseWheel");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'OptionsActionBinder_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'OptionsActionBinder_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, ReturnValue) == 0x0000B0, "Member 'OptionsActionBinder_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, Temp_bool_Variable) == 0x000168, "Member 'OptionsActionBinder_C_OnMouseWheel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x00016C, "Member 'OptionsActionBinder_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, K2Node_MakeStruct_InputChord) == 0x000170, "Member 'OptionsActionBinder_C_OnMouseWheel::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000190, "Member 'OptionsActionBinder_C_OnMouseWheel::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, K2Node_MakeStruct_InputChord_1) == 0x000198, "Member 'OptionsActionBinder_C_OnMouseWheel::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, K2Node_MakeStruct_EventReply) == 0x0001B8, "Member 'OptionsActionBinder_C_OnMouseWheel::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, K2Node_Select_Default) == 0x000270, "Member 'OptionsActionBinder_C_OnMouseWheel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, CallFunc_CheckIfNotSameKey_ReturnValue) == 0x000290, "Member 'OptionsActionBinder_C_OnMouseWheel::CallFunc_CheckIfNotSameKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, CallFunc_IsBlacklistedKey_bIsBlacklisted) == 0x000291, "Member 'OptionsActionBinder_C_OnMouseWheel::CallFunc_IsBlacklistedKey_bIsBlacklisted' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnMouseWheel, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000298, "Member 'OptionsActionBinder_C_OnMouseWheel::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.OnPreviewKeyDown
// 0x0208 (0x0208 - 0x0000)
struct OptionsActionBinder_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsModifierKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on OptionsActionBinder_C_OnPreviewKeyDown");
static_assert(sizeof(OptionsActionBinder_C_OnPreviewKeyDown) == 0x000208, "Wrong size on OptionsActionBinder_C_OnPreviewKeyDown");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'OptionsActionBinder_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'OptionsActionBinder_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'OptionsActionBinder_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000130, "Member 'OptionsActionBinder_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'OptionsActionBinder_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewKeyDown, CallFunc_Key_IsModifierKey_ReturnValue) == 0x000200, "Member 'OptionsActionBinder_C_OnPreviewKeyDown::CallFunc_Key_IsModifierKey_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.OnPreviewMouseButtonDown
// 0x0288 (0x0288 - 0x0000)
struct OptionsActionBinder_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsBlacklistedKey_bIsBlacklisted;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A7[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0188(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x01A8(0x0020)(HasGetValueTypeHash)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x01C8(0x00B8)()
	bool                                          CallFunc_CheckIfNotSameKey_ReturnValue;            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on OptionsActionBinder_C_OnPreviewMouseButtonDown");
static_assert(sizeof(OptionsActionBinder_C_OnPreviewMouseButtonDown) == 0x000288, "Wrong size on OptionsActionBinder_C_OnPreviewMouseButtonDown");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, CallFunc_IsBlacklistedKey_bIsBlacklisted) == 0x000180, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::CallFunc_IsBlacklistedKey_bIsBlacklisted' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, K2Node_MakeStruct_InputChord) == 0x000188, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, K2Node_MakeStruct_InputChord_1) == 0x0001A8, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, K2Node_MakeStruct_EventReply) == 0x0001C8, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnPreviewMouseButtonDown, CallFunc_CheckIfNotSameKey_ReturnValue) == 0x000280, "Member 'OptionsActionBinder_C_OnPreviewMouseButtonDown::CallFunc_CheckIfNotSameKey_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.OnSetHoverEffect
// 0x0002 (0x0002 - 0x0000)
struct OptionsActionBinder_C_OnSetHoverEffect final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_OnSetHoverEffect) == 0x000001, "Wrong alignment on OptionsActionBinder_C_OnSetHoverEffect");
static_assert(sizeof(OptionsActionBinder_C_OnSetHoverEffect) == 0x000002, "Wrong size on OptionsActionBinder_C_OnSetHoverEffect");
static_assert(offsetof(OptionsActionBinder_C_OnSetHoverEffect, bIsHovered) == 0x000000, "Member 'OptionsActionBinder_C_OnSetHoverEffect::bIsHovered' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_OnSetHoverEffect, bPlaySound) == 0x000001, "Member 'OptionsActionBinder_C_OnSetHoverEffect::bPlaySound' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.RebindInput
// 0x0130 (0x0130 - 0x0000)
struct OptionsActionBinder_C_RebindInput final
{
public:
	bool                                          bRemoveOld;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0008(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0028(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0068(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_3;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_1;           // 0x0098(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_4;           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x00C8(0x0028)()
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping_1;         // 0x00F0(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_5;           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_6;           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Scale_ImplicitCast;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_RebindInput) == 0x000008, "Wrong alignment on OptionsActionBinder_C_RebindInput");
static_assert(sizeof(OptionsActionBinder_C_RebindInput) == 0x000130, "Wrong size on OptionsActionBinder_C_RebindInput");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, bRemoveOld) == 0x000000, "Member 'OptionsActionBinder_C_RebindInput::bRemoveOld' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, K2Node_MakeStruct_InputChord) == 0x000008, "Member 'OptionsActionBinder_C_RebindInput::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, K2Node_MakeStruct_InputChord_1) == 0x000028, "Member 'OptionsActionBinder_C_RebindInput::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000048, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_GetInputSettings_ReturnValue) == 0x000050, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_GetInputSettings_ReturnValue_1) == 0x000058, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_GetInputSettings_ReturnValue_2) == 0x000060, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_GetInputSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000068, "Member 'OptionsActionBinder_C_RebindInput::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_GetInputSettings_ReturnValue_3) == 0x000090, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_GetInputSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, K2Node_MakeStruct_InputAxisKeyMapping_1) == 0x000098, "Member 'OptionsActionBinder_C_RebindInput::K2Node_MakeStruct_InputAxisKeyMapping_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_GetInputSettings_ReturnValue_4) == 0x0000C0, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_GetInputSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, K2Node_MakeStruct_InputActionKeyMapping) == 0x0000C8, "Member 'OptionsActionBinder_C_RebindInput::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, K2Node_MakeStruct_InputActionKeyMapping_1) == 0x0000F0, "Member 'OptionsActionBinder_C_RebindInput::K2Node_MakeStruct_InputActionKeyMapping_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_GetInputSettings_ReturnValue_5) == 0x000118, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_GetInputSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, CallFunc_GetInputSettings_ReturnValue_6) == 0x000120, "Member 'OptionsActionBinder_C_RebindInput::CallFunc_GetInputSettings_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_RebindInput, K2Node_MakeStruct_Scale_ImplicitCast) == 0x000128, "Member 'OptionsActionBinder_C_RebindInput::K2Node_MakeStruct_Scale_ImplicitCast' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.SetAllowMenuNavigation
// 0x0001 (0x0001 - 0x0000)
struct OptionsActionBinder_C_SetAllowMenuNavigation final
{
public:
	bool                                          bIsAllowed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_SetAllowMenuNavigation) == 0x000001, "Wrong alignment on OptionsActionBinder_C_SetAllowMenuNavigation");
static_assert(sizeof(OptionsActionBinder_C_SetAllowMenuNavigation) == 0x000001, "Wrong size on OptionsActionBinder_C_SetAllowMenuNavigation");
static_assert(offsetof(OptionsActionBinder_C_SetAllowMenuNavigation, bIsAllowed) == 0x000000, "Member 'OptionsActionBinder_C_SetAllowMenuNavigation::bIsAllowed' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.SetCurrentActionMapping
// 0x0088 (0x0088 - 0x0000)
struct OptionsActionBinder_C_SetCurrentActionMapping final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x0008(0x0028)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AA[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AB[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0058(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_SetCurrentActionMapping) == 0x000008, "Wrong alignment on OptionsActionBinder_C_SetCurrentActionMapping");
static_assert(sizeof(OptionsActionBinder_C_SetCurrentActionMapping) == 0x000088, "Wrong size on OptionsActionBinder_C_SetCurrentActionMapping");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, Temp_int_Array_Index_Variable) == 0x000000, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, K2Node_MakeStruct_InputActionKeyMapping) == 0x000008, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, CallFunc_GetInputSettings_ReturnValue) == 0x000038, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, CallFunc_GetActionMappingByName_OutMappings) == 0x000040, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, CallFunc_Array_Get_Item) == 0x000058, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentActionMapping, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000081, "Member 'OptionsActionBinder_C_SetCurrentActionMapping::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.SetCurrentAxisMapping
// 0x0090 (0x0090 - 0x0000)
struct OptionsActionBinder_C_SetCurrentAxisMapping final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0008(0x0028)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AD[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0058(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AE[0x1];                                     // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Scale_ImplicitCast;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_SetCurrentAxisMapping) == 0x000008, "Wrong alignment on OptionsActionBinder_C_SetCurrentAxisMapping");
static_assert(sizeof(OptionsActionBinder_C_SetCurrentAxisMapping) == 0x000090, "Wrong size on OptionsActionBinder_C_SetCurrentAxisMapping");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, Temp_int_Array_Index_Variable) == 0x000000, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000008, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_GetInputSettings_ReturnValue) == 0x000038, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_GetAxisMappingByName_OutMappings) == 0x000040, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_Array_Get_Item) == 0x000058, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000081, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000082, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, K2Node_MakeStruct_Scale_ImplicitCast) == 0x000084, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::K2Node_MakeStruct_Scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetCurrentAxisMapping, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'OptionsActionBinder_C_SetCurrentAxisMapping::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.SetGlobalSettings
// 0x0650 (0x0650 - 0x0000)
struct OptionsActionBinder_C_SetGlobalSettings final
{
public:
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor;                // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_1;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_1;         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_1;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_1;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_1;  // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_1;            // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_1;            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_1;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_1;  // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_2;              // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_2;         // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_2;    // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_2;    // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_2;  // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_2;            // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_2;            // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_2;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_2;  // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_3;              // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_3;         // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_3;    // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_3;    // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_3;  // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_3;            // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_3;            // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_3;    // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_3;  // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont;                  // 0x0240(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont;            // 0x0298(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont;           // 0x02F0(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont;            // 0x0348(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont;                 // 0x03A0(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase;             // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AF[0x3];                                     // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_4;              // 0x03FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_4;         // 0x040C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_4;    // 0x041C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_4;    // 0x042C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_4;  // 0x043C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_4;            // 0x044C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_4;            // 0x045C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_4;    // 0x046C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_4;  // 0x047C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B0[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont_1;                // 0x0490(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont_1;          // 0x04E8(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont_1;         // 0x0540(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont_1;          // 0x0598(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont_1;               // 0x05F0(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase_1;           // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_SetGlobalSettings) == 0x000008, "Wrong alignment on OptionsActionBinder_C_SetGlobalSettings");
static_assert(sizeof(OptionsActionBinder_C_SetGlobalSettings) == 0x000650, "Wrong size on OptionsActionBinder_C_SetGlobalSettings");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor) == 0x000000, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor) == 0x000010, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor) == 0x000020, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor) == 0x000030, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor) == 0x000040, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor) == 0x000050, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor) == 0x000060, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor) == 0x000070, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor) == 0x000080, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_1) == 0x000090, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_1) == 0x0000A0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_1) == 0x0000B0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_1) == 0x0000C0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_1) == 0x0000D0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_1) == 0x0000E0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_1) == 0x0000F0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_1) == 0x000100, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_1) == 0x000110, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_2) == 0x000120, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_2) == 0x000130, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_2) == 0x000140, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_2) == 0x000150, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_2) == 0x000160, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_2) == 0x000170, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_2) == 0x000180, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_2) == 0x000190, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_2) == 0x0001A0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_3) == 0x0001B0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_3) == 0x0001C0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_3) == 0x0001D0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_3) == 0x0001E0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_3) == 0x0001F0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_3) == 0x000200, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_3) == 0x000210, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_3) == 0x000220, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_3) == 0x000230, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont) == 0x000240, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont) == 0x000298, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont) == 0x0002F0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont) == 0x000348, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont) == 0x0003A0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase) == 0x0003F8, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_4) == 0x0003FC, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_4) == 0x00040C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_4) == 0x00041C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_4) == 0x00042C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_4) == 0x00043C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_4) == 0x00044C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_4) == 0x00045C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_4) == 0x00046C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_4) == 0x00047C, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont_1) == 0x000490, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont_1) == 0x0004E8, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont_1) == 0x000540, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont_1) == 0x000598, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont_1) == 0x0005F0, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase_1) == 0x000648, "Member 'OptionsActionBinder_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase_1' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.SetHoverEffect
// 0x0010 (0x0010 - 0x0000)
struct OptionsActionBinder_C_SetHoverEffect final
{
public:
	bool                                          Param_IsHovered;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_SetHoverEffect) == 0x000008, "Wrong alignment on OptionsActionBinder_C_SetHoverEffect");
static_assert(sizeof(OptionsActionBinder_C_SetHoverEffect) == 0x000010, "Wrong size on OptionsActionBinder_C_SetHoverEffect");
static_assert(offsetof(OptionsActionBinder_C_SetHoverEffect, Param_IsHovered) == 0x000000, "Member 'OptionsActionBinder_C_SetHoverEffect::Param_IsHovered' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetHoverEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'OptionsActionBinder_C_SetHoverEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.SetKeyTextOrIcon
// 0x0198 (0x0198 - 0x0000)
struct OptionsActionBinder_C_SetKeyTextOrIcon final
{
public:
	struct FInputChord                            InInputChord;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsWaitingForInput;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B2[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   NewLocalVar_0;                                     // 0x0028(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          bIsWaiting;                                        // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            InputChord;                                        // 0x0048(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B4[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x00F0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0158(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B5[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B6[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGamepadKey_C*                          CallFunc_Array_Get_Item;                           // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B7[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_SetKeyTextOrIcon) == 0x000008, "Wrong alignment on OptionsActionBinder_C_SetKeyTextOrIcon");
static_assert(sizeof(OptionsActionBinder_C_SetKeyTextOrIcon) == 0x000198, "Wrong size on OptionsActionBinder_C_SetKeyTextOrIcon");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, InInputChord) == 0x000000, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::InInputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, bIsWaitingForInput) == 0x000020, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::bIsWaitingForInput' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, NewLocalVar_0) == 0x000028, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, bIsWaiting) == 0x000040, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::bIsWaiting' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, InputChord) == 0x000048, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, Temp_bool_True_if_break_was_hit_Variable) == 0x000068, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A0, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_SelectString_ReturnValue) == 0x0000B0, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_SelectString_ReturnValue_1) == 0x0000C0, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_SelectString_ReturnValue_2) == 0x0000D0, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_SelectString_ReturnValue_3) == 0x0000E0, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0000F0, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000108, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Conv_TextToString_ReturnValue) == 0x000118, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000128, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000138, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000148, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Conv_StringToText_ReturnValue) == 0x000158, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000170, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Not_PreBool_ReturnValue_2) == 0x000171, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, Temp_int_Loop_Counter_Variable) == 0x000174, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000178, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Array_Get_Item) == 0x000180, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000188, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Array_Length_ReturnValue) == 0x00018C, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetKeyTextOrIcon, CallFunc_BooleanAND_ReturnValue) == 0x000191, "Member 'OptionsActionBinder_C_SetKeyTextOrIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.SetupInputBinding
// 0x0040 (0x0040 - 0x0000)
struct OptionsActionBinder_C_SetupInputBinding final
{
public:
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0000(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0020(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_SetupInputBinding) == 0x000008, "Wrong alignment on OptionsActionBinder_C_SetupInputBinding");
static_assert(sizeof(OptionsActionBinder_C_SetupInputBinding) == 0x000040, "Wrong size on OptionsActionBinder_C_SetupInputBinding");
static_assert(offsetof(OptionsActionBinder_C_SetupInputBinding, K2Node_MakeStruct_InputChord) == 0x000000, "Member 'OptionsActionBinder_C_SetupInputBinding::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_SetupInputBinding, K2Node_MakeStruct_InputChord_1) == 0x000020, "Member 'OptionsActionBinder_C_SetupInputBinding::K2Node_MakeStruct_InputChord_1' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.ShowRebindDialog
// 0x0078 (0x0078 - 0x0000)
struct OptionsActionBinder_C_ShowRebindDialog final
{
public:
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed_1; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UControlsKeyBindingsWidgetBP_C*         K2Node_DynamicCast_AsControls_Key_Bindings_Widget_BP; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B9[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UControlsGamepadBindingsWidgetBP_C*     K2Node_DynamicCast_AsControls_Gamepad_Bindings_Widget_BP; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_ShowRebindDialog) == 0x000008, "Wrong alignment on OptionsActionBinder_C_ShowRebindDialog");
static_assert(sizeof(OptionsActionBinder_C_ShowRebindDialog) == 0x000078, "Wrong size on OptionsActionBinder_C_ShowRebindDialog");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed) == 0x000000, "Member 'OptionsActionBinder_C_ShowRebindDialog::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed_1) == 0x000001, "Member 'OptionsActionBinder_C_ShowRebindDialog::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'OptionsActionBinder_C_ShowRebindDialog::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'OptionsActionBinder_C_ShowRebindDialog::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_CreateDelegate_OutputDelegate_3) == 0x000048, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_DynamicCast_AsControls_Key_Bindings_Widget_BP) == 0x000058, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_DynamicCast_AsControls_Key_Bindings_Widget_BP' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_DynamicCast_AsControls_Gamepad_Bindings_Widget_BP) == 0x000068, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_DynamicCast_AsControls_Gamepad_Bindings_Widget_BP' has a wrong offset!");
static_assert(offsetof(OptionsActionBinder_C_ShowRebindDialog, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'OptionsActionBinder_C_ShowRebindDialog::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function OptionsActionBinder.OptionsActionBinder_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct OptionsActionBinder_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsActionBinder_C_PreConstruct) == 0x000001, "Wrong alignment on OptionsActionBinder_C_PreConstruct");
static_assert(sizeof(OptionsActionBinder_C_PreConstruct) == 0x000001, "Wrong size on OptionsActionBinder_C_PreConstruct");
static_assert(offsetof(OptionsActionBinder_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'OptionsActionBinder_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

