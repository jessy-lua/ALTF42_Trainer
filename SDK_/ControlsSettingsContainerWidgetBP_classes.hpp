#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlsSettingsContainerWidgetBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InteractableMenuWidgetBP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C
// 0x0070 (0x0760 - 0x06F0)
class UControlsSettingsContainerWidgetBP_C final : public UInteractableMenuWidgetBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ControlsSettingsContainerWidgetBP_C; // 0x06F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UControlsGamepadBindingsWidgetBP_C*     ControlsGamepadBindingsWidgetBP;                   // 0x06F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UControlsKeyBindingsWidgetBP_C*         ControlsKeyBindingsWidgetBP;                       // 0x0700(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UControlsOverviewWidgetBP_C*            ControlsOverviewWidgetBP;                          // 0x0708(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MenuCanvasPanel;                                   // 0x0710(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClickedBack;                                     // 0x0718(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          InvertLookXDefault;                                // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertLookYDefault;                                // 0x0729(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D9[0x6];                                     // 0x072A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraSpeedXDefault;                               // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraSpeedYDefault;                               // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RumbleDefault;                                     // 0x0740(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDirty;                                          // 0x0741(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadedInvertLookX;                                 // 0x0742(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadedInvertLookY;                                 // 0x0743(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DA[0x4];                                     // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LoadedCameraSpeedX;                                // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LoadedCameraSpeedY;                                // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadedRumble;                                      // 0x0758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyControlsSettings();
	void Construct();
	void DirtyCheck(bool* bIsReallyDirty);
	void ExecuteUbergraph_ControlsSettingsContainerWidgetBP(int32 EntryPoint);
	void GetSavedControlsSettings();
	void LoadControlsSettings();
	void MarkSettingsAsDirty();
	void OnClickedBack__DelegateSignature();
	void RemoveActionMappingByName(class FName InActionName, bool bIsGamepadMapping);
	void RemoveAxisMappingByName(class FName InAxisName, double InScale, bool bIsGamepadMapping);
	void ResetBindings(TArray<class UInteractableUserWidget_C*>& InInteractableUserWidgets, bool bIsGamepadMapping);
	void ResetControlsSettings();
	void SaveDefaultBindings();
	void SetSensivitySliderValue(class UOptionsSlider_C* InOptionsSlider, double InValue);
	void OnNavigationEnter(class UInteractableMenuWidgetBP_C* NavigateFromMenu, bool Param_bIsGamepadBeingUsed, int32 Param_PlayerIndex);
	void OnNavigationExit(class UInteractableMenuWidgetBP_C* NavigateToMenu, class UInteractableMenuWidgetBP_C* NavigateFromMenu);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ControlsSettingsContainerWidgetBP_C">();
	}
	static class UControlsSettingsContainerWidgetBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlsSettingsContainerWidgetBP_C>();
	}
};
static_assert(alignof(UControlsSettingsContainerWidgetBP_C) == 0x000008, "Wrong alignment on UControlsSettingsContainerWidgetBP_C");
static_assert(sizeof(UControlsSettingsContainerWidgetBP_C) == 0x000760, "Wrong size on UControlsSettingsContainerWidgetBP_C");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, UberGraphFrame_ControlsSettingsContainerWidgetBP_C) == 0x0006F0, "Member 'UControlsSettingsContainerWidgetBP_C::UberGraphFrame_ControlsSettingsContainerWidgetBP_C' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, ControlsGamepadBindingsWidgetBP) == 0x0006F8, "Member 'UControlsSettingsContainerWidgetBP_C::ControlsGamepadBindingsWidgetBP' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, ControlsKeyBindingsWidgetBP) == 0x000700, "Member 'UControlsSettingsContainerWidgetBP_C::ControlsKeyBindingsWidgetBP' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, ControlsOverviewWidgetBP) == 0x000708, "Member 'UControlsSettingsContainerWidgetBP_C::ControlsOverviewWidgetBP' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, MenuCanvasPanel) == 0x000710, "Member 'UControlsSettingsContainerWidgetBP_C::MenuCanvasPanel' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, OnClickedBack) == 0x000718, "Member 'UControlsSettingsContainerWidgetBP_C::OnClickedBack' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, InvertLookXDefault) == 0x000728, "Member 'UControlsSettingsContainerWidgetBP_C::InvertLookXDefault' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, InvertLookYDefault) == 0x000729, "Member 'UControlsSettingsContainerWidgetBP_C::InvertLookYDefault' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, CameraSpeedXDefault) == 0x000730, "Member 'UControlsSettingsContainerWidgetBP_C::CameraSpeedXDefault' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, CameraSpeedYDefault) == 0x000738, "Member 'UControlsSettingsContainerWidgetBP_C::CameraSpeedYDefault' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, RumbleDefault) == 0x000740, "Member 'UControlsSettingsContainerWidgetBP_C::RumbleDefault' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, bIsDirty) == 0x000741, "Member 'UControlsSettingsContainerWidgetBP_C::bIsDirty' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, LoadedInvertLookX) == 0x000742, "Member 'UControlsSettingsContainerWidgetBP_C::LoadedInvertLookX' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, LoadedInvertLookY) == 0x000743, "Member 'UControlsSettingsContainerWidgetBP_C::LoadedInvertLookY' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, LoadedCameraSpeedX) == 0x000748, "Member 'UControlsSettingsContainerWidgetBP_C::LoadedCameraSpeedX' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, LoadedCameraSpeedY) == 0x000750, "Member 'UControlsSettingsContainerWidgetBP_C::LoadedCameraSpeedY' has a wrong offset!");
static_assert(offsetof(UControlsSettingsContainerWidgetBP_C, LoadedRumble) == 0x000758, "Member 'UControlsSettingsContainerWidgetBP_C::LoadedRumble' has a wrong offset!");

}

