#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Homming_Projectile4

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Homming_Projectile4.BP_Homming_Projectile4_C
// 0x0068 (0x0300 - 0x0298)
class ABP_Homming_Projectile4_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Projectile_Tail;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       OverlapCheck;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Skull_A;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Hit_Fx;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Projectile_Main;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Homing_Speed;                                      // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_2;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         HitFx;                                             // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Homming_Projectile4_Sphere1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Homming_Projectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_Homming_Projectile4(int32 EntryPoint);
	void Find_Target(class USceneComponent** Targetwww);
	void Lock();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Homming_Projectile4_C">();
	}
	static class ABP_Homming_Projectile4_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Homming_Projectile4_C>();
	}
};
static_assert(alignof(ABP_Homming_Projectile4_C) == 0x000008, "Wrong alignment on ABP_Homming_Projectile4_C");
static_assert(sizeof(ABP_Homming_Projectile4_C) == 0x000300, "Wrong size on ABP_Homming_Projectile4_C");
static_assert(offsetof(ABP_Homming_Projectile4_C, UberGraphFrame) == 0x000298, "Member 'ABP_Homming_Projectile4_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, Projectile_Tail) == 0x0002A0, "Member 'ABP_Homming_Projectile4_C::Projectile_Tail' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, OverlapCheck) == 0x0002A8, "Member 'ABP_Homming_Projectile4_C::OverlapCheck' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, SM_Skull_A) == 0x0002B0, "Member 'ABP_Homming_Projectile4_C::SM_Skull_A' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, Hit_Fx) == 0x0002B8, "Member 'ABP_Homming_Projectile4_C::Hit_Fx' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, Projectile_Main) == 0x0002C0, "Member 'ABP_Homming_Projectile4_C::Projectile_Main' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, ProjectileMovement) == 0x0002C8, "Member 'ABP_Homming_Projectile4_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, Sphere) == 0x0002D0, "Member 'ABP_Homming_Projectile4_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, MinDistance) == 0x0002D8, "Member 'ABP_Homming_Projectile4_C::MinDistance' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, Target) == 0x0002E0, "Member 'ABP_Homming_Projectile4_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, Homing_Speed) == 0x0002E8, "Member 'ABP_Homming_Projectile4_C::Homing_Speed' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, Trail_2) == 0x0002F0, "Member 'ABP_Homming_Projectile4_C::Trail_2' has a wrong offset!");
static_assert(offsetof(ABP_Homming_Projectile4_C, HitFx) == 0x0002F8, "Member 'ABP_Homming_Projectile4_C::HitFx' has a wrong offset!");

}

