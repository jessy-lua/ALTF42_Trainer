#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TickOptToolkit

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TickOptToolkit_structs.hpp"


namespace SDK::Params
{

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.RegisterDynamicSkinnedMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_RegisterDynamicSkinnedMeshComponent final
{
public:
	class USkinnedMeshComponent*                  SkinnedMeshComponent;                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_RegisterDynamicSkinnedMeshComponent) == 0x000008, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_RegisterDynamicSkinnedMeshComponent");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_RegisterDynamicSkinnedMeshComponent) == 0x000008, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_RegisterDynamicSkinnedMeshComponent");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_RegisterDynamicSkinnedMeshComponent, SkinnedMeshComponent) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_RegisterDynamicSkinnedMeshComponent::SkinnedMeshComponent' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.SetAnimUpdateRateOptimizationsMode
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_SetAnimUpdateRateOptimizationsMode final
{
public:
	ETickOptToolkitAnimUROMode                    InAnimUpdateRateOptimizationsMode;                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_SetAnimUpdateRateOptimizationsMode) == 0x000001, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_SetAnimUpdateRateOptimizationsMode");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_SetAnimUpdateRateOptimizationsMode) == 0x000001, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_SetAnimUpdateRateOptimizationsMode");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_SetAnimUpdateRateOptimizationsMode, InAnimUpdateRateOptimizationsMode) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_SetAnimUpdateRateOptimizationsMode::InAnimUpdateRateOptimizationsMode' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.SetDisableScreenSizeScale
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_SetDisableScreenSizeScale final
{
public:
	bool                                          bInDisableScreenSizeScale;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_SetDisableScreenSizeScale) == 0x000001, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_SetDisableScreenSizeScale");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_SetDisableScreenSizeScale) == 0x000001, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_SetDisableScreenSizeScale");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_SetDisableScreenSizeScale, bInDisableScreenSizeScale) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_SetDisableScreenSizeScale::bInDisableScreenSizeScale' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.SetForceEnableAnimUpdateRateOptimizations
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_SetForceEnableAnimUpdateRateOptimizations final
{
public:
	bool                                          bInForceEnableAnimUpdateRateOptimizations;         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_SetForceEnableAnimUpdateRateOptimizations) == 0x000001, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_SetForceEnableAnimUpdateRateOptimizations");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_SetForceEnableAnimUpdateRateOptimizations) == 0x000001, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_SetForceEnableAnimUpdateRateOptimizations");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_SetForceEnableAnimUpdateRateOptimizations, bInForceEnableAnimUpdateRateOptimizations) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_SetForceEnableAnimUpdateRateOptimizations::bInForceEnableAnimUpdateRateOptimizations' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.SetFramesSkippedScreenSizeThresholds
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_SetFramesSkippedScreenSizeThresholds final
{
public:
	TArray<float>                                 InFramesSkippedScreenSizeThresholds;               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_SetFramesSkippedScreenSizeThresholds) == 0x000008, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_SetFramesSkippedScreenSizeThresholds");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_SetFramesSkippedScreenSizeThresholds) == 0x000010, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_SetFramesSkippedScreenSizeThresholds");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_SetFramesSkippedScreenSizeThresholds, InFramesSkippedScreenSizeThresholds) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_SetFramesSkippedScreenSizeThresholds::InFramesSkippedScreenSizeThresholds' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.SetLODToFramesSkipped
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_SetLODToFramesSkipped final
{
public:
	TArray<int32>                                 InLODToFramesSkipped;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_SetLODToFramesSkipped) == 0x000008, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_SetLODToFramesSkipped");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_SetLODToFramesSkipped) == 0x000010, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_SetLODToFramesSkipped");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_SetLODToFramesSkipped, InLODToFramesSkipped) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_SetLODToFramesSkipped::InLODToFramesSkipped' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.SetMaxFramesSkippedForInterpolation
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_SetMaxFramesSkippedForInterpolation final
{
public:
	int32                                         InMaxFramesSkippedForInterpolation;                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_SetMaxFramesSkippedForInterpolation) == 0x000004, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_SetMaxFramesSkippedForInterpolation");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_SetMaxFramesSkippedForInterpolation) == 0x000004, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_SetMaxFramesSkippedForInterpolation");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_SetMaxFramesSkippedForInterpolation, InMaxFramesSkippedForInterpolation) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_SetMaxFramesSkippedForInterpolation::InMaxFramesSkippedForInterpolation' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.SetNonRenderedFramesSkipped
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_SetNonRenderedFramesSkipped final
{
public:
	int32                                         InNonRenderedFramesSkipped;                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_SetNonRenderedFramesSkipped) == 0x000004, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_SetNonRenderedFramesSkipped");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_SetNonRenderedFramesSkipped) == 0x000004, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_SetNonRenderedFramesSkipped");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_SetNonRenderedFramesSkipped, InNonRenderedFramesSkipped) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_SetNonRenderedFramesSkipped::InNonRenderedFramesSkipped' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.GetAnimUpdateRateOptimizationsMode
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_GetAnimUpdateRateOptimizationsMode final
{
public:
	ETickOptToolkitAnimUROMode                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_GetAnimUpdateRateOptimizationsMode) == 0x000001, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_GetAnimUpdateRateOptimizationsMode");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_GetAnimUpdateRateOptimizationsMode) == 0x000001, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_GetAnimUpdateRateOptimizationsMode");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_GetAnimUpdateRateOptimizationsMode, ReturnValue) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_GetAnimUpdateRateOptimizationsMode::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.GetFramesSkippedScreenSizeThresholds
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_GetFramesSkippedScreenSizeThresholds final
{
public:
	TArray<float>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_GetFramesSkippedScreenSizeThresholds) == 0x000008, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_GetFramesSkippedScreenSizeThresholds");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_GetFramesSkippedScreenSizeThresholds) == 0x000010, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_GetFramesSkippedScreenSizeThresholds");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_GetFramesSkippedScreenSizeThresholds, ReturnValue) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_GetFramesSkippedScreenSizeThresholds::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.GetLODToFramesSkipped
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_GetLODToFramesSkipped final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_GetLODToFramesSkipped) == 0x000008, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_GetLODToFramesSkipped");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_GetLODToFramesSkipped) == 0x000010, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_GetLODToFramesSkipped");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_GetLODToFramesSkipped, ReturnValue) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_GetLODToFramesSkipped::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.GetMaxFramesSkippedForInterpolation
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_GetMaxFramesSkippedForInterpolation final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_GetMaxFramesSkippedForInterpolation) == 0x000004, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_GetMaxFramesSkippedForInterpolation");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_GetMaxFramesSkippedForInterpolation) == 0x000004, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_GetMaxFramesSkippedForInterpolation");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_GetMaxFramesSkippedForInterpolation, ReturnValue) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_GetMaxFramesSkippedForInterpolation::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.GetNonRenderedFramesSkipped
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_GetNonRenderedFramesSkipped final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_GetNonRenderedFramesSkipped) == 0x000004, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_GetNonRenderedFramesSkipped");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_GetNonRenderedFramesSkipped) == 0x000004, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_GetNonRenderedFramesSkipped");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_GetNonRenderedFramesSkipped, ReturnValue) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_GetNonRenderedFramesSkipped::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.ShouldDisableScreenSizeScale
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_ShouldDisableScreenSizeScale final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_ShouldDisableScreenSizeScale) == 0x000001, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_ShouldDisableScreenSizeScale");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_ShouldDisableScreenSizeScale) == 0x000001, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_ShouldDisableScreenSizeScale");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_ShouldDisableScreenSizeScale, ReturnValue) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_ShouldDisableScreenSizeScale::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitAnimUpdateRateOptComponent.ShouldForceEnableAnimUpdateRateOptimizations
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitAnimUpdateRateOptComponent_ShouldForceEnableAnimUpdateRateOptimizations final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitAnimUpdateRateOptComponent_ShouldForceEnableAnimUpdateRateOptimizations) == 0x000001, "Wrong alignment on TickOptToolkitAnimUpdateRateOptComponent_ShouldForceEnableAnimUpdateRateOptimizations");
static_assert(sizeof(TickOptToolkitAnimUpdateRateOptComponent_ShouldForceEnableAnimUpdateRateOptimizations) == 0x000001, "Wrong size on TickOptToolkitAnimUpdateRateOptComponent_ShouldForceEnableAnimUpdateRateOptimizations");
static_assert(offsetof(TickOptToolkitAnimUpdateRateOptComponent_ShouldForceEnableAnimUpdateRateOptimizations, ReturnValue) == 0x000000, "Member 'TickOptToolkitAnimUpdateRateOptComponent_ShouldForceEnableAnimUpdateRateOptimizations::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitFocusComponent.SetFocusLayer
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitFocusComponent_SetFocusLayer final
{
public:
	ETickOptToolkitFocusLayer                     InFocusLayer;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitFocusComponent_SetFocusLayer) == 0x000001, "Wrong alignment on TickOptToolkitFocusComponent_SetFocusLayer");
static_assert(sizeof(TickOptToolkitFocusComponent_SetFocusLayer) == 0x000001, "Wrong size on TickOptToolkitFocusComponent_SetFocusLayer");
static_assert(offsetof(TickOptToolkitFocusComponent_SetFocusLayer, InFocusLayer) == 0x000000, "Member 'TickOptToolkitFocusComponent_SetFocusLayer::InFocusLayer' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitFocusComponent.ShouldTrack
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitFocusComponent_ShouldTrack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitFocusComponent_ShouldTrack) == 0x000001, "Wrong alignment on TickOptToolkitFocusComponent_ShouldTrack");
static_assert(sizeof(TickOptToolkitFocusComponent_ShouldTrack) == 0x000001, "Wrong size on TickOptToolkitFocusComponent_ShouldTrack");
static_assert(offsetof(TickOptToolkitFocusComponent_ShouldTrack, ReturnValue) == 0x000000, "Member 'TickOptToolkitFocusComponent_ShouldTrack::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitFocusComponent.GetFocusLayer
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitFocusComponent_GetFocusLayer final
{
public:
	ETickOptToolkitFocusLayer                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitFocusComponent_GetFocusLayer) == 0x000001, "Wrong alignment on TickOptToolkitFocusComponent_GetFocusLayer");
static_assert(sizeof(TickOptToolkitFocusComponent_GetFocusLayer) == 0x000001, "Wrong size on TickOptToolkitFocusComponent_GetFocusLayer");
static_assert(offsetof(TickOptToolkitFocusComponent_GetFocusLayer, ReturnValue) == 0x000000, "Member 'TickOptToolkitFocusComponent_GetFocusLayer::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.AddComponentTickControl
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitMimicComponent_AddComponentTickControl final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_AddComponentTickControl) == 0x000008, "Wrong alignment on TickOptToolkitMimicComponent_AddComponentTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_AddComponentTickControl) == 0x000008, "Wrong size on TickOptToolkitMimicComponent_AddComponentTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_AddComponentTickControl, Component) == 0x000000, "Member 'TickOptToolkitMimicComponent_AddComponentTickControl::Component' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.AddTimelineTickControl
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitMimicComponent_AddTimelineTickControl final
{
public:
	class UTimelineComponent*                     Timeline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSyncToWorld;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21F1[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TickOptToolkitMimicComponent_AddTimelineTickControl) == 0x000008, "Wrong alignment on TickOptToolkitMimicComponent_AddTimelineTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_AddTimelineTickControl) == 0x000010, "Wrong size on TickOptToolkitMimicComponent_AddTimelineTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_AddTimelineTickControl, Timeline) == 0x000000, "Member 'TickOptToolkitMimicComponent_AddTimelineTickControl::Timeline' has a wrong offset!");
static_assert(offsetof(TickOptToolkitMimicComponent_AddTimelineTickControl, bSyncToWorld) == 0x000008, "Member 'TickOptToolkitMimicComponent_AddTimelineTickControl::bSyncToWorld' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.OnNewPawn
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitMimicComponent_OnNewPawn final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_OnNewPawn) == 0x000008, "Wrong alignment on TickOptToolkitMimicComponent_OnNewPawn");
static_assert(sizeof(TickOptToolkitMimicComponent_OnNewPawn) == 0x000008, "Wrong size on TickOptToolkitMimicComponent_OnNewPawn");
static_assert(offsetof(TickOptToolkitMimicComponent_OnNewPawn, Pawn) == 0x000000, "Member 'TickOptToolkitMimicComponent_OnNewPawn::Pawn' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.RegisterMimicTarget
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitMimicComponent_RegisterMimicTarget final
{
public:
	class UTickOptToolkitTargetComponent*         Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_RegisterMimicTarget) == 0x000008, "Wrong alignment on TickOptToolkitMimicComponent_RegisterMimicTarget");
static_assert(sizeof(TickOptToolkitMimicComponent_RegisterMimicTarget) == 0x000008, "Wrong size on TickOptToolkitMimicComponent_RegisterMimicTarget");
static_assert(offsetof(TickOptToolkitMimicComponent_RegisterMimicTarget, Target) == 0x000000, "Member 'TickOptToolkitMimicComponent_RegisterMimicTarget::Target' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.RemoveComponentTickControl
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitMimicComponent_RemoveComponentTickControl final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_RemoveComponentTickControl) == 0x000008, "Wrong alignment on TickOptToolkitMimicComponent_RemoveComponentTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_RemoveComponentTickControl) == 0x000008, "Wrong size on TickOptToolkitMimicComponent_RemoveComponentTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_RemoveComponentTickControl, Component) == 0x000000, "Member 'TickOptToolkitMimicComponent_RemoveComponentTickControl::Component' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.RemoveTimelineTickControl
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitMimicComponent_RemoveTimelineTickControl final
{
public:
	class UTimelineComponent*                     Timeline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_RemoveTimelineTickControl) == 0x000008, "Wrong alignment on TickOptToolkitMimicComponent_RemoveTimelineTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_RemoveTimelineTickControl) == 0x000008, "Wrong size on TickOptToolkitMimicComponent_RemoveTimelineTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_RemoveTimelineTickControl, Timeline) == 0x000000, "Member 'TickOptToolkitMimicComponent_RemoveTimelineTickControl::Timeline' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.SetActorTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_SetActorTickControl final
{
public:
	bool                                          bInActorTickControl;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_SetActorTickControl) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_SetActorTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_SetActorTickControl) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_SetActorTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_SetActorTickControl, bInActorTickControl) == 0x000000, "Member 'TickOptToolkitMimicComponent_SetActorTickControl::bInActorTickControl' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.SetComponentsTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_SetComponentsTickControl final
{
public:
	bool                                          bInComponentsTickControl;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_SetComponentsTickControl) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_SetComponentsTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_SetComponentsTickControl) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_SetComponentsTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_SetComponentsTickControl, bInComponentsTickControl) == 0x000000, "Member 'TickOptToolkitMimicComponent_SetComponentsTickControl::bInComponentsTickControl' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.SetSyncTimelinesToWorld
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_SetSyncTimelinesToWorld final
{
public:
	bool                                          bInSyncTimelinesToWorld;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_SetSyncTimelinesToWorld) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_SetSyncTimelinesToWorld");
static_assert(sizeof(TickOptToolkitMimicComponent_SetSyncTimelinesToWorld) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_SetSyncTimelinesToWorld");
static_assert(offsetof(TickOptToolkitMimicComponent_SetSyncTimelinesToWorld, bInSyncTimelinesToWorld) == 0x000000, "Member 'TickOptToolkitMimicComponent_SetSyncTimelinesToWorld::bInSyncTimelinesToWorld' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.SetTimelinesTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_SetTimelinesTickControl final
{
public:
	bool                                          bInTimelinesTickControl;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_SetTimelinesTickControl) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_SetTimelinesTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_SetTimelinesTickControl) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_SetTimelinesTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_SetTimelinesTickControl, bInTimelinesTickControl) == 0x000000, "Member 'TickOptToolkitMimicComponent_SetTimelinesTickControl::bInTimelinesTickControl' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.IsActorTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_IsActorTickControl final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_IsActorTickControl) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_IsActorTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_IsActorTickControl) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_IsActorTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_IsActorTickControl, ReturnValue) == 0x000000, "Member 'TickOptToolkitMimicComponent_IsActorTickControl::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.IsComponentsTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_IsComponentsTickControl final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_IsComponentsTickControl) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_IsComponentsTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_IsComponentsTickControl) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_IsComponentsTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_IsComponentsTickControl, ReturnValue) == 0x000000, "Member 'TickOptToolkitMimicComponent_IsComponentsTickControl::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.IsSyncTimelinesToWorld
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_IsSyncTimelinesToWorld final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_IsSyncTimelinesToWorld) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_IsSyncTimelinesToWorld");
static_assert(sizeof(TickOptToolkitMimicComponent_IsSyncTimelinesToWorld) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_IsSyncTimelinesToWorld");
static_assert(offsetof(TickOptToolkitMimicComponent_IsSyncTimelinesToWorld, ReturnValue) == 0x000000, "Member 'TickOptToolkitMimicComponent_IsSyncTimelinesToWorld::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitMimicComponent.IsTimelinesTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitMimicComponent_IsTimelinesTickControl final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitMimicComponent_IsTimelinesTickControl) == 0x000001, "Wrong alignment on TickOptToolkitMimicComponent_IsTimelinesTickControl");
static_assert(sizeof(TickOptToolkitMimicComponent_IsTimelinesTickControl) == 0x000001, "Wrong size on TickOptToolkitMimicComponent_IsTimelinesTickControl");
static_assert(offsetof(TickOptToolkitMimicComponent_IsTimelinesTickControl, ReturnValue) == 0x000000, "Member 'TickOptToolkitMimicComponent_IsTimelinesTickControl::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.AddComponentTickControl
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitTargetComponent_AddComponentTickControl final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_AddComponentTickControl) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_AddComponentTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_AddComponentTickControl) == 0x000008, "Wrong size on TickOptToolkitTargetComponent_AddComponentTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_AddComponentTickControl, Component) == 0x000000, "Member 'TickOptToolkitTargetComponent_AddComponentTickControl::Component' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.AddTimelineTickControl
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitTargetComponent_AddTimelineTickControl final
{
public:
	class UTimelineComponent*                     Timeline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSyncToWorld;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21FF[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TickOptToolkitTargetComponent_AddTimelineTickControl) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_AddTimelineTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_AddTimelineTickControl) == 0x000010, "Wrong size on TickOptToolkitTargetComponent_AddTimelineTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_AddTimelineTickControl, Timeline) == 0x000000, "Member 'TickOptToolkitTargetComponent_AddTimelineTickControl::Timeline' has a wrong offset!");
static_assert(offsetof(TickOptToolkitTargetComponent_AddTimelineTickControl, bSyncToWorld) == 0x000008, "Member 'TickOptToolkitTargetComponent_AddTimelineTickControl::bSyncToWorld' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.Force
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitTargetComponent_Force final
{
public:
	int32                                         InZone;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInVisible;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2200[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TickOptToolkitTargetComponent_Force) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_Force");
static_assert(sizeof(TickOptToolkitTargetComponent_Force) == 0x000008, "Wrong size on TickOptToolkitTargetComponent_Force");
static_assert(offsetof(TickOptToolkitTargetComponent_Force, InZone) == 0x000000, "Member 'TickOptToolkitTargetComponent_Force::InZone' has a wrong offset!");
static_assert(offsetof(TickOptToolkitTargetComponent_Force, bInVisible) == 0x000004, "Member 'TickOptToolkitTargetComponent_Force::bInVisible' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.RemoveComponentTickControl
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitTargetComponent_RemoveComponentTickControl final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_RemoveComponentTickControl) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_RemoveComponentTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_RemoveComponentTickControl) == 0x000008, "Wrong size on TickOptToolkitTargetComponent_RemoveComponentTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_RemoveComponentTickControl, Component) == 0x000000, "Member 'TickOptToolkitTargetComponent_RemoveComponentTickControl::Component' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.RemoveTimelineTickControl
// 0x0008 (0x0008 - 0x0000)
struct TickOptToolkitTargetComponent_RemoveTimelineTickControl final
{
public:
	class UTimelineComponent*                     Timeline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_RemoveTimelineTickControl) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_RemoveTimelineTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_RemoveTimelineTickControl) == 0x000008, "Wrong size on TickOptToolkitTargetComponent_RemoveTimelineTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_RemoveTimelineTickControl, Timeline) == 0x000000, "Member 'TickOptToolkitTargetComponent_RemoveTimelineTickControl::Timeline' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetActorTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetActorTickControl final
{
public:
	bool                                          bInActorTickControl;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetActorTickControl) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetActorTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_SetActorTickControl) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetActorTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_SetActorTickControl, bInActorTickControl) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetActorTickControl::bInActorTickControl' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetBoxExtents
// 0x0018 (0x0018 - 0x0000)
struct TickOptToolkitTargetComponent_SetBoxExtents final
{
public:
	struct FVector                                InExtents;                                         // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetBoxExtents) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_SetBoxExtents");
static_assert(sizeof(TickOptToolkitTargetComponent_SetBoxExtents) == 0x000018, "Wrong size on TickOptToolkitTargetComponent_SetBoxExtents");
static_assert(offsetof(TickOptToolkitTargetComponent_SetBoxExtents, InExtents) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetBoxExtents::InExtents' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetBoxRotation
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_SetBoxRotation final
{
public:
	float                                         InRotation;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetBoxRotation) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_SetBoxRotation");
static_assert(sizeof(TickOptToolkitTargetComponent_SetBoxRotation) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_SetBoxRotation");
static_assert(offsetof(TickOptToolkitTargetComponent_SetBoxRotation, InRotation) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetBoxRotation::InRotation' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetBufferSize
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_SetBufferSize final
{
public:
	float                                         InBufferSize;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetBufferSize) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_SetBufferSize");
static_assert(sizeof(TickOptToolkitTargetComponent_SetBufferSize) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_SetBufferSize");
static_assert(offsetof(TickOptToolkitTargetComponent_SetBufferSize, InBufferSize) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetBufferSize::InBufferSize' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetComponentsTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetComponentsTickControl final
{
public:
	bool                                          bInComponentsTickControl;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetComponentsTickControl) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetComponentsTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_SetComponentsTickControl) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetComponentsTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_SetComponentsTickControl, bInComponentsTickControl) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetComponentsTickControl::bInComponentsTickControl' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetDisableDistanceScale
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetDisableDistanceScale final
{
public:
	bool                                          bInDisableDistanceScale;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetDisableDistanceScale) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetDisableDistanceScale");
static_assert(sizeof(TickOptToolkitTargetComponent_SetDisableDistanceScale) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetDisableDistanceScale");
static_assert(offsetof(TickOptToolkitTargetComponent_SetDisableDistanceScale, bInDisableDistanceScale) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetDisableDistanceScale::bInDisableDistanceScale' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetDistanceMode
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetDistanceMode final
{
public:
	ETickOptToolkitDistanceMode                   InDistanceMode;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetDistanceMode) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetDistanceMode");
static_assert(sizeof(TickOptToolkitTargetComponent_SetDistanceMode) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetDistanceMode");
static_assert(offsetof(TickOptToolkitTargetComponent_SetDistanceMode, InDistanceMode) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetDistanceMode::InDistanceMode' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetFocusLayerMask
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_SetFocusLayerMask final
{
public:
	int32                                         InFocusLayerMask;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetFocusLayerMask) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_SetFocusLayerMask");
static_assert(sizeof(TickOptToolkitTargetComponent_SetFocusLayerMask) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_SetFocusLayerMask");
static_assert(offsetof(TickOptToolkitTargetComponent_SetFocusLayerMask, InFocusLayerMask) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetFocusLayerMask::InFocusLayerMask' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetForceExecuteFirstTick
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetForceExecuteFirstTick final
{
public:
	bool                                          bInForceExecuteFirstTick;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetForceExecuteFirstTick) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetForceExecuteFirstTick");
static_assert(sizeof(TickOptToolkitTargetComponent_SetForceExecuteFirstTick) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetForceExecuteFirstTick");
static_assert(offsetof(TickOptToolkitTargetComponent_SetForceExecuteFirstTick, bInForceExecuteFirstTick) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetForceExecuteFirstTick::bInForceExecuteFirstTick' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetMidZoneSizes
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitTargetComponent_SetMidZoneSizes final
{
public:
	TArray<float>                                 InMidZoneSizes;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetMidZoneSizes) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_SetMidZoneSizes");
static_assert(sizeof(TickOptToolkitTargetComponent_SetMidZoneSizes) == 0x000010, "Wrong size on TickOptToolkitTargetComponent_SetMidZoneSizes");
static_assert(offsetof(TickOptToolkitTargetComponent_SetMidZoneSizes, InMidZoneSizes) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetMidZoneSizes::InMidZoneSizes' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetSphereRadius
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_SetSphereRadius final
{
public:
	float                                         InRadius;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetSphereRadius) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_SetSphereRadius");
static_assert(sizeof(TickOptToolkitTargetComponent_SetSphereRadius) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_SetSphereRadius");
static_assert(offsetof(TickOptToolkitTargetComponent_SetSphereRadius, InRadius) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetSphereRadius::InRadius' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetSyncTimelinesToWorld
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetSyncTimelinesToWorld final
{
public:
	bool                                          bInSyncTimelinesToWorld;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetSyncTimelinesToWorld) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetSyncTimelinesToWorld");
static_assert(sizeof(TickOptToolkitTargetComponent_SetSyncTimelinesToWorld) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetSyncTimelinesToWorld");
static_assert(offsetof(TickOptToolkitTargetComponent_SetSyncTimelinesToWorld, bInSyncTimelinesToWorld) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetSyncTimelinesToWorld::bInSyncTimelinesToWorld' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetTickSettings
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitTargetComponent_SetTickSettings final
{
public:
	TArray<struct FTickOptToolkitTickSettings>    InTickSettings;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetTickSettings) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_SetTickSettings");
static_assert(sizeof(TickOptToolkitTargetComponent_SetTickSettings) == 0x000010, "Wrong size on TickOptToolkitTargetComponent_SetTickSettings");
static_assert(offsetof(TickOptToolkitTargetComponent_SetTickSettings, InTickSettings) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetTickSettings::InTickSettings' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetTimelinesTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetTimelinesTickControl final
{
public:
	bool                                          bInTimelinesTickControl;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetTimelinesTickControl) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetTimelinesTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_SetTimelinesTickControl) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetTimelinesTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_SetTimelinesTickControl, bInTimelinesTickControl) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetTimelinesTickControl::bInTimelinesTickControl' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.SetVisibilityMode
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_SetVisibilityMode final
{
public:
	ETickByVisibilityMode                         InVisibilityMode;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_SetVisibilityMode) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_SetVisibilityMode");
static_assert(sizeof(TickOptToolkitTargetComponent_SetVisibilityMode) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_SetVisibilityMode");
static_assert(offsetof(TickOptToolkitTargetComponent_SetVisibilityMode, InVisibilityMode) == 0x000000, "Member 'TickOptToolkitTargetComponent_SetVisibilityMode::InVisibilityMode' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetBoxExtents
// 0x0018 (0x0018 - 0x0000)
struct TickOptToolkitTargetComponent_GetBoxExtents final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetBoxExtents) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_GetBoxExtents");
static_assert(sizeof(TickOptToolkitTargetComponent_GetBoxExtents) == 0x000018, "Wrong size on TickOptToolkitTargetComponent_GetBoxExtents");
static_assert(offsetof(TickOptToolkitTargetComponent_GetBoxExtents, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetBoxExtents::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetBoxRotation
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_GetBoxRotation final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetBoxRotation) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_GetBoxRotation");
static_assert(sizeof(TickOptToolkitTargetComponent_GetBoxRotation) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_GetBoxRotation");
static_assert(offsetof(TickOptToolkitTargetComponent_GetBoxRotation, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetBoxRotation::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetBufferSize
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_GetBufferSize final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetBufferSize) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_GetBufferSize");
static_assert(sizeof(TickOptToolkitTargetComponent_GetBufferSize) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_GetBufferSize");
static_assert(offsetof(TickOptToolkitTargetComponent_GetBufferSize, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetBufferSize::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetDistanceMode
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_GetDistanceMode final
{
public:
	ETickOptToolkitDistanceMode                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetDistanceMode) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_GetDistanceMode");
static_assert(sizeof(TickOptToolkitTargetComponent_GetDistanceMode) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_GetDistanceMode");
static_assert(offsetof(TickOptToolkitTargetComponent_GetDistanceMode, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetDistanceMode::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetFocusLayerMask
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_GetFocusLayerMask final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetFocusLayerMask) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_GetFocusLayerMask");
static_assert(sizeof(TickOptToolkitTargetComponent_GetFocusLayerMask) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_GetFocusLayerMask");
static_assert(offsetof(TickOptToolkitTargetComponent_GetFocusLayerMask, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetFocusLayerMask::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetMidZoneSizes
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitTargetComponent_GetMidZoneSizes final
{
public:
	TArray<float>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetMidZoneSizes) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_GetMidZoneSizes");
static_assert(sizeof(TickOptToolkitTargetComponent_GetMidZoneSizes) == 0x000010, "Wrong size on TickOptToolkitTargetComponent_GetMidZoneSizes");
static_assert(offsetof(TickOptToolkitTargetComponent_GetMidZoneSizes, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetMidZoneSizes::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetSphereRadius
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_GetSphereRadius final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetSphereRadius) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_GetSphereRadius");
static_assert(sizeof(TickOptToolkitTargetComponent_GetSphereRadius) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_GetSphereRadius");
static_assert(offsetof(TickOptToolkitTargetComponent_GetSphereRadius, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetSphereRadius::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetTickSettings
// 0x0010 (0x0010 - 0x0000)
struct TickOptToolkitTargetComponent_GetTickSettings final
{
public:
	TArray<struct FTickOptToolkitTickSettings>    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetTickSettings) == 0x000008, "Wrong alignment on TickOptToolkitTargetComponent_GetTickSettings");
static_assert(sizeof(TickOptToolkitTargetComponent_GetTickSettings) == 0x000010, "Wrong size on TickOptToolkitTargetComponent_GetTickSettings");
static_assert(offsetof(TickOptToolkitTargetComponent_GetTickSettings, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetTickSettings::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetTickZone
// 0x0004 (0x0004 - 0x0000)
struct TickOptToolkitTargetComponent_GetTickZone final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetTickZone) == 0x000004, "Wrong alignment on TickOptToolkitTargetComponent_GetTickZone");
static_assert(sizeof(TickOptToolkitTargetComponent_GetTickZone) == 0x000004, "Wrong size on TickOptToolkitTargetComponent_GetTickZone");
static_assert(offsetof(TickOptToolkitTargetComponent_GetTickZone, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetTickZone::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.GetVisibilityMode
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_GetVisibilityMode final
{
public:
	ETickByVisibilityMode                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_GetVisibilityMode) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_GetVisibilityMode");
static_assert(sizeof(TickOptToolkitTargetComponent_GetVisibilityMode) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_GetVisibilityMode");
static_assert(offsetof(TickOptToolkitTargetComponent_GetVisibilityMode, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_GetVisibilityMode::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.IsActorTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_IsActorTickControl final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_IsActorTickControl) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_IsActorTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_IsActorTickControl) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_IsActorTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_IsActorTickControl, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_IsActorTickControl::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.IsComponentsTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_IsComponentsTickControl final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_IsComponentsTickControl) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_IsComponentsTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_IsComponentsTickControl) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_IsComponentsTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_IsComponentsTickControl, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_IsComponentsTickControl::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.IsForced
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_IsForced final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_IsForced) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_IsForced");
static_assert(sizeof(TickOptToolkitTargetComponent_IsForced) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_IsForced");
static_assert(offsetof(TickOptToolkitTargetComponent_IsForced, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_IsForced::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.IsSyncTimelinesToWorld
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_IsSyncTimelinesToWorld final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_IsSyncTimelinesToWorld) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_IsSyncTimelinesToWorld");
static_assert(sizeof(TickOptToolkitTargetComponent_IsSyncTimelinesToWorld) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_IsSyncTimelinesToWorld");
static_assert(offsetof(TickOptToolkitTargetComponent_IsSyncTimelinesToWorld, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_IsSyncTimelinesToWorld::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.IsTickVisible
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_IsTickVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_IsTickVisible) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_IsTickVisible");
static_assert(sizeof(TickOptToolkitTargetComponent_IsTickVisible) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_IsTickVisible");
static_assert(offsetof(TickOptToolkitTargetComponent_IsTickVisible, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_IsTickVisible::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.IsTimelinesTickControl
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_IsTimelinesTickControl final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_IsTimelinesTickControl) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_IsTimelinesTickControl");
static_assert(sizeof(TickOptToolkitTargetComponent_IsTimelinesTickControl) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_IsTimelinesTickControl");
static_assert(offsetof(TickOptToolkitTargetComponent_IsTimelinesTickControl, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_IsTimelinesTickControl::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.ShouldDisableDistanceScale
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_ShouldDisableDistanceScale final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_ShouldDisableDistanceScale) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_ShouldDisableDistanceScale");
static_assert(sizeof(TickOptToolkitTargetComponent_ShouldDisableDistanceScale) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_ShouldDisableDistanceScale");
static_assert(offsetof(TickOptToolkitTargetComponent_ShouldDisableDistanceScale, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_ShouldDisableDistanceScale::ReturnValue' has a wrong offset!");

// Function TickOptToolkit.TickOptToolkitTargetComponent.ShouldForceExecuteFirstTick
// 0x0001 (0x0001 - 0x0000)
struct TickOptToolkitTargetComponent_ShouldForceExecuteFirstTick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TickOptToolkitTargetComponent_ShouldForceExecuteFirstTick) == 0x000001, "Wrong alignment on TickOptToolkitTargetComponent_ShouldForceExecuteFirstTick");
static_assert(sizeof(TickOptToolkitTargetComponent_ShouldForceExecuteFirstTick) == 0x000001, "Wrong size on TickOptToolkitTargetComponent_ShouldForceExecuteFirstTick");
static_assert(offsetof(TickOptToolkitTargetComponent_ShouldForceExecuteFirstTick, ReturnValue) == 0x000000, "Member 'TickOptToolkitTargetComponent_ShouldForceExecuteFirstTick::ReturnValue' has a wrong offset!");

}

