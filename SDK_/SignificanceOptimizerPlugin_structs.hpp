#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SignificanceOptimizerPlugin

#include "Basic.hpp"


namespace SDK
{

// Enum SignificanceOptimizerPlugin.ESignificanceLevel
// NumValues: 0x0006
enum class ESignificanceLevel : uint8
{
	Highest                                  = 0,
	High                                     = 1,
	Medium                                   = 2,
	Low                                      = 3,
	Lowest                                   = 4,
	ESignificanceLevel_MAX                   = 5,
};

// Enum SignificanceOptimizerPlugin.ESignificanceDecisionMode
// NumValues: 0x000B
enum class ESignificanceDecisionMode : uint8
{
	Render                                   = 0,
	Distance                                 = 1,
	Angle                                    = 2,
	DistanceAndRender                        = 3,
	DistanceAndAngle                         = 4,
	WeightedDistanceAndRender                = 5,
	WeightedDistanceAndAngle                 = 6,
	ScreenSpaceRatio                         = 7,
	ScreenSpaceRatioAndRender                = 8,
	ScreenSpaceRatioAndAngle                 = 9,
	ESignificanceDecisionMode_MAX            = 10,
};

// Enum SignificanceOptimizerPlugin.EPostSignificanceType
// NumValues: 0x0004
enum class EPostSignificanceType : uint8
{
	None                                     = 0,
	Concurrent                               = 1,
	Sequential                               = 2,
	EPostSignificanceType_MAX                = 3,
};

// ScriptStruct SignificanceOptimizerPlugin.SignificanceRenderDecisionModeParameters
// 0x0002 (0x0002 - 0x0000)
struct FSignificanceRenderDecisionModeParameters final
{
public:
	ESignificanceLevel                            SignificanceLevelWhenRendered;                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESignificanceLevel                            SignificanceLevelWhenNotRendered;                  // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceRenderDecisionModeParameters) == 0x000001, "Wrong alignment on FSignificanceRenderDecisionModeParameters");
static_assert(sizeof(FSignificanceRenderDecisionModeParameters) == 0x000002, "Wrong size on FSignificanceRenderDecisionModeParameters");
static_assert(offsetof(FSignificanceRenderDecisionModeParameters, SignificanceLevelWhenRendered) == 0x000000, "Member 'FSignificanceRenderDecisionModeParameters::SignificanceLevelWhenRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceRenderDecisionModeParameters, SignificanceLevelWhenNotRendered) == 0x000001, "Member 'FSignificanceRenderDecisionModeParameters::SignificanceLevelWhenNotRendered' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceComponentOwnerData
// 0x0018 (0x0018 - 0x0000)
struct FSignificanceComponentOwnerData final
{
public:
	bool                                          bIsRendered;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24D5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SquaredDistance;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenSpaceRatio;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24D6[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSignificanceComponentOwnerData) == 0x000008, "Wrong alignment on FSignificanceComponentOwnerData");
static_assert(sizeof(FSignificanceComponentOwnerData) == 0x000018, "Wrong size on FSignificanceComponentOwnerData");
static_assert(offsetof(FSignificanceComponentOwnerData, bIsRendered) == 0x000000, "Member 'FSignificanceComponentOwnerData::bIsRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceComponentOwnerData, Angle) == 0x000004, "Member 'FSignificanceComponentOwnerData::Angle' has a wrong offset!");
static_assert(offsetof(FSignificanceComponentOwnerData, SquaredDistance) == 0x000008, "Member 'FSignificanceComponentOwnerData::SquaredDistance' has a wrong offset!");
static_assert(offsetof(FSignificanceComponentOwnerData, ScreenSpaceRatio) == 0x000010, "Member 'FSignificanceComponentOwnerData::ScreenSpaceRatio' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceDistanceDecisionModeParameters
// 0x0010 (0x0010 - 0x0000)
struct FSignificanceDistanceDecisionModeParameters final
{
public:
	ESignificanceLevel                            SignificanceLevel;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceToViewport;                                // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceDistanceDecisionModeParameters) == 0x000008, "Wrong alignment on FSignificanceDistanceDecisionModeParameters");
static_assert(sizeof(FSignificanceDistanceDecisionModeParameters) == 0x000010, "Wrong size on FSignificanceDistanceDecisionModeParameters");
static_assert(offsetof(FSignificanceDistanceDecisionModeParameters, SignificanceLevel) == 0x000000, "Member 'FSignificanceDistanceDecisionModeParameters::SignificanceLevel' has a wrong offset!");
static_assert(offsetof(FSignificanceDistanceDecisionModeParameters, DistanceToViewport) == 0x000008, "Member 'FSignificanceDistanceDecisionModeParameters::DistanceToViewport' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceAngleDecisionModeParameters
// 0x0008 (0x0008 - 0x0000)
struct FSignificanceAngleDecisionModeParameters final
{
public:
	ESignificanceLevel                            SignificanceLevel;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24D8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AngleToViewport;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceAngleDecisionModeParameters) == 0x000004, "Wrong alignment on FSignificanceAngleDecisionModeParameters");
static_assert(sizeof(FSignificanceAngleDecisionModeParameters) == 0x000008, "Wrong size on FSignificanceAngleDecisionModeParameters");
static_assert(offsetof(FSignificanceAngleDecisionModeParameters, SignificanceLevel) == 0x000000, "Member 'FSignificanceAngleDecisionModeParameters::SignificanceLevel' has a wrong offset!");
static_assert(offsetof(FSignificanceAngleDecisionModeParameters, AngleToViewport) == 0x000004, "Member 'FSignificanceAngleDecisionModeParameters::AngleToViewport' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceDistanceAndRenderDecisionModeParameters
// 0x0010 (0x0010 - 0x0000)
struct FSignificanceDistanceAndRenderDecisionModeParameters final
{
public:
	ESignificanceLevel                            SignificanceLevelWhenRendered;                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESignificanceLevel                            SignificanceLevelWhenNotRendered;                  // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24D9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceToViewport;                                // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceDistanceAndRenderDecisionModeParameters) == 0x000008, "Wrong alignment on FSignificanceDistanceAndRenderDecisionModeParameters");
static_assert(sizeof(FSignificanceDistanceAndRenderDecisionModeParameters) == 0x000010, "Wrong size on FSignificanceDistanceAndRenderDecisionModeParameters");
static_assert(offsetof(FSignificanceDistanceAndRenderDecisionModeParameters, SignificanceLevelWhenRendered) == 0x000000, "Member 'FSignificanceDistanceAndRenderDecisionModeParameters::SignificanceLevelWhenRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceDistanceAndRenderDecisionModeParameters, SignificanceLevelWhenNotRendered) == 0x000001, "Member 'FSignificanceDistanceAndRenderDecisionModeParameters::SignificanceLevelWhenNotRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceDistanceAndRenderDecisionModeParameters, DistanceToViewport) == 0x000008, "Member 'FSignificanceDistanceAndRenderDecisionModeParameters::DistanceToViewport' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceDistanceAndAngleDecisionModeParameters
// 0x0018 (0x0018 - 0x0000)
struct FSignificanceDistanceAndAngleDecisionModeParameters final
{
public:
	float                                         AngleToViewport;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24DA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSignificanceDistanceDecisionModeParameters> GivenAngleDistanceRangesAndSignificanceLevels;     // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceDistanceAndAngleDecisionModeParameters) == 0x000008, "Wrong alignment on FSignificanceDistanceAndAngleDecisionModeParameters");
static_assert(sizeof(FSignificanceDistanceAndAngleDecisionModeParameters) == 0x000018, "Wrong size on FSignificanceDistanceAndAngleDecisionModeParameters");
static_assert(offsetof(FSignificanceDistanceAndAngleDecisionModeParameters, AngleToViewport) == 0x000000, "Member 'FSignificanceDistanceAndAngleDecisionModeParameters::AngleToViewport' has a wrong offset!");
static_assert(offsetof(FSignificanceDistanceAndAngleDecisionModeParameters, GivenAngleDistanceRangesAndSignificanceLevels) == 0x000008, "Member 'FSignificanceDistanceAndAngleDecisionModeParameters::GivenAngleDistanceRangesAndSignificanceLevels' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceWeightedDistanceAndRenderDecisionModeParameters
// 0x0018 (0x0018 - 0x0000)
struct FSignificanceWeightedDistanceAndRenderDecisionModeParameters final
{
public:
	float                                         BlendWeight;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESignificanceLevel                            SignificanceLevelWhenRendered;                     // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESignificanceLevel                            SignificanceLevelWhenNotRendered;                  // 0x0005(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24DB[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSignificanceDistanceDecisionModeParameters> GivenDistanceSignificanceLevels;                   // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceWeightedDistanceAndRenderDecisionModeParameters) == 0x000008, "Wrong alignment on FSignificanceWeightedDistanceAndRenderDecisionModeParameters");
static_assert(sizeof(FSignificanceWeightedDistanceAndRenderDecisionModeParameters) == 0x000018, "Wrong size on FSignificanceWeightedDistanceAndRenderDecisionModeParameters");
static_assert(offsetof(FSignificanceWeightedDistanceAndRenderDecisionModeParameters, BlendWeight) == 0x000000, "Member 'FSignificanceWeightedDistanceAndRenderDecisionModeParameters::BlendWeight' has a wrong offset!");
static_assert(offsetof(FSignificanceWeightedDistanceAndRenderDecisionModeParameters, SignificanceLevelWhenRendered) == 0x000004, "Member 'FSignificanceWeightedDistanceAndRenderDecisionModeParameters::SignificanceLevelWhenRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceWeightedDistanceAndRenderDecisionModeParameters, SignificanceLevelWhenNotRendered) == 0x000005, "Member 'FSignificanceWeightedDistanceAndRenderDecisionModeParameters::SignificanceLevelWhenNotRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceWeightedDistanceAndRenderDecisionModeParameters, GivenDistanceSignificanceLevels) == 0x000008, "Member 'FSignificanceWeightedDistanceAndRenderDecisionModeParameters::GivenDistanceSignificanceLevels' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceWeightedDistanceAndAngleDecisionModeParameters
// 0x0028 (0x0028 - 0x0000)
struct FSignificanceWeightedDistanceAndAngleDecisionModeParameters final
{
public:
	float                                         BlendWeight;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24DC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSignificanceAngleDecisionModeParameters> GivenAngleSignificanceLevels;                      // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSignificanceDistanceDecisionModeParameters> GivenDistanceSignificanceLevels;                   // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceWeightedDistanceAndAngleDecisionModeParameters) == 0x000008, "Wrong alignment on FSignificanceWeightedDistanceAndAngleDecisionModeParameters");
static_assert(sizeof(FSignificanceWeightedDistanceAndAngleDecisionModeParameters) == 0x000028, "Wrong size on FSignificanceWeightedDistanceAndAngleDecisionModeParameters");
static_assert(offsetof(FSignificanceWeightedDistanceAndAngleDecisionModeParameters, BlendWeight) == 0x000000, "Member 'FSignificanceWeightedDistanceAndAngleDecisionModeParameters::BlendWeight' has a wrong offset!");
static_assert(offsetof(FSignificanceWeightedDistanceAndAngleDecisionModeParameters, GivenAngleSignificanceLevels) == 0x000008, "Member 'FSignificanceWeightedDistanceAndAngleDecisionModeParameters::GivenAngleSignificanceLevels' has a wrong offset!");
static_assert(offsetof(FSignificanceWeightedDistanceAndAngleDecisionModeParameters, GivenDistanceSignificanceLevels) == 0x000018, "Member 'FSignificanceWeightedDistanceAndAngleDecisionModeParameters::GivenDistanceSignificanceLevels' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceScreenSpaceRatioDecisionModeParameters
// 0x0008 (0x0008 - 0x0000)
struct FSignificanceScreenSpaceRatioDecisionModeParameters final
{
public:
	ESignificanceLevel                            SignificanceLevel;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24DD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScreenSpaceRatio;                                  // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceScreenSpaceRatioDecisionModeParameters) == 0x000004, "Wrong alignment on FSignificanceScreenSpaceRatioDecisionModeParameters");
static_assert(sizeof(FSignificanceScreenSpaceRatioDecisionModeParameters) == 0x000008, "Wrong size on FSignificanceScreenSpaceRatioDecisionModeParameters");
static_assert(offsetof(FSignificanceScreenSpaceRatioDecisionModeParameters, SignificanceLevel) == 0x000000, "Member 'FSignificanceScreenSpaceRatioDecisionModeParameters::SignificanceLevel' has a wrong offset!");
static_assert(offsetof(FSignificanceScreenSpaceRatioDecisionModeParameters, ScreenSpaceRatio) == 0x000004, "Member 'FSignificanceScreenSpaceRatioDecisionModeParameters::ScreenSpaceRatio' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceScreenSpaceRatioAndRenderDecisionModeParameters
// 0x0008 (0x0008 - 0x0000)
struct FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters final
{
public:
	ESignificanceLevel                            SignificanceLevelWhenRendered;                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESignificanceLevel                            SignificanceLevelWhenNotRendered;                  // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24DE[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScreenSpaceRatio;                                  // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters) == 0x000004, "Wrong alignment on FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters");
static_assert(sizeof(FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters) == 0x000008, "Wrong size on FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters");
static_assert(offsetof(FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters, SignificanceLevelWhenRendered) == 0x000000, "Member 'FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters::SignificanceLevelWhenRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters, SignificanceLevelWhenNotRendered) == 0x000001, "Member 'FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters::SignificanceLevelWhenNotRendered' has a wrong offset!");
static_assert(offsetof(FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters, ScreenSpaceRatio) == 0x000004, "Member 'FSignificanceScreenSpaceRatioAndRenderDecisionModeParameters::ScreenSpaceRatio' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceScreenSpaceRatioAndAngleDecisionModeParameters
// 0x0018 (0x0018 - 0x0000)
struct FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters final
{
public:
	float                                         AngleToViewport;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24DF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSignificanceScreenSpaceRatioDecisionModeParameters> GivenAngleScreenSpaceRatioRangesAndSignificanceLevels; // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters) == 0x000008, "Wrong alignment on FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters");
static_assert(sizeof(FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters) == 0x000018, "Wrong size on FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters");
static_assert(offsetof(FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters, AngleToViewport) == 0x000000, "Member 'FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters::AngleToViewport' has a wrong offset!");
static_assert(offsetof(FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters, GivenAngleScreenSpaceRatioRangesAndSignificanceLevels) == 0x000008, "Member 'FSignificanceScreenSpaceRatioAndAngleDecisionModeParameters::GivenAngleScreenSpaceRatioRangesAndSignificanceLevels' has a wrong offset!");

// ScriptStruct SignificanceOptimizerPlugin.SignificanceOptimizedActorParameters
// 0x0008 (0x0008 - 0x0000)
struct FSignificanceOptimizedActorParameters final
{
public:
	ESignificanceLevel                            SignificanceLevel;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24E0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TickInterval;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSignificanceOptimizedActorParameters) == 0x000004, "Wrong alignment on FSignificanceOptimizedActorParameters");
static_assert(sizeof(FSignificanceOptimizedActorParameters) == 0x000008, "Wrong size on FSignificanceOptimizedActorParameters");
static_assert(offsetof(FSignificanceOptimizedActorParameters, SignificanceLevel) == 0x000000, "Member 'FSignificanceOptimizedActorParameters::SignificanceLevel' has a wrong offset!");
static_assert(offsetof(FSignificanceOptimizedActorParameters, TickInterval) == 0x000004, "Member 'FSignificanceOptimizedActorParameters::TickInterval' has a wrong offset!");

}

