#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Boss_Control_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Boss_Control_BP.Boss_Control_BP_C
// 0x0050 (0x02E8 - 0x0298)
class ABoss_Control_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          FirstOverlap_Check;                                // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Overlap_Check;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                In_Box_Extent;                                     // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStatueBoss_BP_C*                       StatueBossBP;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABoss_Stair_BP_C*                       Stair;                                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstMet_;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Boss_Control_BP_FirstOverlap_Check_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Boss_Control_BP_Overlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Char_Die_BossReset();
	void ExecuteUbergraph_Boss_Control_BP(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Boss_Control_BP_C">();
	}
	static class ABoss_Control_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABoss_Control_BP_C>();
	}
};
static_assert(alignof(ABoss_Control_BP_C) == 0x000008, "Wrong alignment on ABoss_Control_BP_C");
static_assert(sizeof(ABoss_Control_BP_C) == 0x0002E8, "Wrong size on ABoss_Control_BP_C");
static_assert(offsetof(ABoss_Control_BP_C, UberGraphFrame) == 0x000298, "Member 'ABoss_Control_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABoss_Control_BP_C, FirstOverlap_Check) == 0x0002A0, "Member 'ABoss_Control_BP_C::FirstOverlap_Check' has a wrong offset!");
static_assert(offsetof(ABoss_Control_BP_C, Overlap_Check) == 0x0002A8, "Member 'ABoss_Control_BP_C::Overlap_Check' has a wrong offset!");
static_assert(offsetof(ABoss_Control_BP_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABoss_Control_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABoss_Control_BP_C, In_Box_Extent) == 0x0002B8, "Member 'ABoss_Control_BP_C::In_Box_Extent' has a wrong offset!");
static_assert(offsetof(ABoss_Control_BP_C, StatueBossBP) == 0x0002D0, "Member 'ABoss_Control_BP_C::StatueBossBP' has a wrong offset!");
static_assert(offsetof(ABoss_Control_BP_C, Stair) == 0x0002D8, "Member 'ABoss_Control_BP_C::Stair' has a wrong offset!");
static_assert(offsetof(ABoss_Control_BP_C, FirstMet_) == 0x0002E0, "Member 'ABoss_Control_BP_C::FirstMet_' has a wrong offset!");

}

