#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StreamlineBlueprint

#include "Basic.hpp"


namespace SDK
{

// Enum StreamlineBlueprint.UStreamlineFeature
// NumValues: 0x0004
enum class EUStreamlineFeature : uint8
{
	DLSSG                                    = 0,
	Reflex                                   = 1,
	Count                                    = 2,
	UStreamlineFeature_MAX                   = 3,
};

// Enum StreamlineBlueprint.UStreamlineFeatureSupport
// NumValues: 0x000A
enum class EUStreamlineFeatureSupport : uint8
{
	Supported                                = 0,
	NotSupported                             = 1,
	NotSupportedIncompatibleHardware         = 2,
	NotSupportedDriverOutOfDate              = 3,
	NotSupportedOperatingSystemOutOfDate     = 4,
	NotSupportedHardewareSchedulingDisabled  = 5,
	NotSupportedByRHI                        = 6,
	NotSupportedByPlatformAtBuildTime        = 7,
	NotSupportedIncompatibleAPICaptureToolActive = 8,
	UStreamlineFeatureSupport_MAX            = 9,
};

// Enum StreamlineBlueprint.UStreamlineFeatureRequirementsFlags
// NumValues: 0x0007
enum class EUStreamlineFeatureRequirementsFlags : uint8
{
	None                                     = 0,
	D3D11Supported                           = 1,
	D3D12Supported                           = 2,
	VulkanSupported                          = 4,
	VSyncOffRequired                         = 8,
	HardwareSchedulingRequired               = 16,
	UStreamlineFeatureRequirementsFlags_MAX  = 17,
};

// Enum StreamlineBlueprint.UStreamlineDLSSGMode
// NumValues: 0x0004
enum class EUStreamlineDLSSGMode : uint8
{
	Off                                      = 0,
	On                                       = 1,
	Auto                                     = 2,
	UStreamlineDLSSGMode_MAX                 = 3,
};

// Enum StreamlineBlueprint.UStreamlineReflexMode
// NumValues: 0x0004
enum class EUStreamlineReflexMode : uint8
{
	Disabled                                 = 0,
	Enabled                                  = 1,
	EnabledPlusBoost                         = 3,
	UStreamlineReflexMode_MAX                = 4,
};

// ScriptStruct StreamlineBlueprint.StreamlineVersion
// 0x000C (0x000C - 0x0000)
struct FStreamlineVersion final
{
public:
	int32                                         Major;                                             // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minor;                                             // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Build;                                             // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStreamlineVersion) == 0x000004, "Wrong alignment on FStreamlineVersion");
static_assert(sizeof(FStreamlineVersion) == 0x00000C, "Wrong size on FStreamlineVersion");
static_assert(offsetof(FStreamlineVersion, Major) == 0x000000, "Member 'FStreamlineVersion::Major' has a wrong offset!");
static_assert(offsetof(FStreamlineVersion, Minor) == 0x000004, "Member 'FStreamlineVersion::Minor' has a wrong offset!");
static_assert(offsetof(FStreamlineVersion, Build) == 0x000008, "Member 'FStreamlineVersion::Build' has a wrong offset!");

// ScriptStruct StreamlineBlueprint.StreamlineFeatureRequirements
// 0x0034 (0x0034 - 0x0000)
struct FStreamlineFeatureRequirements final
{
public:
	EUStreamlineFeatureSupport                    Support;                                           // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUStreamlineFeatureRequirementsFlags          Requirements;                                      // 0x0001(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2502[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamlineVersion                     RequiredOperatingSystemVersion;                    // 0x0004(0x000C)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamlineVersion                     DetectedOperatingSystemVersion;                    // 0x0010(0x000C)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamlineVersion                     RequiredDriverVersion;                             // 0x001C(0x000C)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamlineVersion                     DetectedDriverVersion;                             // 0x0028(0x000C)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStreamlineFeatureRequirements) == 0x000004, "Wrong alignment on FStreamlineFeatureRequirements");
static_assert(sizeof(FStreamlineFeatureRequirements) == 0x000034, "Wrong size on FStreamlineFeatureRequirements");
static_assert(offsetof(FStreamlineFeatureRequirements, Support) == 0x000000, "Member 'FStreamlineFeatureRequirements::Support' has a wrong offset!");
static_assert(offsetof(FStreamlineFeatureRequirements, Requirements) == 0x000001, "Member 'FStreamlineFeatureRequirements::Requirements' has a wrong offset!");
static_assert(offsetof(FStreamlineFeatureRequirements, RequiredOperatingSystemVersion) == 0x000004, "Member 'FStreamlineFeatureRequirements::RequiredOperatingSystemVersion' has a wrong offset!");
static_assert(offsetof(FStreamlineFeatureRequirements, DetectedOperatingSystemVersion) == 0x000010, "Member 'FStreamlineFeatureRequirements::DetectedOperatingSystemVersion' has a wrong offset!");
static_assert(offsetof(FStreamlineFeatureRequirements, RequiredDriverVersion) == 0x00001C, "Member 'FStreamlineFeatureRequirements::RequiredDriverVersion' has a wrong offset!");
static_assert(offsetof(FStreamlineFeatureRequirements, DetectedDriverVersion) == 0x000028, "Member 'FStreamlineFeatureRequirements::DetectedDriverVersion' has a wrong offset!");

}

