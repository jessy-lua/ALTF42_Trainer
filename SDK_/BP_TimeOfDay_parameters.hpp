#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeOfDay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TimeOfDayModifierStructure_structs.hpp"


namespace SDK::Params
{

// Function BP_TimeOfDay.BP_TimeOfDay_C.Capture Float MPCValues at Current Time
// 0x0130 (0x0130 - 0x0000)
struct BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time final
{
public:
	TMap<class FName, double>                     MPCFloats;                                         // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, double>                     MPCFloatMap;                                       // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40DB[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             CallFunc_GetAllFloatMPCNamesInUse_FloatNames;      // 0x00B0(0x0050)()
	TArray<class FName>                           CallFunc_Set_ToArray_Result;                       // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40DC[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40DD[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Add_Value_ImplicitCast;               // 0x0128(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time");
static_assert(sizeof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time) == 0x000130, "Wrong size on BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, MPCFloats) == 0x000000, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::MPCFloats' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, MPCFloatMap) == 0x000050, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::MPCFloatMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_GetAllFloatMPCNamesInUse_FloatNames) == 0x0000B0, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_GetAllFloatMPCNamesInUse_FloatNames' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_Set_ToArray_Result) == 0x000100, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_Array_Get_Item) == 0x000114, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000120, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time, CallFunc_Map_Add_Value_ImplicitCast) == 0x000128, "Member 'BP_TimeOfDay_C_Capture_Float_MPCValues_at_Current_Time::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.CaptureVectorMPCValues at Current Time
// 0x0130 (0x0130 - 0x0000)
struct BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time final
{
public:
	TMap<class FName, struct FLinearColor>        MPCVectorMap;                                      // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, struct FLinearColor>        MPCVectors;                                        // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40DE[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             CallFunc_GetAllFloatMPCNamesInUse_FloatNames;      // 0x00B0(0x0050)()
	TArray<class FName>                           CallFunc_Set_ToArray_Result;                       // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40DF[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time");
static_assert(sizeof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time) == 0x000130, "Wrong size on BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, MPCVectorMap) == 0x000000, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::MPCVectorMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, MPCVectors) == 0x000050, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::MPCVectors' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, CallFunc_GetAllFloatMPCNamesInUse_FloatNames) == 0x0000B0, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::CallFunc_GetAllFloatMPCNamesInUse_FloatNames' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, CallFunc_Set_ToArray_Result) == 0x000100, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, CallFunc_Array_Get_Item) == 0x000114, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000120, "Member 'BP_TimeOfDay_C_CaptureVectorMPCValues_at_Current_Time::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.CurrentTimeAsMinutes
// 0x0010 (0x0010 - 0x0000)
struct BP_TimeOfDay_C_CurrentTimeAsMinutes final
{
public:
	double                                        Param_Time;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_CurrentTimeAsMinutes) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_CurrentTimeAsMinutes");
static_assert(sizeof(BP_TimeOfDay_C_CurrentTimeAsMinutes) == 0x000010, "Wrong size on BP_TimeOfDay_C_CurrentTimeAsMinutes");
static_assert(offsetof(BP_TimeOfDay_C_CurrentTimeAsMinutes, Param_Time) == 0x000000, "Member 'BP_TimeOfDay_C_CurrentTimeAsMinutes::Param_Time' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_CurrentTimeAsMinutes, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_TimeOfDay_C_CurrentTimeAsMinutes::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.ExecuteUbergraph_BP_TimeOfDay
// 0x2340 (0x2340 - 0x0000)
struct BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E0[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirectionalLight*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ADirectionalLight>       CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0020(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      K2Node_DynamicCast_As________;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E2[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyLight*                              CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ASkyLight>               CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AExponentialHeightFog*                  CallFunc_GetActorOfClass_ReturnValue_2;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkyLight*                              K2Node_DynamicCast_As_______;                      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E3[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AExponentialHeightFog>   CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2; // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E4[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     CallFunc_GetActorOfClass_ReturnValue_3;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class APostProcessVolume>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_3; // 0x00F0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class AExponentialHeightFog*                  K2Node_DynamicCast_As____________;                 // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E5[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     K2Node_DynamicCast_As___________;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E6[0x6];                                     // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      K2Node_DynamicCast_As_________1;                   // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E7[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      K2Node_DynamicCast_As_________2;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E8[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x016C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E9[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40EA[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      K2Node_DynamicCast_As_________3;                   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40EB[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40EC[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0268(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0350(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40ED[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0400(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40EE[0x4];                                     // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_2;             // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0580(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40EF[0x4];                                     // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_2;       // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_2;     // 0x06D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7; // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextKey_NextKey;                       // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F0[0x4];                                     // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirectionalLight*                      K2Node_DynamicCast_As_________4;                   // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F1[0x7];                                     // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x07D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue_1;              // 0x07E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F2[0x8];                                     // 0x0808(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeOfDayModifierStructure            CallFunc_MakeTimeOfDayAtCurrentTime_CurrentTOD;    // 0x0810(0x07E0)(HasGetValueTypeHash)
	double                                        CallFunc_MakeTimeOfDayAtCurrentTime_Alpha;         // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0FF8(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x1008(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x1028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F3[0x3];                                     // 0x1039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_1;                         // 0x103C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F4[0x3];                                     // 0x1041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x104C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x104D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F5[0x2];                                     // 0x104E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8; // 0x1050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      K2Node_DynamicCast_As_________5;                   // 0x1058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F6[0x3];                                     // 0x1061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPreviousKey_PreviousKey;               // 0x1064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x1068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x1078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x1080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9; // 0x1088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10; // 0x1090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkyLight*                              K2Node_DynamicCast_As________1;                    // 0x1098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x10A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F7[0x7];                                     // 0x10A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyLight*                              K2Node_DynamicCast_As________2;                    // 0x10A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x10B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F8[0x3];                                     // 0x10B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue_2;              // 0x10B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x10C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_11; // 0x10C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AExponentialHeightFog*                  K2Node_DynamicCast_As_____________1;               // 0x10D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x10D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F9[0x7];                                     // 0x10D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_12; // 0x10E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AExponentialHeightFog*                  K2Node_DynamicCast_As_____________2;               // 0x10E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x10F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FA[0x7];                                     // 0x10F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_13; // 0x10F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     K2Node_DynamicCast_As____________1;                // 0x1100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FB[0x3];                                     // 0x1109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextKey_NextKey_1;                     // 0x110C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x1110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FC[0xF];                                     // 0x1111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeOfDayModifierStructure            CallFunc_Map_Find_Value_2;                         // 0x1120(0x07E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x1900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FD[0x7];                                     // 0x1901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_14; // 0x1908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     K2Node_DynamicCast_As____________2;                // 0x1910(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FE[0x3];                                     // 0x1919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x191C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x1920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FF[0x7];                                     // 0x1921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x1928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x1930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4100[0x4];                                     // 0x1934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x1938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x1944(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4101[0x3];                                     // 0x1945(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x1948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x1950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x1958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1959(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4102[0x6];                                     // 0x195A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_NewDesiredTime;                 // 0x1960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_AdjustTimeScale;                // 0x1968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldAdjustTimeScale;          // 0x1970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4103[0x7];                                     // 0x1971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x1978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x1980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4104[0x7];                                     // 0x1981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_15; // 0x1988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkyAtmosphere*                         K2Node_DynamicCast_As__________;                   // 0x1990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x1998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x1999(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4105[0x6];                                     // 0x199A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyAtmosphere*                         CallFunc_GetActorOfClass_ReturnValue_4;            // 0x19A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ASkyAtmosphere>          CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_4; // 0x19A8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_16; // 0x19D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkyAtmosphere*                         K2Node_DynamicCast_As___________1;                 // 0x19D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x19E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4106[0x7];                                     // 0x19E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_17; // 0x19E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AExponentialHeightFog*                  K2Node_DynamicCast_As_____________3;               // 0x19F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x19F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4107[0x7];                                     // 0x19F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_18; // 0x1A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x1A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkyAtmosphere*                         K2Node_DynamicCast_As___________2;                 // 0x1A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x1A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4108[0x7];                                     // 0x1A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, double>                     CallFunc_Capture_Float_MPCValues_at_Current_Time_MPCFloats; // 0x1A20(0x0050)()
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x1A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x1A71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4109[0x6];                                     // 0x1A72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FLinearColor>        CallFunc_CaptureVectorMPCValues_at_Current_Time_MPCVectorMap; // 0x1A78(0x0050)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410A[0x7];                                     // 0x1AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeOfDayModifierStructure            K2Node_MakeStruct_TimeOfDayModifierStructure;      // 0x1AD0(0x07E0)(HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x22B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys_2;                          // 0x22B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x22C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x22CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410B[0x3];                                     // 0x22CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x22D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x22D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x22D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x22DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x22E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x22E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, float>                      K2Node_MakeStruct_MPCFloatValues_48_4EE107E94C45F38AA379028CE5216164_ImplicitCast; // 0x22F0(0x0050)()
};
static_assert(alignof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay) == 0x000010, "Wrong alignment on BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay");
static_assert(sizeof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay) == 0x002340, "Wrong size on BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, EntryPoint) == 0x000000, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_bool_IsClosed_Variable_1) == 0x000005, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000020, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As________) == 0x000050, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000060, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000068, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000090, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetActorOfClass_ReturnValue_2) == 0x000098, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetActorOfClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_______) == 0x0000A0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_______' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2) == 0x0000B0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetActorOfClass_ReturnValue_3) == 0x0000E0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetActorOfClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0000E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_3) == 0x0000F0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As____________) == 0x000118, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As____________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_IsValid_ReturnValue_2) == 0x000121, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000128, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As___________) == 0x000130, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As___________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_3) == 0x000138, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_IsValid_ReturnValue_3) == 0x000139, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000140, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_________1) == 0x000148, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_________1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_4) == 0x000150, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_IsValid_ReturnValue_4) == 0x000151, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000158, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_________2) == 0x000160, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_________2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_5) == 0x000168, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetLightColor_ReturnValue) == 0x00016C, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetRightVector_ReturnValue) == 0x000180, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000198, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetForwardVector_ReturnValue) == 0x0001A0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x0001C8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_RotateAngleAxis_ReturnValue) == 0x0001D0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_________3) == 0x0001E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_________3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_6) == 0x0001F0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0001F8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000210, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetLocalBounds_Min) == 0x000218, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetLocalBounds_Max) == 0x000230, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetForwardVector_ReturnValue_1) == 0x000248, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_VSize_ReturnValue) == 0x000260, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000268, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetTransform_ReturnValue) == 0x000350, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_bool_Has_Been_Initd_Variable) == 0x0003B0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_InverseTransformDirection_ReturnValue) == 0x0003B8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Normal_ReturnValue) == 0x0003D0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000400, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_int_Array_Index_Variable_1) == 0x0004E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_int_Loop_Counter_Variable_1) == 0x0004EC, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetRightVector_ReturnValue_1) == 0x0004F0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_IntInt_ReturnValue_1) == 0x000508, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetForwardVector_ReturnValue_2) == 0x000510, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000528, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000530, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000538, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetRightVector_ReturnValue_2) == 0x000550, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000568, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000580, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetForwardVector_ReturnValue_3) == 0x000668, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000680, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000688, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000690, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000698, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Round_ReturnValue) == 0x0006B0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_VectorToRotator_ReturnValue_2) == 0x0006B8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_VectorToRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_K2_SetWorldRotation_SweepHitResult_2) == 0x0006D0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_K2_SetWorldRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7) == 0x0007B8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetNextKey_NextKey) == 0x0007C0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetNextKey_NextKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_________4) == 0x0007C8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_________4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_7) == 0x0007D0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_IntToString_ReturnValue) == 0x0007D8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetLightColor_ReturnValue_1) == 0x0007E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetLightColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0007F8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000800, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_MakeTimeOfDayAtCurrentTime_CurrentTOD) == 0x000810, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_MakeTimeOfDayAtCurrentTime_CurrentTOD' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_MakeTimeOfDayAtCurrentTime_Alpha) == 0x000FF0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_MakeTimeOfDayAtCurrentTime_Alpha' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Keys_Keys) == 0x000FF8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Keys_Keys_1) == 0x001008, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Array_Get_Item) == 0x001018, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Array_Get_Item_1) == 0x001020, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Find_Value) == 0x001028, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Find_ReturnValue) == 0x001038, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Find_Value_1) == 0x00103C, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Find_ReturnValue_1) == 0x001040, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Array_Length_ReturnValue) == 0x001044, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Array_Length_ReturnValue_1) == 0x001048, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Less_IntInt_ReturnValue) == 0x00104C, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Less_IntInt_ReturnValue_1) == 0x00104D, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8) == 0x001050, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_________5) == 0x001058, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_________5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_8) == 0x001060, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetPreviousKey_PreviousKey) == 0x001064, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetPreviousKey_PreviousKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_IntToString_ReturnValue_1) == 0x001068, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x001078, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x001080, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9) == 0x001088, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10) == 0x001090, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As________1) == 0x001098, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As________1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_9) == 0x0010A0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As________2) == 0x0010A8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As________2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_10) == 0x0010B0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetLightColor_ReturnValue_2) == 0x0010B4, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetLightColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_int_Array_Index_Variable_2) == 0x0010C4, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_11) == 0x0010C8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_____________1) == 0x0010D0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_____________1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_11) == 0x0010D8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_12) == 0x0010E0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_____________2) == 0x0010E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_____________2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_12) == 0x0010F0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_13) == 0x0010F8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As____________1) == 0x001100, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As____________1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_13) == 0x001108, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetNextKey_NextKey_1) == 0x00110C, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetNextKey_NextKey_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_IsValid_ReturnValue_5) == 0x001110, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Find_Value_2) == 0x001120, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Find_ReturnValue_2) == 0x001900, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_14) == 0x001908, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As____________2) == 0x001910, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As____________2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_14) == 0x001918, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_Event_DeltaSeconds) == 0x00191C, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_SwitchEnum_CmpSuccess) == 0x001920, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x001928, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_int_Loop_Counter_Variable_2) == 0x001930, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x001938, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_IntInt_ReturnValue_2) == 0x001940, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Less_DoubleDouble_ReturnValue) == 0x001944, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x001948, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x001950, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x001958, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_BooleanAND_ReturnValue) == 0x001959, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_CustomEvent_NewDesiredTime) == 0x001960, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_CustomEvent_NewDesiredTime' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_CustomEvent_AdjustTimeScale) == 0x001968, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_CustomEvent_AdjustTimeScale' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_CustomEvent_ShouldAdjustTimeScale) == 0x001970, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_CustomEvent_ShouldAdjustTimeScale' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Percent_FloatFloat_ReturnValue) == 0x001978, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, Temp_bool_Has_Been_Initd_Variable_1) == 0x001980, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_15) == 0x001988, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As__________) == 0x001990, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As__________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_15) == 0x001998, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_IsValid_ReturnValue_6) == 0x001999, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GetActorOfClass_ReturnValue_4) == 0x0019A0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GetActorOfClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_4) == 0x0019A8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_16) == 0x0019D0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As___________1) == 0x0019D8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As___________1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_16) == 0x0019E0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_17) == 0x0019E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As_____________3) == 0x0019F0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As_____________3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_17) == 0x0019F8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_18) == 0x001A00, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x001A08, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_As___________2) == 0x001A10, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_As___________2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_DynamicCast_bSuccess_18) == 0x001A18, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Capture_Float_MPCValues_at_Current_Time_MPCFloats) == 0x001A20, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Capture_Float_MPCValues_at_Current_Time_MPCFloats' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x001A70, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x001A71, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_CaptureVectorMPCValues_at_Current_Time_MPCVectorMap) == 0x001A78, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_CaptureVectorMPCValues_at_Current_Time_MPCVectorMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_BooleanAND_ReturnValue_1) == 0x001AC8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_MakeStruct_TimeOfDayModifierStructure) == 0x001AD0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_MakeStruct_TimeOfDayModifierStructure' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0022B0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Map_Keys_Keys_2) == 0x0022B8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Array_Length_ReturnValue_2) == 0x0022C8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Less_IntInt_ReturnValue_2) == 0x0022CC, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0022D0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x0022D4, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x0022D8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x0022DC, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0022E0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0022E8, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay, K2Node_MakeStruct_MPCFloatValues_48_4EE107E94C45F38AA379028CE5216164_ImplicitCast) == 0x0022F0, "Member 'BP_TimeOfDay_C_ExecuteUbergraph_BP_TimeOfDay::K2Node_MakeStruct_MPCFloatValues_48_4EE107E94C45F38AA379028CE5216164_ImplicitCast' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.GetAllFloatMPCNamesInUse
// 0x08D0 (0x08D0 - 0x0000)
struct BP_TimeOfDay_C_GetAllFloatMPCNamesInUse final
{
public:
	TSet<class FName>                             FloatNames;                                        // 0x0000(0x0050)(Parm, OutParm)
	TSet<class FName>                             KeySet;                                            // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410C[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410D[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeOfDayModifierStructure            CallFunc_Map_Find_Value;                           // 0x00D0(0x07E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410E[0x7];                                     // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x08B8(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse) == 0x000010, "Wrong alignment on BP_TimeOfDay_C_GetAllFloatMPCNamesInUse");
static_assert(sizeof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse) == 0x0008D0, "Wrong size on BP_TimeOfDay_C_GetAllFloatMPCNamesInUse");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, FloatNames) == 0x000000, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::FloatNames' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, KeySet) == 0x000050, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::KeySet' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Array_Get_Item) == 0x0000C4, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Map_Find_ReturnValue) == 0x0008B0, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllFloatMPCNamesInUse, CallFunc_Map_Keys_Keys_1) == 0x0008B8, "Member 'BP_TimeOfDay_C_GetAllFloatMPCNamesInUse::CallFunc_Map_Keys_Keys_1' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.GetAllVectorMPCNamesInUse
// 0x08D0 (0x08D0 - 0x0000)
struct BP_TimeOfDay_C_GetAllVectorMPCNamesInUse final
{
public:
	TSet<class FName>                             FloatNames;                                        // 0x0000(0x0050)(Parm, OutParm)
	TSet<class FName>                             KeySet;                                            // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410F[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeOfDayModifierStructure            CallFunc_Map_Find_Value;                           // 0x00B0(0x07E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4110[0x7];                                     // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0898(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4111[0x4];                                     // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x08B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse) == 0x000010, "Wrong alignment on BP_TimeOfDay_C_GetAllVectorMPCNamesInUse");
static_assert(sizeof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse) == 0x0008D0, "Wrong size on BP_TimeOfDay_C_GetAllVectorMPCNamesInUse");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, FloatNames) == 0x000000, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::FloatNames' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, KeySet) == 0x000050, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::KeySet' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, CallFunc_Map_Find_ReturnValue) == 0x000890, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, CallFunc_Map_Keys_Keys) == 0x000898, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, CallFunc_Array_Length_ReturnValue) == 0x0008A8, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, CallFunc_Map_Keys_Keys_1) == 0x0008B0, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetAllVectorMPCNamesInUse, CallFunc_Less_IntInt_ReturnValue) == 0x0008C0, "Member 'BP_TimeOfDay_C_GetAllVectorMPCNamesInUse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.GetCurrentKey
// 0x0018 (0x0018 - 0x0000)
struct BP_TimeOfDay_C_GetCurrentKey final
{
public:
	int32                                         CurrentKey;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4112[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CurrentTimeAsMinutes_Time;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_GetCurrentKey) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_GetCurrentKey");
static_assert(sizeof(BP_TimeOfDay_C_GetCurrentKey) == 0x000018, "Wrong size on BP_TimeOfDay_C_GetCurrentKey");
static_assert(offsetof(BP_TimeOfDay_C_GetCurrentKey, CurrentKey) == 0x000000, "Member 'BP_TimeOfDay_C_GetCurrentKey::CurrentKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetCurrentKey, CallFunc_CurrentTimeAsMinutes_Time) == 0x000008, "Member 'BP_TimeOfDay_C_GetCurrentKey::CallFunc_CurrentTimeAsMinutes_Time' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetCurrentKey, CallFunc_FFloor_ReturnValue) == 0x000010, "Member 'BP_TimeOfDay_C_GetCurrentKey::CallFunc_FFloor_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.GetNextKey
// 0x0078 (0x0078 - 0x0000)
struct BP_TimeOfDay_C_GetNextKey final
{
public:
	int32                                         NextKey;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentAssessedKeyDistance;                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentAssessedKeyElement;                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentNextKeyDistance;                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentNextKey;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4113[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4114[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4115[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentKey_CurrentKey_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey_2;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey_3;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4116[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_GetNextKey) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_GetNextKey");
static_assert(sizeof(BP_TimeOfDay_C_GetNextKey) == 0x000078, "Wrong size on BP_TimeOfDay_C_GetNextKey");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, NextKey) == 0x000000, "Member 'BP_TimeOfDay_C_GetNextKey::NextKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CurrentAssessedKeyDistance) == 0x000004, "Member 'BP_TimeOfDay_C_GetNextKey::CurrentAssessedKeyDistance' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CurrentAssessedKeyElement) == 0x000008, "Member 'BP_TimeOfDay_C_GetNextKey::CurrentAssessedKeyElement' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CurrentNextKeyDistance) == 0x00000C, "Member 'BP_TimeOfDay_C_GetNextKey::CurrentNextKeyDistance' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CurrentNextKey) == 0x000010, "Member 'BP_TimeOfDay_C_GetNextKey::CurrentNextKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'BP_TimeOfDay_C_GetNextKey::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_TimeOfDay_C_GetNextKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_TimeOfDay_C_GetNextKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Multiply_IntInt_ReturnValue) == 0x000028, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_GetCurrentKey_CurrentKey) == 0x00002C, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_GetCurrentKey_CurrentKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_GetCurrentKey_CurrentKey_1) == 0x000034, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_GetCurrentKey_CurrentKey_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_GetCurrentKey_CurrentKey_2) == 0x00003C, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_GetCurrentKey_CurrentKey_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_GetCurrentKey_CurrentKey_3) == 0x00004C, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_GetCurrentKey_CurrentKey_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_SelectInt_ReturnValue) == 0x000068, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetNextKey, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'BP_TimeOfDay_C_GetNextKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.GetPreviousKey
// 0x0078 (0x0078 - 0x0000)
struct BP_TimeOfDay_C_GetPreviousKey final
{
public:
	int32                                         PreviousKey;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentAssessedKeyDistance;                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentAssessedKeyElement;                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPreviousKeyDistance;                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPreviousKey;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4117[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4118[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4119[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentKey_CurrentKey_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey_2;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey_3;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_GetPreviousKey) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_GetPreviousKey");
static_assert(sizeof(BP_TimeOfDay_C_GetPreviousKey) == 0x000078, "Wrong size on BP_TimeOfDay_C_GetPreviousKey");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, PreviousKey) == 0x000000, "Member 'BP_TimeOfDay_C_GetPreviousKey::PreviousKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CurrentAssessedKeyDistance) == 0x000004, "Member 'BP_TimeOfDay_C_GetPreviousKey::CurrentAssessedKeyDistance' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CurrentAssessedKeyElement) == 0x000008, "Member 'BP_TimeOfDay_C_GetPreviousKey::CurrentAssessedKeyElement' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CurrentPreviousKeyDistance) == 0x00000C, "Member 'BP_TimeOfDay_C_GetPreviousKey::CurrentPreviousKeyDistance' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CurrentPreviousKey) == 0x000010, "Member 'BP_TimeOfDay_C_GetPreviousKey::CurrentPreviousKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'BP_TimeOfDay_C_GetPreviousKey::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_TimeOfDay_C_GetPreviousKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_TimeOfDay_C_GetPreviousKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Multiply_IntInt_ReturnValue) == 0x000028, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_GetCurrentKey_CurrentKey) == 0x00002C, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_GetCurrentKey_CurrentKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_GetCurrentKey_CurrentKey_1) == 0x000034, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_GetCurrentKey_CurrentKey_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_GetCurrentKey_CurrentKey_2) == 0x00003C, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_GetCurrentKey_CurrentKey_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_GetCurrentKey_CurrentKey_3) == 0x00004C, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_GetCurrentKey_CurrentKey_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_SelectInt_ReturnValue) == 0x000068, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_GetPreviousKey, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'BP_TimeOfDay_C_GetPreviousKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.LerpFloatMap
// 0x01F8 (0x01F8 - 0x0000)
struct BP_TimeOfDay_C_LerpFloatMap final
{
public:
	TMap<class FName, double>                     One;                                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class FName, double>                     Two;                                               // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Alpha;                                             // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, double>                     LerpedMap;                                         // 0x00A8(0x0050)(Parm, OutParm)
	TSet<class FName>                             Names;                                             // 0x00F8(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, double>                     OutputMap;                                         // 0x0148(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411B[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x01A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411C[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411D[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411E[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_LerpFloatMap) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_LerpFloatMap");
static_assert(sizeof(BP_TimeOfDay_C_LerpFloatMap) == 0x0001F8, "Wrong size on BP_TimeOfDay_C_LerpFloatMap");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, One) == 0x000000, "Member 'BP_TimeOfDay_C_LerpFloatMap::One' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, Two) == 0x000050, "Member 'BP_TimeOfDay_C_LerpFloatMap::Two' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, Alpha) == 0x0000A0, "Member 'BP_TimeOfDay_C_LerpFloatMap::Alpha' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, LerpedMap) == 0x0000A8, "Member 'BP_TimeOfDay_C_LerpFloatMap::LerpedMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, Names) == 0x0000F8, "Member 'BP_TimeOfDay_C_LerpFloatMap::Names' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, OutputMap) == 0x000148, "Member 'BP_TimeOfDay_C_LerpFloatMap::OutputMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, Temp_int_Loop_Counter_Variable) == 0x000198, "Member 'BP_TimeOfDay_C_LerpFloatMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Map_Keys_Keys) == 0x0001A0, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Add_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Array_Length_ReturnValue) == 0x0001B4, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, Temp_int_Array_Index_Variable) == 0x0001BC, "Member 'BP_TimeOfDay_C_LerpFloatMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Map_Find_Value) == 0x0001C8, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Map_Find_ReturnValue) == 0x0001D0, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Map_Find_Value_1) == 0x0001D8, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Map_Find_ReturnValue_1) == 0x0001E0, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_Lerp_ReturnValue) == 0x0001E8, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpFloatMap, CallFunc_SelectFloat_ReturnValue) == 0x0001F0, "Member 'BP_TimeOfDay_C_LerpFloatMap::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.LerpVectorMap
// 0x01C8 (0x01C8 - 0x0000)
struct BP_TimeOfDay_C_LerpVectorMap final
{
public:
	TMap<class FName, struct FLinearColor>        One;                                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class FName, struct FLinearColor>        Two;                                               // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Alpha;                                             // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FLinearColor>        LerpedMap;                                         // 0x00A8(0x0050)(Parm, OutParm)
	TMap<class FName, struct FLinearColor>        NewMap;                                            // 0x00F8(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411F[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0150(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x016C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4120[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_1;                         // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4121[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4122[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_LerpVectorMap) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_LerpVectorMap");
static_assert(sizeof(BP_TimeOfDay_C_LerpVectorMap) == 0x0001C8, "Wrong size on BP_TimeOfDay_C_LerpVectorMap");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, One) == 0x000000, "Member 'BP_TimeOfDay_C_LerpVectorMap::One' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, Two) == 0x000050, "Member 'BP_TimeOfDay_C_LerpVectorMap::Two' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, Alpha) == 0x0000A0, "Member 'BP_TimeOfDay_C_LerpVectorMap::Alpha' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, LerpedMap) == 0x0000A8, "Member 'BP_TimeOfDay_C_LerpVectorMap::LerpedMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, NewMap) == 0x0000F8, "Member 'BP_TimeOfDay_C_LerpVectorMap::NewMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, Temp_int_Array_Index_Variable) == 0x000148, "Member 'BP_TimeOfDay_C_LerpVectorMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Map_Keys_Keys) == 0x000150, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Map_Find_Value) == 0x00016C, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Map_Find_ReturnValue) == 0x00017C, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Map_Find_Value_1) == 0x000180, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Map_Find_ReturnValue_1) == 0x000190, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, Temp_int_Loop_Counter_Variable) == 0x000194, "Member 'BP_TimeOfDay_C_LerpVectorMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_LinearColorLerp_ReturnValue) == 0x000198, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_SelectColor_ReturnValue) == 0x0001A8, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_Add_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_LerpVectorMap, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0001C0, "Member 'BP_TimeOfDay_C_LerpVectorMap::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.MakeTimeOfDayAtCurrentTime
// 0x42D0 (0x42D0 - 0x0000)
struct BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime final
{
public:
	struct FTimeOfDayModifierStructure            CurrentTOD;                                        // 0x0000(0x07E0)(Parm, OutParm, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x07E0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinutesInADay;                                     // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextKeyTime;                                       // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousKeyTime;                                   // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeOfDayModifierStructure            PreviousTimeOfDay;                                 // 0x0800(0x07E0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FTimeOfDayModifierStructure            NextTimeOfDay;                                     // 0x0FE0(0x07E0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        CurrentAlpha;                                      // 0x17C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4123[0x8];                                     // 0x17C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeOfDayModifierStructure            CurrentTimeOfDay;                                  // 0x17D0(0x07E0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey;                 // 0x1FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentKey_CurrentKey_1;               // 0x1FB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x1FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeOfDayModifierStructure            CallFunc_Map_Find_Value;                           // 0x1FC0(0x07E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x27A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4124[0x7];                                     // 0x27A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CurrentTimeAsMinutes_Time;                // 0x27A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CurrentTimeAsMinutes_Time_1;              // 0x27B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x27B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CurrentTimeAsMinutes_Time_2;              // 0x27C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x27C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4125[0x7];                                     // 0x27C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x27D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x27D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x27E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4126[0x7];                                     // 0x27E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x27E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x27F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x27F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x2800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x2808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x2810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x2818(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FLinearColor>        CallFunc_LerpVectorMap_LerpedMap;                  // 0x2828(0x0050)()
	TMap<class FName, double>                     CallFunc_LerpFloatMap_LerpedMap;                   // 0x2878(0x0050)()
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x28C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x28D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x28D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x28E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x28E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x28F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x2900(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x2910(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x2920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x2928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4127[0x4];                                     // 0x292C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x2930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x2938(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x2948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_3;            // 0x2950(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeOfDayModifierStructure            K2Node_MakeStruct_TimeOfDayModifierStructure;      // 0x2960(0x07E0)(HasGetValueTypeHash)
	int32                                         CallFunc_GetPreviousKey_PreviousKey;               // 0x3140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4128[0x4];                                     // 0x3144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x3148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeOfDayModifierStructure            CallFunc_Map_Find_Value_1;                         // 0x3150(0x07E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x3930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4129[0x3];                                     // 0x3931(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextKey_NextKey;                       // 0x3934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412A[0x8];                                     // 0x3938(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeOfDayModifierStructure            CallFunc_Map_Find_Value_2;                         // 0x3940(0x07E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x4120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412B[0x7];                                     // 0x4121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x4128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x4130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x4134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x4138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_3;     // 0x413C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x4140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x4148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_2;                    // 0x4150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_3;                    // 0x4158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_4;                    // 0x4160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_5;                    // 0x4168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_6;                    // 0x4170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_7;                    // 0x4178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, double>                     CallFunc_LerpFloatMap_2_ImplicitCast;              // 0x4180(0x0050)()
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x41D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_1;                    // 0x41D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_2;                    // 0x41E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_3;                    // 0x41E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_4;                    // 0x41F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_5;                    // 0x41F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_6;                    // 0x4200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_7;                    // 0x4208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, double>                     CallFunc_LerpFloatMap_1_ImplicitCast;              // 0x4210(0x0050)()
	TMap<class FName, float>                      K2Node_MakeStruct_MPCFloatValues_48_4EE107E94C45F38AA379028CE5216164_ImplicitCast; // 0x4260(0x0050)()
	float                                         K2Node_MakeStruct_SkyAtmosphereAerialPerspectiveViewDistanceScale_39_65FE770A46221EF4E40946ADD00D29D4_ImplicitCast; // 0x42B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_SkyAtmosphereMieAbsorptionScale_37_A5270CA24A034314965CB4A4406E247E_ImplicitCast; // 0x42B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_SkyAtmosphereMieScatteringScale_35_7C6F26C74FD9CD59F8DBF7BBC4B8E4A0_ImplicitCast; // 0x42B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_VolumetricFogExtinctionScale_33_F133D89C4FA9294B165461A941F021EB_ImplicitCast; // 0x42BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_VolumetricFogScatteringDistribution_31_4380437242F8679BD62B7FAB395F36AD_ImplicitCast; // 0x42C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FogHeightFalloff_16_A8E506F14FCD774B2C1C05B66A760ADA_ImplicitCast; // 0x42C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FogDensity_14_F1AB23F84DAEFF8E2D1295BE1D295E8B_ImplicitCast; // 0x42C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_SunIntensity_8_7D95758947F43FF2E883B0930887D320_ImplicitCast; // 0x42CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime) == 0x000010, "Wrong alignment on BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime");
static_assert(sizeof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime) == 0x0042D0, "Wrong size on BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CurrentTOD) == 0x000000, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CurrentTOD' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, Alpha) == 0x0007E0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::Alpha' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, MinutesInADay) == 0x0007E8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::MinutesInADay' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, NextKeyTime) == 0x0007F0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::NextKeyTime' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, PreviousKeyTime) == 0x0007F8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::PreviousKeyTime' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, PreviousTimeOfDay) == 0x000800, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::PreviousTimeOfDay' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, NextTimeOfDay) == 0x000FE0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::NextTimeOfDay' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CurrentAlpha) == 0x0017C0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CurrentAlpha' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CurrentTimeOfDay) == 0x0017D0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CurrentTimeOfDay' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_GetCurrentKey_CurrentKey) == 0x001FB0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_GetCurrentKey_CurrentKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_GetCurrentKey_CurrentKey_1) == 0x001FB4, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_GetCurrentKey_CurrentKey_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Conv_IntToDouble_ReturnValue) == 0x001FB8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Map_Find_Value) == 0x001FC0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Map_Find_ReturnValue) == 0x0027A0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_CurrentTimeAsMinutes_Time) == 0x0027A8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_CurrentTimeAsMinutes_Time' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_CurrentTimeAsMinutes_Time_1) == 0x0027B0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_CurrentTimeAsMinutes_Time_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0027B8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_CurrentTimeAsMinutes_Time_2) == 0x0027C0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_CurrentTimeAsMinutes_Time_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0027C8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_SelectFloat_ReturnValue) == 0x0027D0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0027D8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0027E0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Abs_ReturnValue) == 0x0027E8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0027F0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_SelectFloat_ReturnValue_1) == 0x0027F8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x002800, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Abs_ReturnValue_1) == 0x002808, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x002810, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x002818, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LerpVectorMap_LerpedMap) == 0x002828, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LerpVectorMap_LerpedMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LerpFloatMap_LerpedMap) == 0x002878, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LerpFloatMap_LerpedMap' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue) == 0x0028C8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue_1) == 0x0028D0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue_2) == 0x0028D8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue_3) == 0x0028E0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue_4) == 0x0028E8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x0028F0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_ReturnValue) == 0x002900, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_ReturnValue_1) == 0x002910, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue_5) == 0x002920, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x002928, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue_6) == 0x002930, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_ReturnValue_2) == 0x002938, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_ReturnValue_7) == 0x002948, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_ReturnValue_3) == 0x002950, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_TimeOfDayModifierStructure) == 0x002960, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_TimeOfDayModifierStructure' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_GetPreviousKey_PreviousKey) == 0x003140, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_GetPreviousKey_PreviousKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x003148, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Map_Find_Value_1) == 0x003150, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Map_Find_ReturnValue_1) == 0x003930, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_GetNextKey_NextKey) == 0x003934, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_GetNextKey_NextKey' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Map_Find_Value_2) == 0x003940, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Map_Find_ReturnValue_2) == 0x004120, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x004128, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x004130, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x004134, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x004138, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LinearColorLerp_Alpha_ImplicitCast_3) == 0x00413C, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LinearColorLerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast) == 0x004140, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast_1) == 0x004148, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast_2) == 0x004150, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast_3) == 0x004158, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast_4) == 0x004160, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast_5) == 0x004168, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast_6) == 0x004170, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_B_ImplicitCast_7) == 0x004178, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_B_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LerpFloatMap_2_ImplicitCast) == 0x004180, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LerpFloatMap_2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast) == 0x0041D0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast_1) == 0x0041D8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast_2) == 0x0041E0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast_3) == 0x0041E8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast_4) == 0x0041F0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast_5) == 0x0041F8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast_6) == 0x004200, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_Lerp_A_ImplicitCast_7) == 0x004208, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_Lerp_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, CallFunc_LerpFloatMap_1_ImplicitCast) == 0x004210, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::CallFunc_LerpFloatMap_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_MPCFloatValues_48_4EE107E94C45F38AA379028CE5216164_ImplicitCast) == 0x004260, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_MPCFloatValues_48_4EE107E94C45F38AA379028CE5216164_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_SkyAtmosphereAerialPerspectiveViewDistanceScale_39_65FE770A46221EF4E40946ADD00D29D4_ImplicitCast) == 0x0042B0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_SkyAtmosphereAerialPerspectiveViewDistanceScale_39_65FE770A46221EF4E40946ADD00D29D4_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_SkyAtmosphereMieAbsorptionScale_37_A5270CA24A034314965CB4A4406E247E_ImplicitCast) == 0x0042B4, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_SkyAtmosphereMieAbsorptionScale_37_A5270CA24A034314965CB4A4406E247E_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_SkyAtmosphereMieScatteringScale_35_7C6F26C74FD9CD59F8DBF7BBC4B8E4A0_ImplicitCast) == 0x0042B8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_SkyAtmosphereMieScatteringScale_35_7C6F26C74FD9CD59F8DBF7BBC4B8E4A0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_VolumetricFogExtinctionScale_33_F133D89C4FA9294B165461A941F021EB_ImplicitCast) == 0x0042BC, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_VolumetricFogExtinctionScale_33_F133D89C4FA9294B165461A941F021EB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_VolumetricFogScatteringDistribution_31_4380437242F8679BD62B7FAB395F36AD_ImplicitCast) == 0x0042C0, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_VolumetricFogScatteringDistribution_31_4380437242F8679BD62B7FAB395F36AD_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_FogHeightFalloff_16_A8E506F14FCD774B2C1C05B66A760ADA_ImplicitCast) == 0x0042C4, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_FogHeightFalloff_16_A8E506F14FCD774B2C1C05B66A760ADA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_FogDensity_14_F1AB23F84DAEFF8E2D1295BE1D295E8B_ImplicitCast) == 0x0042C8, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_FogDensity_14_F1AB23F84DAEFF8E2D1295BE1D295E8B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime, K2Node_MakeStruct_SunIntensity_8_7D95758947F43FF2E883B0930887D320_ImplicitCast) == 0x0042CC, "Member 'BP_TimeOfDay_C_MakeTimeOfDayAtCurrentTime::K2Node_MakeStruct_SunIntensity_8_7D95758947F43FF2E883B0930887D320_ImplicitCast' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TimeOfDay_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TimeOfDay_C_ReceiveTick");
static_assert(sizeof(BP_TimeOfDay_C_ReceiveTick) == 0x000004, "Wrong size on BP_TimeOfDay_C_ReceiveTick");
static_assert(offsetof(BP_TimeOfDay_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_TimeOfDay_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.SetNewDesiredTime
// 0x0018 (0x0018 - 0x0000)
struct BP_TimeOfDay_C_SetNewDesiredTime final
{
public:
	double                                        NewDesiredTime;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AdjustTimeScale;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAdjustTimeScale;                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_SetNewDesiredTime) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_SetNewDesiredTime");
static_assert(sizeof(BP_TimeOfDay_C_SetNewDesiredTime) == 0x000018, "Wrong size on BP_TimeOfDay_C_SetNewDesiredTime");
static_assert(offsetof(BP_TimeOfDay_C_SetNewDesiredTime, NewDesiredTime) == 0x000000, "Member 'BP_TimeOfDay_C_SetNewDesiredTime::NewDesiredTime' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_SetNewDesiredTime, AdjustTimeScale) == 0x000008, "Member 'BP_TimeOfDay_C_SetNewDesiredTime::AdjustTimeScale' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_SetNewDesiredTime, ShouldAdjustTimeScale) == 0x000010, "Member 'BP_TimeOfDay_C_SetNewDesiredTime::ShouldAdjustTimeScale' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.SetNewTime
// 0x0020 (0x0020 - 0x0000)
struct BP_TimeOfDay_C_SetNewTime final
{
public:
	double                                        NewTime;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OldTime;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_SetNewTime) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_SetNewTime");
static_assert(sizeof(BP_TimeOfDay_C_SetNewTime) == 0x000020, "Wrong size on BP_TimeOfDay_C_SetNewTime");
static_assert(offsetof(BP_TimeOfDay_C_SetNewTime, NewTime) == 0x000000, "Member 'BP_TimeOfDay_C_SetNewTime::NewTime' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_SetNewTime, OldTime) == 0x000008, "Member 'BP_TimeOfDay_C_SetNewTime::OldTime' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_SetNewTime, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_TimeOfDay_C_SetNewTime::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_SetNewTime, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_TimeOfDay_C_SetNewTime::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_TimeOfDay.BP_TimeOfDay_C.UserConstructionScript
// 0x01E0 (0x01E0 - 0x0000)
struct BP_TimeOfDay_C_UserConstructionScript final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyAtmosphere*                         K2Node_DynamicCast_As__________;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     K2Node_DynamicCast_As___________;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4130[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AExponentialHeightFog*                  K2Node_DynamicCast_As____________;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4131[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4132[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkyLight*                              K2Node_DynamicCast_As_______;                      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4133[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirectionalLight*                      K2Node_DynamicCast_As________;                     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4134[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_4;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4135[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_4; // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4136[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4137[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4138[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4139[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413A[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413B[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeOfDay_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_TimeOfDay_C_UserConstructionScript");
static_assert(sizeof(BP_TimeOfDay_C_UserConstructionScript) == 0x0001E0, "Wrong size on BP_TimeOfDay_C_UserConstructionScript");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000008, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_As__________) == 0x000010, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_As__________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Map_Length_ReturnValue) == 0x000030, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000050, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000058, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_As___________) == 0x000060, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_As___________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_As____________) == 0x000070, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_As____________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue_1) == 0x000080, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue_2) == 0x000090, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0000A0, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0000A1, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0000A8, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x0000B0, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_As_______) == 0x0000B8, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_As_______' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_As________) == 0x0000C8, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_As________' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'BP_TimeOfDay_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue_3) == 0x0000D8, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue_4) == 0x0000E8, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x0000F8, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_4) == 0x000110, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_1) == 0x000140, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_2) == 0x000158, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000160, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_3) == 0x000170, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000178, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_4) == 0x000188, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000190, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001A0, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001B0, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001C0, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TimeOfDay_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001D0, "Member 'BP_TimeOfDay_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");

}

