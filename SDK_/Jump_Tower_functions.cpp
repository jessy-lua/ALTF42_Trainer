#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Jump_Tower

#include "Basic.hpp"

#include "Jump_Tower_classes.hpp"
#include "Jump_Tower_parameters.hpp"


namespace SDK
{

// Function Jump_Tower.Jump_Tower_C.BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AJump_Tower_C::BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Jump_Tower.Jump_Tower_C.BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AJump_Tower_C::BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Jump_Tower.Jump_Tower_C.ExecuteUbergraph_Jump_Tower
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AJump_Tower_C::ExecuteUbergraph_Jump_Tower(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "ExecuteUbergraph_Jump_Tower");

	Params::Jump_Tower_C_ExecuteUbergraph_Jump_Tower Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Jump_Tower.Jump_Tower_C.Jump_TL__DetectEvent__EventFunc
// (BlueprintEvent)

void AJump_Tower_C::Jump_TL__DetectEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "Jump_TL__DetectEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Jump_Tower.Jump_Tower_C.Jump_TL__FinishedFunc
// (BlueprintEvent)

void AJump_Tower_C::Jump_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "Jump_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Jump_Tower.Jump_Tower_C.Jump_TL__UpdateFunc
// (BlueprintEvent)

void AJump_Tower_C::Jump_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "Jump_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Jump_Tower.Jump_Tower_C.JumpTower_Reset
// (BlueprintCallable, BlueprintEvent)

void AJump_Tower_C::JumpTower_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "JumpTower_Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Jump_Tower.Jump_Tower_C.JumpZone_TL__DetectEvent__EventFunc
// (BlueprintEvent)

void AJump_Tower_C::JumpZone_TL__DetectEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "JumpZone_TL__DetectEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Jump_Tower.Jump_Tower_C.JumpZone_TL__FinishedFunc
// (BlueprintEvent)

void AJump_Tower_C::JumpZone_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "JumpZone_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Jump_Tower.Jump_Tower_C.JumpZone_TL__UpdateFunc
// (BlueprintEvent)

void AJump_Tower_C::JumpZone_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "JumpZone_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Jump_Tower.Jump_Tower_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AJump_Tower_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Jump_Tower_C", "OnLanded");

	Params::Jump_Tower_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}

}

