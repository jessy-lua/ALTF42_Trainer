#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Map_A_01

#include "Basic.hpp"


namespace SDK::Params
{

// Function map_A_01.map_A_01_C.BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Map_A_01_C_BndEvt__map_03_TriggerVolume_5_K2Node_ActorBoundEvent_10_ActorBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function map_A_01.map_A_01_C.BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Map_A_01_C_BndEvt__map_A_01_TriggerBox_1_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function map_A_01.map_A_01_C.BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function map_A_01.map_A_01_C.BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Map_A_01_C_BndEvt__map_A_01_TriggerSphere_1_K2Node_ActorBoundEvent_2_ActorEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function map_A_01.map_A_01_C.ExecuteUbergraph_map_A_01
// 0x0118 (0x0118 - 0x0000)
struct Map_A_01_C_ExecuteUbergraph_map_A_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422D[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor_3;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor_3;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422E[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422F[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor_2;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor_2;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_1;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4230[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_2;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4231[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor_1;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor_1;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_3;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4232[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor;                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_4;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4233[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 K2Node_DynamicCast_AsALTF42_Game_Instance;         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4234[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkech_Toon_Widget_C*                   CallFunc_Create_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4235[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Map_A_01_C_ExecuteUbergraph_map_A_01) == 0x000008, "Wrong alignment on Map_A_01_C_ExecuteUbergraph_map_A_01");
static_assert(sizeof(Map_A_01_C_ExecuteUbergraph_map_A_01) == 0x000118, "Wrong size on Map_A_01_C_ExecuteUbergraph_map_A_01");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, EntryPoint) == 0x000000, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OverlappedActor_3) == 0x000008, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OverlappedActor_3' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OtherActor_3) == 0x000010, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, Temp_bool_Has_Been_Initd_Variable_2) == 0x000020, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, Temp_bool_IsClosed_Variable_1) == 0x000022, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000028, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000030, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000040, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OverlappedActor_2) == 0x000048, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OverlappedActor_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OtherActor_2) == 0x000050, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_AsALTF4_Loco_BP_1) == 0x000058, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_AsALTF4_Loco_BP_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_AsALTF4_Loco_BP_2) == 0x000068, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_AsALTF4_Loco_BP_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OverlappedActor_1) == 0x000078, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OverlappedActor_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OtherActor_1) == 0x000080, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_AsALTF4_Loco_BP_3) == 0x000090, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_AsALTF4_Loco_BP_3' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OverlappedActor) == 0x0000A0, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_ActorBoundEvent_OtherActor) == 0x0000A8, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_ActorBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_AsALTF4_Loco_BP_4) == 0x0000B0, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_AsALTF4_Loco_BP_4' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_bSuccess_4) == 0x0000B8, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetGameInstance_ReturnValue) == 0x0000C0, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_AsALTF42_Game_Instance) == 0x0000C8, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_AsALTF42_Game_Instance' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, K2Node_DynamicCast_bSuccess_5) == 0x0000D0, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetPlayerController_ReturnValue) == 0x0000D8, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_Create_ReturnValue) == 0x0000E0, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x0000E8, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000F0, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_GetPlayerController_ReturnValue_2) == 0x0000F8, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, Temp_bool_IsClosed_Variable_2) == 0x000100, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000108, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Map_A_01_C_ExecuteUbergraph_map_A_01, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000110, "Member 'Map_A_01_C_ExecuteUbergraph_map_A_01::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

}

