#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_turret

#include "Basic.hpp"

#include "BP_turret_classes.hpp"
#include "BP_turret_parameters.hpp"


namespace SDK
{

// Function BP_turret.BP_Turret_C.Barrel Rotation Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Turret_C::Barrel_Rotation_Multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "Barrel Rotation Multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_turret.BP_Turret_C.Barrel Rotation Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Turret_C::Barrel_Rotation_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "Barrel Rotation Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_turret.BP_Turret_C.BndEvt__BP_Turret_Hit_Only_RocketChick_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Turret_C::BndEvt__BP_Turret_Hit_Only_RocketChick_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "BndEvt__BP_Turret_Hit_Only_RocketChick_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");

	Params::BP_Turret_C_BndEvt__BP_Turret_Hit_Only_RocketChick_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_turret.BP_Turret_C.BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_C::BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature");

	Params::BP_Turret_C_BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_turret.BP_Turret_C.Destroy_Turret_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_C::Destroy_Turret_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "Destroy_Turret_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_turret.BP_Turret_C.ExecuteUbergraph_BP_Turret
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_C::ExecuteUbergraph_BP_Turret(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "ExecuteUbergraph_BP_Turret");

	Params::BP_Turret_C_ExecuteUbergraph_BP_Turret Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_turret.BP_Turret_C.fire action
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_C::Fire_action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "fire action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_turret.BP_Turret_C.fire multi
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Ammo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_C::Fire_multi(int32 Param_Ammo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "fire multi");

	Params::BP_Turret_C_Fire_multi Parms{};

	Parms.Param_Ammo = Param_Ammo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_turret.BP_Turret_C.Forward in trace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    HitAnything                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_C::Forward_in_trace(struct FHitResult* OutHit, bool* HitAnything)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "Forward in trace");

	Params::BP_Turret_C_Forward_in_trace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	if (HitAnything != nullptr)
		*HitAnything = Parms.HitAnything;
}


// Function BP_turret.BP_Turret_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Turret_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_turret.BP_Turret_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "ReceiveTick");

	Params::BP_Turret_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_turret.BP_Turret_C.setYWorldLocation multi
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  New_Rotation_Z__Yaw_                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  New_Rotation_Y__Pitch_                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_C::SetYWorldLocation_multi(class USceneComponent* Target, double New_Rotation_Z__Yaw_, double New_Rotation_Y__Pitch_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "setYWorldLocation multi");

	Params::BP_Turret_C_SetYWorldLocation_multi Parms{};

	Parms.Target = Target;
	Parms.New_Rotation_Z__Yaw_ = New_Rotation_Z__Yaw_;
	Parms.New_Rotation_Y__Pitch_ = New_Rotation_Y__Pitch_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_turret.BP_Turret_C.setZworlLocation multi
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  New_Rotation_X__Roll_                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  New_Rotation_Z__Yaw_                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Turret_C::SetZworlLocation_multi(class USceneComponent* Target, double New_Rotation_X__Roll_, double New_Rotation_Z__Yaw_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "setZworlLocation multi");

	Params::BP_Turret_C_SetZworlLocation_multi Parms{};

	Parms.Target = Target;
	Parms.New_Rotation_X__Roll_ = New_Rotation_X__Roll_;
	Parms.New_Rotation_Z__Yaw_ = New_Rotation_Z__Yaw_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_turret.BP_Turret_C.Turret rotation
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_C::Turret_rotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "Turret rotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_turret.BP_Turret_C.Turret_Stop_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_Turret_C::Turret_Stop_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Turret_C", "Turret_Stop_Event");

	UObject::ProcessEvent(Func, nullptr);
}

}

