#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WizardTower_Door_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WizardTower_Door_BP.WizardTower_Door_BP_C
// 0x0038 (0x02D0 - 0x0298)
class AWizardTower_Door_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Door_Frame_8x8m;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RotationRoot;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Door_open_TL_Alpha_14FA4F4C44D2F7D50C9DC1A266D42C61; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Door_open_TL__Direction_14FA4F4C44D2F7D50C9DC1A266D42C61; // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1D[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Door_open_TL;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 ALTF42_GI;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Door_open_TL__FinishedFunc();
	void Door_open_TL__UpdateFunc();
	void DoorOpen_Event();
	void ExecuteUbergraph_WizardTower_Door_BP(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WizardTower_Door_BP_C">();
	}
	static class AWizardTower_Door_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWizardTower_Door_BP_C>();
	}
};
static_assert(alignof(AWizardTower_Door_BP_C) == 0x000008, "Wrong alignment on AWizardTower_Door_BP_C");
static_assert(sizeof(AWizardTower_Door_BP_C) == 0x0002D0, "Wrong size on AWizardTower_Door_BP_C");
static_assert(offsetof(AWizardTower_Door_BP_C, UberGraphFrame) == 0x000298, "Member 'AWizardTower_Door_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWizardTower_Door_BP_C, Door_Frame_8x8m) == 0x0002A0, "Member 'AWizardTower_Door_BP_C::Door_Frame_8x8m' has a wrong offset!");
static_assert(offsetof(AWizardTower_Door_BP_C, RotationRoot) == 0x0002A8, "Member 'AWizardTower_Door_BP_C::RotationRoot' has a wrong offset!");
static_assert(offsetof(AWizardTower_Door_BP_C, DefaultSceneRoot) == 0x0002B0, "Member 'AWizardTower_Door_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWizardTower_Door_BP_C, Door_open_TL_Alpha_14FA4F4C44D2F7D50C9DC1A266D42C61) == 0x0002B8, "Member 'AWizardTower_Door_BP_C::Door_open_TL_Alpha_14FA4F4C44D2F7D50C9DC1A266D42C61' has a wrong offset!");
static_assert(offsetof(AWizardTower_Door_BP_C, Door_open_TL__Direction_14FA4F4C44D2F7D50C9DC1A266D42C61) == 0x0002BC, "Member 'AWizardTower_Door_BP_C::Door_open_TL__Direction_14FA4F4C44D2F7D50C9DC1A266D42C61' has a wrong offset!");
static_assert(offsetof(AWizardTower_Door_BP_C, Door_open_TL) == 0x0002C0, "Member 'AWizardTower_Door_BP_C::Door_open_TL' has a wrong offset!");
static_assert(offsetof(AWizardTower_Door_BP_C, ALTF42_GI) == 0x0002C8, "Member 'AWizardTower_Door_BP_C::ALTF42_GI' has a wrong offset!");

}

