#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChickenDoor

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChickenDoor.BP_ChickenDoor_C
// 0x0168 (0x0400 - 0x0298)
class ABP_ChickenDoor_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Small_Rope_010;                                 // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope11;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope7;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_03;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_05;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_09;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope6;                                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope4;                                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Big_Rope3;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Big_Rope2;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope8;                                    // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_14;                                  // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Big_Rope1;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_08;                                  // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope10;                                   // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_07;                                  // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_16;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Big_Rope;                                       // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope3;                                    // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope2;                                    // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope9;                                    // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_04;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_8;                                   // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_2;                                   // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_02;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_01;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope1;                                    // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_3;                                   // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_06;                                  // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_10;                                  // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_15;                                  // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope_02;                                  // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_01;                                  // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_13;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_9;                                   // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_4;                                   // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_7;                                   // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_6;                                   // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_5;                                   // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_11;                                  // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_12;                                  // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope5;                                    // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Small_Rope;                                     // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Pivot;                                             // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChickenDoor_C">();
	}
	static class ABP_ChickenDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChickenDoor_C>();
	}
};
static_assert(alignof(ABP_ChickenDoor_C) == 0x000008, "Wrong alignment on ABP_ChickenDoor_C");
static_assert(sizeof(ABP_ChickenDoor_C) == 0x000400, "Wrong size on ABP_ChickenDoor_C");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_010) == 0x000298, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_010' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope11) == 0x0002A0, "Member 'ABP_ChickenDoor_C::SM_Small_Rope11' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope7) == 0x0002A8, "Member 'ABP_ChickenDoor_C::SM_Small_Rope7' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_03) == 0x0002B0, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_03' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_05) == 0x0002B8, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_05' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_09) == 0x0002C0, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_09' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope6) == 0x0002C8, "Member 'ABP_ChickenDoor_C::SM_Small_Rope6' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope4) == 0x0002D0, "Member 'ABP_ChickenDoor_C::SM_Small_Rope4' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Big_Rope3) == 0x0002D8, "Member 'ABP_ChickenDoor_C::SM_Big_Rope3' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Big_Rope2) == 0x0002E0, "Member 'ABP_ChickenDoor_C::SM_Big_Rope2' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope8) == 0x0002E8, "Member 'ABP_ChickenDoor_C::SM_Small_Rope8' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_14) == 0x0002F0, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_14' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Big_Rope1) == 0x0002F8, "Member 'ABP_ChickenDoor_C::SM_Big_Rope1' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_08) == 0x000300, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_08' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope10) == 0x000308, "Member 'ABP_ChickenDoor_C::SM_Small_Rope10' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_07) == 0x000310, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_07' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_16) == 0x000318, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_16' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Big_Rope) == 0x000320, "Member 'ABP_ChickenDoor_C::SM_Big_Rope' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope3) == 0x000328, "Member 'ABP_ChickenDoor_C::SM_Small_Rope3' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope2) == 0x000330, "Member 'ABP_ChickenDoor_C::SM_Small_Rope2' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope9) == 0x000338, "Member 'ABP_ChickenDoor_C::SM_Small_Rope9' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_04) == 0x000340, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_04' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_8) == 0x000348, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_8' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_2) == 0x000350, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_2' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_02) == 0x000358, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_02' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_01) == 0x000360, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_01' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope1) == 0x000368, "Member 'ABP_ChickenDoor_C::SM_Small_Rope1' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_3) == 0x000370, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_3' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_06) == 0x000378, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_06' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_10) == 0x000380, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_10' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_15) == 0x000388, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_15' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope_02) == 0x000390, "Member 'ABP_ChickenDoor_C::SM_Small_Rope_02' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_01) == 0x000398, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_01' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_13) == 0x0003A0, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_13' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_9) == 0x0003A8, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_9' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_4) == 0x0003B0, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_4' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_7) == 0x0003B8, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_7' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_6) == 0x0003C0, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_6' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_5) == 0x0003C8, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_5' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_11) == 0x0003D0, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_11' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_WoodenPole_12) == 0x0003D8, "Member 'ABP_ChickenDoor_C::SM_WoodenPole_12' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope5) == 0x0003E0, "Member 'ABP_ChickenDoor_C::SM_Small_Rope5' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SM_Small_Rope) == 0x0003E8, "Member 'ABP_ChickenDoor_C::SM_Small_Rope' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, Pivot) == 0x0003F0, "Member 'ABP_ChickenDoor_C::Pivot' has a wrong offset!");
static_assert(offsetof(ABP_ChickenDoor_C, SharedRoot) == 0x0003F8, "Member 'ABP_ChickenDoor_C::SharedRoot' has a wrong offset!");

}

