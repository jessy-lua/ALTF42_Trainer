#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_Base_CharacterBP

#include "Basic.hpp"

#include "ALS_Base_CharacterBP_classes.hpp"
#include "ALS_Base_CharacterBP_parameters.hpp"


namespace SDK
{

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.11111
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::One1111()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "11111");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.AddToCharacterRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         DeltaRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AALS_Base_CharacterBP_C::AddToCharacterRotation(const struct FRotator& DeltaRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "AddToCharacterRotation");

	Params::ALS_Base_CharacterBP_C_AddToCharacterRotation Parms{};

	Parms.DeltaRotation = std::move(DeltaRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.AI_DoMove
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::AI_DoMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "AI_DoMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.AI_DontMove
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::AI_DontMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "AI_DontMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_3P_PivotTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform AALS_Base_CharacterBP_C::BPI_Get_3P_PivotTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_3P_PivotTarget");

	Params::ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_3P_TraceParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TraceOrigin                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TraceRadius                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETraceTypeQuery                         TraceChannel                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Get_3P_TraceParams(struct FVector* TraceOrigin, double* TraceRadius, ETraceTypeQuery* TraceChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_3P_TraceParams");

	Params::ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TraceOrigin != nullptr)
		*TraceOrigin = std::move(Parms.TraceOrigin);

	if (TraceRadius != nullptr)
		*TraceRadius = Parms.TraceRadius;

	if (TraceChannel != nullptr)
		*TraceChannel = Parms.TraceChannel;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_CameraParameters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TP_FOV                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FP_FOV                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_RightShoulder                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CameraView_Length                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CameraView_Height                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Get_CameraParameters(double* TP_FOV, double* FP_FOV, bool* Param_RightShoulder, double* CameraView_Length, double* CameraView_Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_CameraParameters");

	Params::ALS_Base_CharacterBP_C_BPI_Get_CameraParameters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TP_FOV != nullptr)
		*TP_FOV = Parms.TP_FOV;

	if (FP_FOV != nullptr)
		*FP_FOV = Parms.FP_FOV;

	if (Param_RightShoulder != nullptr)
		*Param_RightShoulder = Parms.Param_RightShoulder;

	if (CameraView_Length != nullptr)
		*CameraView_Length = Parms.CameraView_Length;

	if (CameraView_Height != nullptr)
		*CameraView_Height = Parms.CameraView_Height;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_CaptainKnight_Attack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SimpleAttack_                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Get_CaptainKnight_Attack(bool* SimpleAttack_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_CaptainKnight_Attack");

	Params::ALS_Base_CharacterBP_C_BPI_Get_CaptainKnight_Attack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SimpleAttack_ != nullptr)
		*SimpleAttack_ = Parms.SimpleAttack_;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_CurrentStates
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovementMode                           PawnMovementMode                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_MovementState                      Param_MovementState                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_MovementState                      Param_PrevMovementState                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_MovementAction                     Param_MovementAction                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_RotationMode                       Param_RotationMode                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_Gait                               ActualGait                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_Stance                             ActualStance                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_ViewMode                           Param_ViewMode                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_OverlayState                       Param_OverlayState                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Get_CurrentStates(EMovementMode* PawnMovementMode, EALS_MovementState* Param_MovementState, EALS_MovementState* Param_PrevMovementState, EALS_MovementAction* Param_MovementAction, EALS_RotationMode* Param_RotationMode, EALS_Gait* ActualGait, EALS_Stance* ActualStance, EALS_ViewMode* Param_ViewMode, EALS_OverlayState* Param_OverlayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_CurrentStates");

	Params::ALS_Base_CharacterBP_C_BPI_Get_CurrentStates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PawnMovementMode != nullptr)
		*PawnMovementMode = Parms.PawnMovementMode;

	if (Param_MovementState != nullptr)
		*Param_MovementState = Parms.Param_MovementState;

	if (Param_PrevMovementState != nullptr)
		*Param_PrevMovementState = Parms.Param_PrevMovementState;

	if (Param_MovementAction != nullptr)
		*Param_MovementAction = Parms.Param_MovementAction;

	if (Param_RotationMode != nullptr)
		*Param_RotationMode = Parms.Param_RotationMode;

	if (ActualGait != nullptr)
		*ActualGait = Parms.ActualGait;

	if (ActualStance != nullptr)
		*ActualStance = Parms.ActualStance;

	if (Param_ViewMode != nullptr)
		*Param_ViewMode = Parms.Param_ViewMode;

	if (Param_OverlayState != nullptr)
		*Param_OverlayState = Parms.Param_OverlayState;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_EssentialValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_Acceleration                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          MovementInput                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsMoving                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IK_Possible                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SprintJUMP_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_HasMovementInput                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_Speed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_MovementInputAmount                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         AimingRotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  Param_AimYawRate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Get_EssentialValues(struct FVector* Velocity, struct FVector* Param_Acceleration, struct FVector* MovementInput, bool* Param_IsMoving, bool* Param_IK_Possible, bool* SprintJUMP_, bool* Param_HasMovementInput, double* Param_Speed, double* Param_MovementInputAmount, struct FRotator* AimingRotation, double* Param_AimYawRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_EssentialValues");

	Params::ALS_Base_CharacterBP_C_BPI_Get_EssentialValues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);

	if (Param_Acceleration != nullptr)
		*Param_Acceleration = std::move(Parms.Param_Acceleration);

	if (MovementInput != nullptr)
		*MovementInput = std::move(Parms.MovementInput);

	if (Param_IsMoving != nullptr)
		*Param_IsMoving = Parms.Param_IsMoving;

	if (Param_IK_Possible != nullptr)
		*Param_IK_Possible = Parms.Param_IK_Possible;

	if (SprintJUMP_ != nullptr)
		*SprintJUMP_ = Parms.SprintJUMP_;

	if (Param_HasMovementInput != nullptr)
		*Param_HasMovementInput = Parms.Param_HasMovementInput;

	if (Param_Speed != nullptr)
		*Param_Speed = Parms.Param_Speed;

	if (Param_MovementInputAmount != nullptr)
		*Param_MovementInputAmount = Parms.Param_MovementInputAmount;

	if (AimingRotation != nullptr)
		*AimingRotation = std::move(Parms.AimingRotation);

	if (Param_AimYawRate != nullptr)
		*Param_AimYawRate = Parms.Param_AimYawRate;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_FP_CameraTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AALS_Base_CharacterBP_C::BPI_Get_FP_CameraTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_FP_CameraTarget");

	Params::ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_PlayerbleChar_Status
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ChickThrowAnimBP                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TubeIdleON                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flamingo_                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AgingMode_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                CostumeDanceAnim                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CostumeDanceTime_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TimeSlowMode_Active_                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TimeSlow_SelfCustom_Value                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TimeSlow_CameraAlpha                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Get_PlayerbleChar_Status(double* ChickThrowAnimBP, bool* TubeIdleON, bool* Flamingo_, bool* AgingMode_, class UAnimSequenceBase** CostumeDanceAnim, bool* CostumeDanceTime_, bool* TimeSlowMode_Active_, double* TimeSlow_SelfCustom_Value, double* TimeSlow_CameraAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_PlayerbleChar_Status");

	Params::ALS_Base_CharacterBP_C_BPI_Get_PlayerbleChar_Status Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChickThrowAnimBP != nullptr)
		*ChickThrowAnimBP = Parms.ChickThrowAnimBP;

	if (TubeIdleON != nullptr)
		*TubeIdleON = Parms.TubeIdleON;

	if (Flamingo_ != nullptr)
		*Flamingo_ = Parms.Flamingo_;

	if (AgingMode_ != nullptr)
		*AgingMode_ = Parms.AgingMode_;

	if (CostumeDanceAnim != nullptr)
		*CostumeDanceAnim = Parms.CostumeDanceAnim;

	if (CostumeDanceTime_ != nullptr)
		*CostumeDanceTime_ = Parms.CostumeDanceTime_;

	if (TimeSlowMode_Active_ != nullptr)
		*TimeSlowMode_Active_ = Parms.TimeSlowMode_Active_;

	if (TimeSlow_SelfCustom_Value != nullptr)
		*TimeSlow_SelfCustom_Value = Parms.TimeSlow_SelfCustom_Value;

	if (TimeSlow_CameraAlpha != nullptr)
		*TimeSlow_CameraAlpha = Parms.TimeSlow_CameraAlpha;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_RagdollFalling_FlailOnOFF
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RagdollFlail_Off                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RagdollFlail_Value                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Get_RagdollFalling_FlailOnOFF(bool* RagdollFlail_Off, double* RagdollFlail_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Get_RagdollFalling_FlailOnOFF");

	Params::ALS_Base_CharacterBP_C_BPI_Get_RagdollFalling_FlailOnOFF Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RagdollFlail_Off != nullptr)
		*RagdollFlail_Off = Parms.RagdollFlail_Off;

	if (RagdollFlail_Value != nullptr)
		*RagdollFlail_Value = Parms.RagdollFlail_Value;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_GetAI_NPC_ActionMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NPC_ActionMode                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ActionStartTime                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                NPC_ActionAnim                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    LoopActive                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAI_StepTalk_WhoOrWhere                 Who_NPC                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_GetAI_NPC_ActionMode(bool* NPC_ActionMode, double* ActionStartTime, class UAnimSequenceBase** NPC_ActionAnim, bool* LoopActive, EAI_StepTalk_WhoOrWhere* Who_NPC, bool* Hit_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_GetAI_NPC_ActionMode");

	Params::ALS_Base_CharacterBP_C_BPI_GetAI_NPC_ActionMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NPC_ActionMode != nullptr)
		*NPC_ActionMode = Parms.NPC_ActionMode;

	if (ActionStartTime != nullptr)
		*ActionStartTime = Parms.ActionStartTime;

	if (NPC_ActionAnim != nullptr)
		*NPC_ActionAnim = Parms.NPC_ActionAnim;

	if (LoopActive != nullptr)
		*LoopActive = Parms.LoopActive;

	if (Who_NPC != nullptr)
		*Who_NPC = Parms.Who_NPC;

	if (Hit_ != nullptr)
		*Hit_ = Parms.Hit_;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_Gait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Gait                               NewGait                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Set_Gait(EALS_Gait NewGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Set_Gait");

	Params::ALS_Base_CharacterBP_C_BPI_Set_Gait Parms{};

	Parms.NewGait = NewGait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_MovementAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_MovementAction                     NewMovementAction                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Set_MovementAction(EALS_MovementAction NewMovementAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Set_MovementAction");

	Params::ALS_Base_CharacterBP_C_BPI_Set_MovementAction Parms{};

	Parms.NewMovementAction = NewMovementAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_MovementState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_MovementState                      NewMovementState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Set_MovementState(EALS_MovementState NewMovementState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Set_MovementState");

	Params::ALS_Base_CharacterBP_C_BPI_Set_MovementState Parms{};

	Parms.NewMovementState = NewMovementState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_OverlayState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_OverlayState                       NewOverlayState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Set_OverlayState(EALS_OverlayState NewOverlayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Set_OverlayState");

	Params::ALS_Base_CharacterBP_C_BPI_Set_OverlayState Parms{};

	Parms.NewOverlayState = NewOverlayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_RotationMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_RotationMode                       NewRotationMode                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Set_RotationMode(EALS_RotationMode NewRotationMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Set_RotationMode");

	Params::ALS_Base_CharacterBP_C_BPI_Set_RotationMode Parms{};

	Parms.NewRotationMode = NewRotationMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_ViewMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_ViewMode                           NewViewMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::BPI_Set_ViewMode(EALS_ViewMode NewViewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "BPI_Set_ViewMode");

	Params::ALS_Base_CharacterBP_C_BPI_Set_ViewMode Parms{};

	Parms.NewViewMode = NewViewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Breakfall Event
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::Breakfall_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Breakfall Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CacheValues
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::CacheValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "CacheValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CalculateAcceleration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AALS_Base_CharacterBP_C::CalculateAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "CalculateAcceleration");

	Params::ALS_Base_CharacterBP_C_CalculateAcceleration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CalculateGroundedRotationRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double AALS_Base_CharacterBP_C::CalculateGroundedRotationRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "CalculateGroundedRotationRate");

	Params::ALS_Base_CharacterBP_C_CalculateGroundedRotationRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CanSprint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_CanSprint                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::CanSprint(bool* Param_CanSprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "CanSprint");

	Params::ALS_Base_CharacterBP_C_CanSprint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CanSprint != nullptr)
		*Param_CanSprint = Parms.Param_CanSprint;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CanUpdateMovingRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AALS_Base_CharacterBP_C::CanUpdateMovingRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "CanUpdateMovingRotation");

	Params::ALS_Base_CharacterBP_C_CanUpdateMovingRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CapsuleHasRoomCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCapsuleComponent*                Capsule                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HeightOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RadiusOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDrawDebugTrace                         DebugType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasRoom                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::CapsuleHasRoomCheck(class UCapsuleComponent* Capsule, const struct FVector& TargetLocation, double HeightOffset, double RadiusOffset, EDrawDebugTrace DebugType, bool* HasRoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "CapsuleHasRoomCheck");

	Params::ALS_Base_CharacterBP_C_CapsuleHasRoomCheck Parms{};

	Parms.Capsule = Capsule;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.HeightOffset = HeightOffset;
	Parms.RadiusOffset = RadiusOffset;
	Parms.DebugType = DebugType;

	UObject::ProcessEvent(Func, &Parms);

	if (HasRoom != nullptr)
		*HasRoom = Parms.HasRoom;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.DrawDebugShapes
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::DrawDebugShapes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "DrawDebugShapes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.End_Sprint_Caculation
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::End_Sprint_Caculation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "End_Sprint_Caculation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Equip_End_Event
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::Equip_End_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Equip_End_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Equip_Event
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::Equip_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Equip_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ExecuteUbergraph_ALS_Base_CharacterBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::ExecuteUbergraph_ALS_Base_CharacterBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "ExecuteUbergraph_ALS_Base_CharacterBP");

	Params::ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.FixDiagonalGamepadValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Y_in                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  X_in                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y_Out                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  X_Out                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::FixDiagonalGamepadValues(double Y_in, double X_in, double* Y_Out, double* X_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "FixDiagonalGamepadValues");

	Params::ALS_Base_CharacterBP_C_FixDiagonalGamepadValues Parms{};

	Parms.Y_in = Y_in;
	Parms.X_in = X_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Y_Out != nullptr)
		*Y_Out = Parms.Y_Out;

	if (X_Out != nullptr)
		*X_Out = Parms.X_Out;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetActualGait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EALS_Gait                               AllowedGait                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_Gait                               ActualGait                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::GetActualGait(EALS_Gait AllowedGait, EALS_Gait* ActualGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetActualGait");

	Params::ALS_Base_CharacterBP_C_GetActualGait Parms{};

	Parms.AllowedGait = AllowedGait;

	UObject::ProcessEvent(Func, &Parms);

	if (ActualGait != nullptr)
		*ActualGait = Parms.ActualGait;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetAllowedGait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EALS_Gait                               AllowedGait                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::GetAllowedGait(EALS_Gait* AllowedGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetAllowedGait");

	Params::ALS_Base_CharacterBP_C_GetAllowedGait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllowedGait != nullptr)
		*AllowedGait = Parms.AllowedGait;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetAnimCurveValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CurveName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double AALS_Base_CharacterBP_C::GetAnimCurveValue(class FName CurveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetAnimCurveValue");

	Params::ALS_Base_CharacterBP_C_GetAnimCurveValue Parms{};

	Parms.CurveName = CurveName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetCalpsuleBaseLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ZOffset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AALS_Base_CharacterBP_C::GetCalpsuleBaseLocation(double ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetCalpsuleBaseLocation");

	Params::ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation Parms{};

	Parms.ZOffset = ZOffset;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetCapsuleLocationFromBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ZOffset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AALS_Base_CharacterBP_C::GetCapsuleLocationFromBase(const struct FVector& BaseLocation, double ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetCapsuleLocationFromBase");

	Params::ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase Parms{};

	Parms.BaseLocation = std::move(BaseLocation);
	Parms.ZOffset = ZOffset;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetChickThrowAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* AALS_Base_CharacterBP_C::GetChickThrowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetChickThrowAnimation");

	Params::ALS_Base_CharacterBP_C_GetChickThrowAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.RightVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ForwardVector                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_RightVector                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::RightVector(struct FVector* ForwardVector, struct FVector* Param_RightVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "RightVector");

	Params::ALS_Base_CharacterBP_C_RightVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ForwardVector != nullptr)
		*ForwardVector = std::move(Parms.ForwardVector);

	if (Param_RightVector != nullptr)
		*Param_RightVector = std::move(Parms.Param_RightVector);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetGetUpAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_RagdollFaceUp                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* AALS_Base_CharacterBP_C::GetGetUpAnimation(bool Param_RagdollFaceUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetGetUpAnimation");

	Params::ALS_Base_CharacterBP_C_GetGetUpAnimation Parms{};

	Parms.Param_RagdollFaceUp = Param_RagdollFaceUp;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetMantleAsset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EMantleType                             MantleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMantle_Asset                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FMantle_Asset AALS_Base_CharacterBP_C::GetMantleAsset(EMantleType MantleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetMantleAsset");

	Params::ALS_Base_CharacterBP_C_GetMantleAsset Parms{};

	Parms.MantleType = MantleType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetMappedSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double AALS_Base_CharacterBP_C::GetMappedSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetMappedSpeed");

	Params::ALS_Base_CharacterBP_C_GetMappedSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetPlayerMovementInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AALS_Base_CharacterBP_C::GetPlayerMovementInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetPlayerMovementInput");

	Params::ALS_Base_CharacterBP_C_GetPlayerMovementInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetRollAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* AALS_Base_CharacterBP_C::GetRollAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetRollAnimation");

	Params::ALS_Base_CharacterBP_C_GetRollAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetTargetMovementSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMovementSettings                MovementSettings                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::GetTargetMovementSettings(struct FMovementSettings* MovementSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetTargetMovementSettings");

	Params::ALS_Base_CharacterBP_C_GetTargetMovementSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MovementSettings != nullptr)
		*MovementSettings = std::move(Parms.MovementSettings);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetTraceDebugType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EDrawDebugTrace                         ShowTraceType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDrawDebugTrace                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EDrawDebugTrace AALS_Base_CharacterBP_C::GetTraceDebugType(EDrawDebugTrace ShowTraceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "GetTraceDebugType");

	Params::ALS_Base_CharacterBP_C_GetTraceDebugType Parms{};

	Parms.ShowTraceType = ShowTraceType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_0");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_1");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Aim_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_8");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_8 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_10
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_10");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_10 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_9");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_LookTurn_GamePad_K2Node_EnhancedInputActionEvent_9 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_11
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_11");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_11 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_14
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_14");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_LookTurn_K2Node_EnhancedInputActionEvent_14 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_4");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_5");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_6");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Ragdoll_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Ragdoll_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Ragdoll_K2Node_EnhancedInputActionEvent_2");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Ragdoll_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_12
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_12");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_12 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_13
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_13");

	Params::ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_13 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.K2_OnEndCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "K2_OnEndCrouch");

	Params::ALS_Base_CharacterBP_C_K2_OnEndCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.K2_OnMovementModeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           NewMovementMode                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PrevCustomMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   NewCustomMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "K2_OnMovementModeChanged");

	Params::ALS_Base_CharacterBP_C_K2_OnMovementModeChanged Parms{};

	Parms.PrevMovementMode = PrevMovementMode;
	Parms.NewMovementMode = NewMovementMode;
	Parms.PrevCustomMode = PrevCustomMode;
	Parms.NewCustomMode = NewCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.K2_OnStartCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "K2_OnStartCrouch");

	Params::ALS_Base_CharacterBP_C_K2_OnStartCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.LimitRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AimYawMin                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AimYawMax                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::LimitRotation(double AimYawMin, double AimYawMax, double InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "LimitRotation");

	Params::ALS_Base_CharacterBP_C_LimitRotation Parms{};

	Parms.AimYawMin = AimYawMin;
	Parms.AimYawMax = AimYawMax;
	Parms.InterpSpeed = InterpSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Look_Gamepad_X
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  X_Value                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::Look_Gamepad_X(double X_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Look_Gamepad_X");

	Params::ALS_Base_CharacterBP_C_Look_Gamepad_X Parms{};

	Parms.X_Value = X_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Look_Gamepad_Y
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Y_Value                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::Look_Gamepad_Y(double Y_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Look_Gamepad_Y");

	Params::ALS_Base_CharacterBP_C_Look_Gamepad_Y Parms{};

	Parms.Y_Value = Y_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMantle_TraceSettings            Trace_Settings                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDrawDebugTrace                         DebugType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Vault                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::MantleCheck(const struct FMantle_TraceSettings& Trace_Settings, EDrawDebugTrace DebugType, bool* Vault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "MantleCheck");

	Params::ALS_Base_CharacterBP_C_MantleCheck Parms{};

	Parms.Trace_Settings = std::move(Trace_Settings);
	Parms.DebugType = DebugType;

	UObject::ProcessEvent(Func, &Parms);

	if (Vault != nullptr)
		*Vault = Parms.Vault;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleEnd
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::MantleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "MantleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MantleHeight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FALS_ComponentAndTransform       MantleLedgeWS                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// EMantleType                             MantleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::MantleStart(double MantleHeight, const struct FALS_ComponentAndTransform& MantleLedgeWS, EMantleType MantleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "MantleStart");

	Params::ALS_Base_CharacterBP_C_MantleStart Parms{};

	Parms.MantleHeight = MantleHeight;
	Parms.MantleLedgeWS = std::move(MantleLedgeWS);
	Parms.MantleType = MantleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleTimeline__FinishedFunc
// (BlueprintEvent)

void AALS_Base_CharacterBP_C::MantleTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "MantleTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleTimeline__UpdateFunc
// (BlueprintEvent)

void AALS_Base_CharacterBP_C::MantleTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "MantleTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BlendIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::MantleUpdate(double BlendIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "MantleUpdate");

	Params::ALS_Base_CharacterBP_C_MantleUpdate Parms{};

	Parms.BlendIn = BlendIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Move_X
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  X_Value                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::Move_X(double X_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Move_X");

	Params::ALS_Base_CharacterBP_C_Move_X Parms{};

	Parms.X_Value = X_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Move_Y
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Y_Value                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::Move_Y(double Y_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Move_Y");

	Params::ALS_Base_CharacterBP_C_Move_Y Parms{};

	Parms.Y_Value = Y_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OFF_DontJumpSprint
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::OFF_DontJumpSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OFF_DontJumpSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.On Begin Play
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::On_Begin_Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "On Begin Play");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ON_DontJumpSprint
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::ON_DontJumpSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "ON_DontJumpSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnCharacterMovementModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           NewMovementMode                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PrevCustomMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   NewCustomMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnCharacterMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnCharacterMovementModeChanged");

	Params::ALS_Base_CharacterBP_C_OnCharacterMovementModeChanged Parms{};

	Parms.PrevMovementMode = PrevMovementMode;
	Parms.NewMovementMode = NewMovementMode;
	Parms.PrevCustomMode = PrevCustomMode;
	Parms.NewCustomMode = NewCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnGaitChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Gait                               NewActualGait                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnGaitChanged(EALS_Gait NewActualGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnGaitChanged");

	Params::ALS_Base_CharacterBP_C_OnGaitChanged Parms{};

	Parms.NewActualGait = NewActualGait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnJumped
// (Event, Public, BlueprintEvent)

void AALS_Base_CharacterBP_C::OnJumped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnJumped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AALS_Base_CharacterBP_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnLanded");

	Params::ALS_Base_CharacterBP_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnMovementActionChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_MovementAction                     NewMovementAction                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnMovementActionChanged(EALS_MovementAction NewMovementAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnMovementActionChanged");

	Params::ALS_Base_CharacterBP_C_OnMovementActionChanged Parms{};

	Parms.NewMovementAction = NewMovementAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnMovementStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_MovementState                      NewMovementState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnMovementStateChanged(EALS_MovementState NewMovementState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnMovementStateChanged");

	Params::ALS_Base_CharacterBP_C_OnMovementStateChanged Parms{};

	Parms.NewMovementState = NewMovementState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnOverlayStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_OverlayState                       NewOverlayState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnOverlayStateChanged(EALS_OverlayState NewOverlayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnOverlayStateChanged");

	Params::ALS_Base_CharacterBP_C_OnOverlayStateChanged Parms{};

	Parms.NewOverlayState = NewOverlayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnRotationModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_RotationMode                       NewRotationMode                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnRotationModeChanged(EALS_RotationMode NewRotationMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnRotationModeChanged");

	Params::ALS_Base_CharacterBP_C_OnRotationModeChanged Parms{};

	Parms.NewRotationMode = NewRotationMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnStanceChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Stance                             NewStance                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnStanceChanged(EALS_Stance NewStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnStanceChanged");

	Params::ALS_Base_CharacterBP_C_OnStanceChanged Parms{};

	Parms.NewStance = NewStance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnViewModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_ViewMode                           NewViewMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::OnViewModeChanged(EALS_ViewMode NewViewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "OnViewModeChanged");

	Params::ALS_Base_CharacterBP_C_OnViewModeChanged Parms{};

	Parms.NewViewMode = NewViewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.PlayerMovementInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsForwardAxis                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y_in                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  X_in                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::PlayerMovementInput(bool IsForwardAxis, double Y_in, double X_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "PlayerMovementInput");

	Params::ALS_Base_CharacterBP_C_PlayerMovementInput Parms{};

	Parms.IsForwardAxis = IsForwardAxis;
	Parms.Y_in = Y_in;
	Parms.X_in = X_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.RagdollEnd
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::RagdollEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "RagdollEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.RagdollStart
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::RagdollStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "RagdollStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.RagdollUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::RagdollUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "RagdollUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AALS_Base_CharacterBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "ReceiveTick");

	Params::ALS_Base_CharacterBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Restart_Sprint_Caculation
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::Restart_Sprint_Caculation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Restart_Sprint_Caculation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Roll Event
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::Roll_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Roll Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Rotation_LookingMode
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::Rotation_LookingMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Rotation_LookingMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Rotation_VelocityMode
// (BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::Rotation_VelocityMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Rotation_VelocityMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetActorLocationAndRotation(UpdateTarget)
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSweep                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bTeleport                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepHitResult                                         (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AALS_Base_CharacterBP_C::SetActorLocationAndRotation_UpdateTarget_(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, bool bTeleport, struct FHitResult* SweepHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "SetActorLocationAndRotation(UpdateTarget)");

	Params::ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_ Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.NewRotation = std::move(NewRotation);
	Parms.bSweep = bSweep;
	Parms.bTeleport = bTeleport;

	UObject::ProcessEvent(Func, &Parms);

	if (SweepHitResult != nullptr)
		*SweepHitResult = std::move(Parms.SweepHitResult);

	return Parms.ReturnValue;
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetActorLocationDuringRagdoll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::SetActorLocationDuringRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "SetActorLocationDuringRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetEssentialValues
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::SetEssentialValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "SetEssentialValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetMovementModel
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::SetMovementModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "SetMovementModel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SmoothCharacterRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  TargetInterpSpeed_Const_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ActorInterpSpeed_Smooth_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::SmoothCharacterRotation(const struct FRotator& Target, double TargetInterpSpeed_Const_, double ActorInterpSpeed_Smooth_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "SmoothCharacterRotation");

	Params::ALS_Base_CharacterBP_C_SmoothCharacterRotation Parms{};

	Parms.Target = std::move(Target);
	Parms.TargetInterpSpeed_Const_ = TargetInterpSpeed_Const_;
	Parms.ActorInterpSpeed_Smooth_ = ActorInterpSpeed_Smooth_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Sprint_TL__FinishedFunc
// (BlueprintEvent)

void AALS_Base_CharacterBP_C::Sprint_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Sprint_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Sprint_TL__UpdateFunc
// (BlueprintEvent)

void AALS_Base_CharacterBP_C::Sprint_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "Sprint_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateCharacterMovement
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::UpdateCharacterMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "UpdateCharacterMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateDynamicMovementSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Gait                               AllowedGait                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_Base_CharacterBP_C::UpdateDynamicMovementSettings(EALS_Gait AllowedGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "UpdateDynamicMovementSettings");

	Params::ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings Parms{};

	Parms.AllowedGait = AllowedGait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateGroudedRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::UpdateGroudedRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "UpdateGroudedRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateInAirRotation
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_Base_CharacterBP_C::UpdateInAirRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Base_CharacterBP_C", "UpdateInAirRotation");

	UObject::ProcessEvent(Func, nullptr);
}

}

