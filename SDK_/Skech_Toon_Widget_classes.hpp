#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skech_Toon_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "InteractableMenuWidgetBP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Skech_Toon_Widget.Skech_Toon_Widget_C
// 0x00C8 (0x07B8 - 0x06F0)
class USkech_Toon_Widget_C final : public UInteractableMenuWidgetBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Skech_Toon_Widget_C;                // 0x06F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SkipHold_Blink;                                    // 0x06F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_12;                                       // 0x0700(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_11;                                       // 0x0708(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_10;                                       // 0x0710(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_09;                                       // 0x0718(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_08;                                       // 0x0720(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_07;                                       // 0x0728(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_06;                                       // 0x0730(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_05;                                       // 0x0738(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_04;                                       // 0x0740(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_03;                                       // 0x0748(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_02;                                       // 0x0750(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DownPage_01;                                       // 0x0758(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UFake_Button_C*                         Fake_Button;                                       // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           HoldBar;                                           // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Image;                                        // 0x0770(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MenuCanvasPanel;                                   // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SkipBox;                                           // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SpeakerNameText_1;                                 // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Page_Value;                                        // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipActive_;                                       // 0x0794(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Skip_Possible_;                                    // 0x0795(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414E[0x2];                                     // 0x0796(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Start_at_Time;                                     // 0x0798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414F[0x4];                                     // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Skip_HoldTime_Value;                               // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Hold_Timer;                                        // 0x07A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Widget_IN_;                                        // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Skech_Toon_Widget_Fake_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void Construct();
	void EndSkech_Widget();
	void ExecuteUbergraph_Skech_Toon_Widget(int32 EntryPoint);
	struct FSlateBrush Get_Icon_Image_Brush();
	ESlateVisibility Get_SkipBox_Visibility();
	float GetPercent();
	void InpActEvt_SpaceBar_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_SpaceBar_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void OnNavigationEnter(class UInteractableMenuWidgetBP_C* NavigateFromMenu, bool Param_bIsGamepadBeingUsed, int32 Param_PlayerIndex);
	void OnNavigationExit(class UInteractableMenuWidgetBP_C* NavigateToMenu, class UInteractableMenuWidgetBP_C* NavigateFromMenu);
	void PreConstruct(bool IsDesignTime);
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_0();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_1();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_10();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_11();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_12();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_13();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_14();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_15();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_16();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_17();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_18();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_19();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_2();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_20();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_21();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_22();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_23();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_24();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_25();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_26();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_27();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_28();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_29();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_3();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_30();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_31();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_32();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_33();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_34();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_4();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_5();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_6();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_7();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_8();
	void SequenceEvent__ENTRYPOINTSkech_Toon_Widget_9();
	void Skip_Active();
	void Skip_Deactive();
	void Skip_reset();
	void SkipNextPage_event();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TimerPlus_Event();
	void Toon_NextPage_Event();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Skech_Toon_Widget_C">();
	}
	static class USkech_Toon_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkech_Toon_Widget_C>();
	}
};
static_assert(alignof(USkech_Toon_Widget_C) == 0x000008, "Wrong alignment on USkech_Toon_Widget_C");
static_assert(sizeof(USkech_Toon_Widget_C) == 0x0007B8, "Wrong size on USkech_Toon_Widget_C");
static_assert(offsetof(USkech_Toon_Widget_C, UberGraphFrame_Skech_Toon_Widget_C) == 0x0006F0, "Member 'USkech_Toon_Widget_C::UberGraphFrame_Skech_Toon_Widget_C' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, SkipHold_Blink) == 0x0006F8, "Member 'USkech_Toon_Widget_C::SkipHold_Blink' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_12) == 0x000700, "Member 'USkech_Toon_Widget_C::DownPage_12' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_11) == 0x000708, "Member 'USkech_Toon_Widget_C::DownPage_11' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_10) == 0x000710, "Member 'USkech_Toon_Widget_C::DownPage_10' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_09) == 0x000718, "Member 'USkech_Toon_Widget_C::DownPage_09' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_08) == 0x000720, "Member 'USkech_Toon_Widget_C::DownPage_08' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_07) == 0x000728, "Member 'USkech_Toon_Widget_C::DownPage_07' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_06) == 0x000730, "Member 'USkech_Toon_Widget_C::DownPage_06' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_05) == 0x000738, "Member 'USkech_Toon_Widget_C::DownPage_05' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_04) == 0x000740, "Member 'USkech_Toon_Widget_C::DownPage_04' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_03) == 0x000748, "Member 'USkech_Toon_Widget_C::DownPage_03' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_02) == 0x000750, "Member 'USkech_Toon_Widget_C::DownPage_02' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, DownPage_01) == 0x000758, "Member 'USkech_Toon_Widget_C::DownPage_01' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Fake_Button) == 0x000760, "Member 'USkech_Toon_Widget_C::Fake_Button' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, HoldBar) == 0x000768, "Member 'USkech_Toon_Widget_C::HoldBar' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Icon_Image) == 0x000770, "Member 'USkech_Toon_Widget_C::Icon_Image' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, MenuCanvasPanel) == 0x000778, "Member 'USkech_Toon_Widget_C::MenuCanvasPanel' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, SkipBox) == 0x000780, "Member 'USkech_Toon_Widget_C::SkipBox' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, SpeakerNameText_1) == 0x000788, "Member 'USkech_Toon_Widget_C::SpeakerNameText_1' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Page_Value) == 0x000790, "Member 'USkech_Toon_Widget_C::Page_Value' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, SkipActive_) == 0x000794, "Member 'USkech_Toon_Widget_C::SkipActive_' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Skip_Possible_) == 0x000795, "Member 'USkech_Toon_Widget_C::Skip_Possible_' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Start_at_Time) == 0x000798, "Member 'USkech_Toon_Widget_C::Start_at_Time' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Skip_HoldTime_Value) == 0x0007A0, "Member 'USkech_Toon_Widget_C::Skip_HoldTime_Value' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Hold_Timer) == 0x0007A8, "Member 'USkech_Toon_Widget_C::Hold_Timer' has a wrong offset!");
static_assert(offsetof(USkech_Toon_Widget_C, Widget_IN_) == 0x0007B0, "Member 'USkech_Toon_Widget_C::Widget_IN_' has a wrong offset!");

}

