#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_BTTask_GetRandomLocation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ALS_BTTask_GetRandomLocation.ALS_BTTask_GetRandomLocation_C
// 0x0050 (0x00F8 - 0x00A8)
class UALS_BTTask_GetRandomLocation_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Radius;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 MoveToLocation;                                    // 0x00B8(0x0028)(Edit, BlueprintVisible)
	struct FVector                                Location;                                          // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ALS_BTTask_GetRandomLocation(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ALS_BTTask_GetRandomLocation_C">();
	}
	static class UALS_BTTask_GetRandomLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UALS_BTTask_GetRandomLocation_C>();
	}
};
static_assert(alignof(UALS_BTTask_GetRandomLocation_C) == 0x000008, "Wrong alignment on UALS_BTTask_GetRandomLocation_C");
static_assert(sizeof(UALS_BTTask_GetRandomLocation_C) == 0x0000F8, "Wrong size on UALS_BTTask_GetRandomLocation_C");
static_assert(offsetof(UALS_BTTask_GetRandomLocation_C, UberGraphFrame) == 0x0000A8, "Member 'UALS_BTTask_GetRandomLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UALS_BTTask_GetRandomLocation_C, Radius) == 0x0000B0, "Member 'UALS_BTTask_GetRandomLocation_C::Radius' has a wrong offset!");
static_assert(offsetof(UALS_BTTask_GetRandomLocation_C, MoveToLocation) == 0x0000B8, "Member 'UALS_BTTask_GetRandomLocation_C::MoveToLocation' has a wrong offset!");
static_assert(offsetof(UALS_BTTask_GetRandomLocation_C, Location) == 0x0000E0, "Member 'UALS_BTTask_GetRandomLocation_C::Location' has a wrong offset!");

}

