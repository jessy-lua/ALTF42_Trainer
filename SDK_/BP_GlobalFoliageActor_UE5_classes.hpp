#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GlobalFoliageActor_UE5

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GlobalFoliageActor_UE5.BP_GlobalFoliageActor_UE5_C
// 0x0090 (0x0328 - 0x0298)
class ABP_GlobalFoliageActor_UE5_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Icon_Sock;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon_Arrow_Test;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon_Base;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Icon_Root;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Noise;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Strength;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Speed;                                        // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Tiling;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Season_Strength;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Season_Brightness;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Season_Saturation;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Health;                                            // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Variation_Tiling;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Macro_Variation_Tiling;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Color_Variation_Amount;                     // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Overall_Color_Variation_Amount;                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          Flip_Wind_Direction;                               // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void RunGlobalFoliageActor();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_GlobalFoliageActor_UE5(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GlobalFoliageActor_UE5_C">();
	}
	static class ABP_GlobalFoliageActor_UE5_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GlobalFoliageActor_UE5_C>();
	}
};
static_assert(alignof(ABP_GlobalFoliageActor_UE5_C) == 0x000008, "Wrong alignment on ABP_GlobalFoliageActor_UE5_C");
static_assert(sizeof(ABP_GlobalFoliageActor_UE5_C) == 0x000328, "Wrong size on ABP_GlobalFoliageActor_UE5_C");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, UberGraphFrame) == 0x000298, "Member 'ABP_GlobalFoliageActor_UE5_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Icon_Sock) == 0x0002A0, "Member 'ABP_GlobalFoliageActor_UE5_C::Icon_Sock' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Icon_Arrow_Test) == 0x0002A8, "Member 'ABP_GlobalFoliageActor_UE5_C::Icon_Arrow_Test' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Icon_Base) == 0x0002B0, "Member 'ABP_GlobalFoliageActor_UE5_C::Icon_Base' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Icon_Root) == 0x0002B8, "Member 'ABP_GlobalFoliageActor_UE5_C::Icon_Root' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Wind_Noise) == 0x0002C0, "Member 'ABP_GlobalFoliageActor_UE5_C::Wind_Noise' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Wind_Strength) == 0x0002C8, "Member 'ABP_GlobalFoliageActor_UE5_C::Wind_Strength' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Wind_Speed) == 0x0002D0, "Member 'ABP_GlobalFoliageActor_UE5_C::Wind_Speed' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Wind_Tiling) == 0x0002D8, "Member 'ABP_GlobalFoliageActor_UE5_C::Wind_Tiling' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Season_Strength) == 0x0002E0, "Member 'ABP_GlobalFoliageActor_UE5_C::Season_Strength' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Season_Brightness) == 0x0002E8, "Member 'ABP_GlobalFoliageActor_UE5_C::Season_Brightness' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Season_Saturation) == 0x0002F0, "Member 'ABP_GlobalFoliageActor_UE5_C::Season_Saturation' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Health) == 0x0002F8, "Member 'ABP_GlobalFoliageActor_UE5_C::Health' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Variation_Tiling) == 0x000300, "Member 'ABP_GlobalFoliageActor_UE5_C::Variation_Tiling' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Macro_Variation_Tiling) == 0x000308, "Member 'ABP_GlobalFoliageActor_UE5_C::Macro_Variation_Tiling' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Random_Color_Variation_Amount) == 0x000310, "Member 'ABP_GlobalFoliageActor_UE5_C::Random_Color_Variation_Amount' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Overall_Color_Variation_Amount) == 0x000318, "Member 'ABP_GlobalFoliageActor_UE5_C::Overall_Color_Variation_Amount' has a wrong offset!");
static_assert(offsetof(ABP_GlobalFoliageActor_UE5_C, Flip_Wind_Direction) == 0x000320, "Member 'ABP_GlobalFoliageActor_UE5_C::Flip_Wind_Direction' has a wrong offset!");

}

