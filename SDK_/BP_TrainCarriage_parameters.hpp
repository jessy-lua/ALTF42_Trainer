#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrainCarriage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_TrackTimedIgnore_structs.hpp"
#include "E_TrackSplineLocation_structs.hpp"
#include "S_TrackSpline_structs.hpp"
#include "E_CarriageState_structs.hpp"
#include "S_TrackPassThroughInfo_structs.hpp"
#include "E_BogieDirectionOfTravel_structs.hpp"
#include "S_TrackConnection_structs.hpp"
#include "S_TrackConnectionPoint_structs.hpp"


namespace SDK::Params
{

// Function BP_TrainCarriage.BP_TrainCarriage_C.AddActorToCollisionIgnoreList
// 0x0070 (0x0070 - 0x0000)
struct BP_TrainCarriage_C_AddActorToCollisionIgnoreList final
{
public:
	class AActor*                                 ActorToIgnore;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        IgnoreTime;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeverExpire;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4023[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackTimedIgnore                    K2Node_MakeStruct_S_TrackTimedIgnore;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4024[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorOnIgnoreList_IsOnIgnoreList;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4025[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Timeout_5_009A71724E13EC0AD7AB51BD64347213_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_AddActorToCollisionIgnoreList");
static_assert(sizeof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList) == 0x000070, "Wrong size on BP_TrainCarriage_C_AddActorToCollisionIgnoreList");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, ActorToIgnore) == 0x000000, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::ActorToIgnore' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, IgnoreTime) == 0x000008, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::IgnoreTime' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, NeverExpire) == 0x000010, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::NeverExpire' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, K2Node_MakeStruct_S_TrackTimedIgnore) == 0x000018, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::K2Node_MakeStruct_S_TrackTimedIgnore' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_IsActorOnIgnoreList_IsOnIgnoreList) == 0x000031, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_IsActorOnIgnoreList_IsOnIgnoreList' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AddActorToCollisionIgnoreList, K2Node_MakeStruct_Timeout_5_009A71724E13EC0AD7AB51BD64347213_ImplicitCast) == 0x000068, "Member 'BP_TrainCarriage_C_AddActorToCollisionIgnoreList::K2Node_MakeStruct_Timeout_5_009A71724E13EC0AD7AB51BD64347213_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.ApplyOrReleaseBrakes
// 0x0002 (0x0002 - 0x0000)
struct BP_TrainCarriage_C_ApplyOrReleaseBrakes final
{
public:
	bool                                          Param_IsBraking;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_ApplyOrReleaseBrakes) == 0x000001, "Wrong alignment on BP_TrainCarriage_C_ApplyOrReleaseBrakes");
static_assert(sizeof(BP_TrainCarriage_C_ApplyOrReleaseBrakes) == 0x000002, "Wrong size on BP_TrainCarriage_C_ApplyOrReleaseBrakes");
static_assert(offsetof(BP_TrainCarriage_C_ApplyOrReleaseBrakes, Param_IsBraking) == 0x000000, "Member 'BP_TrainCarriage_C_ApplyOrReleaseBrakes::Param_IsBraking' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ApplyOrReleaseBrakes, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'BP_TrainCarriage_C_ApplyOrReleaseBrakes::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.AttachToTrack
// 0x00E0 (0x00E0 - 0x0000)
struct BP_TrainCarriage_C_AttachToTrack final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4026[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSplineByIndex_Spline;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetClosestDistanceOnSpline_DistanceOnSpline; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetClosestDistanceOnSpline_ValidDistance; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4027[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrackSplines_HasTrackSplines;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTrackSplineIndex_ValidIndex;       // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_AttachToTrack) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_AttachToTrack");
static_assert(sizeof(BP_TrainCarriage_C_AttachToTrack) == 0x0000E0, "Wrong size on BP_TrainCarriage_C_AttachToTrack");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, SplineIndex) == 0x000000, "Member 'BP_TrainCarriage_C_AttachToTrack::SplineIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000004, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_GetSplineByIndex_Spline) == 0x000020, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_GetSplineByIndex_Spline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_GetClosestDistanceOnSpline_DistanceOnSpline) == 0x000038, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_GetClosestDistanceOnSpline_DistanceOnSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_GetClosestDistanceOnSpline_ValidDistance) == 0x000040, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_GetClosestDistanceOnSpline_ValidDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_GetDisplayName_ReturnValue_1) == 0x000078, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_GetDisplayName_ReturnValue_2) == 0x0000A8, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_HasTrackSplines_HasTrackSplines) == 0x0000D8, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_HasTrackSplines_HasTrackSplines' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_AttachToTrack, CallFunc_IsValidTrackSplineIndex_ValidIndex) == 0x0000D9, "Member 'BP_TrainCarriage_C_AttachToTrack::CallFunc_IsValidTrackSplineIndex_ValidIndex' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.BogieChangeTracks
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TrainCarriage_C_BogieChangeTracks final
{
public:
	struct FS_TrackConnection                     TrackConnection;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            Bogie;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToEnd;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToEndIn;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedIn;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            BogieIn;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceOnNewTrack;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4028[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackSpline                         CallFunc_Array_Get_Item;                           // 0x0050(0x0038)(HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4029[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_BogieChangeTracks) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_BogieChangeTracks");
static_assert(sizeof(BP_TrainCarriage_C_BogieChangeTracks) == 0x0000C0, "Wrong size on BP_TrainCarriage_C_BogieChangeTracks");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, TrackConnection) == 0x000000, "Member 'BP_TrainCarriage_C_BogieChangeTracks::TrackConnection' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, Bogie) == 0x000010, "Member 'BP_TrainCarriage_C_BogieChangeTracks::Bogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, Speed) == 0x000018, "Member 'BP_TrainCarriage_C_BogieChangeTracks::Speed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, DistanceToEnd) == 0x000020, "Member 'BP_TrainCarriage_C_BogieChangeTracks::DistanceToEnd' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, DistanceToEndIn) == 0x000028, "Member 'BP_TrainCarriage_C_BogieChangeTracks::DistanceToEndIn' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, SpeedIn) == 0x000030, "Member 'BP_TrainCarriage_C_BogieChangeTracks::SpeedIn' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, BogieIn) == 0x000038, "Member 'BP_TrainCarriage_C_BogieChangeTracks::BogieIn' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, DistanceOnNewTrack) == 0x000040, "Member 'BP_TrainCarriage_C_BogieChangeTracks::DistanceOnNewTrack' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'BP_TrainCarriage_C_BogieChangeTracks::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_GetSplineLength_ReturnValue) == 0x000088, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_Abs_ReturnValue) == 0x000090, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_Abs_ReturnValue_1) == 0x0000A0, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_BogieChangeTracks, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BP_TrainCarriage_C_BogieChangeTracks::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.CalculateSpeed
// 0x02D0 (0x02D0 - 0x0000)
struct BP_TrainCarriage_C_CalculateSpeed final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreLerp;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreParentLerp;                                  // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402A[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RearBogieVelocity;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RearBogieParallelForce;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FrontBogieParallelForce;                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalAccel;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RearBogiePitch;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FrontBogiePitch;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402C[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402D[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402E[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402F[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4030[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4031[0x8];                                     // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4032[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegSin_ReturnValue_1;                     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4033[0x5];                                     // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4034[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4035[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_RearBogiePitch_ImplicitCast;    // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_FrontBogiePitch_ImplicitCast;   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_CalculateSpeed) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_CalculateSpeed");
static_assert(sizeof(BP_TrainCarriage_C_CalculateSpeed) == 0x0002D0, "Wrong size on BP_TrainCarriage_C_CalculateSpeed");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, DeltaSeconds) == 0x000000, "Member 'BP_TrainCarriage_C_CalculateSpeed::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, IgnoreLerp) == 0x000008, "Member 'BP_TrainCarriage_C_CalculateSpeed::IgnoreLerp' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, IgnoreParentLerp) == 0x000009, "Member 'BP_TrainCarriage_C_CalculateSpeed::IgnoreParentLerp' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, Speed) == 0x000010, "Member 'BP_TrainCarriage_C_CalculateSpeed::Speed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, RearBogieVelocity) == 0x000018, "Member 'BP_TrainCarriage_C_CalculateSpeed::RearBogieVelocity' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, RearBogieParallelForce) == 0x000020, "Member 'BP_TrainCarriage_C_CalculateSpeed::RearBogieParallelForce' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, FrontBogieParallelForce) == 0x000028, "Member 'BP_TrainCarriage_C_CalculateSpeed::FrontBogieParallelForce' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, LocalAccel) == 0x000030, "Member 'BP_TrainCarriage_C_CalculateSpeed::LocalAccel' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, RearBogiePitch) == 0x000038, "Member 'BP_TrainCarriage_C_CalculateSpeed::RearBogiePitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, DeltaTime) == 0x000040, "Member 'BP_TrainCarriage_C_CalculateSpeed::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, FrontBogiePitch) == 0x000048, "Member 'BP_TrainCarriage_C_CalculateSpeed::FrontBogiePitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue_1) == 0x000070, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue_2) == 0x000078, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue_3) == 0x000090, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0000B9, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BA, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BB, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000C0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0000C8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue_4) == 0x0000D0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000D8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_DegSin_ReturnValue) == 0x0000F8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000100, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000110, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000118, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_GetTransform_BogieTransform) == 0x000130, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_GetTransform_BogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakTransform_Location) == 0x000190, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakTransform_Rotation) == 0x0001A8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakTransform_Scale) == 0x0001C0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakRotator_Roll) == 0x0001D8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakRotator_Pitch) == 0x0001DC, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakRotator_Yaw) == 0x0001E0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_DegSin_ReturnValue_1) == 0x0001E8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0001F0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0001F8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000200, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Not_PreBool_ReturnValue_1) == 0x000201, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BooleanAND_ReturnValue_2) == 0x000202, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000208, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000210, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000218, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_FClamp_ReturnValue_1) == 0x000220, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000228, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000230, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue_5) == 0x000238, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000240, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakTransform_Location_1) == 0x000248, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakTransform_Rotation_1) == 0x000260, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakTransform_Scale_1) == 0x000278, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakRotator_Roll_1) == 0x000290, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakRotator_Pitch_1) == 0x000294, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_BreakRotator_Yaw_1) == 0x000298, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue_6) == 0x0002A0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_SelectFloat_ReturnValue_7) == 0x0002A8, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, CallFunc_FClamp_ReturnValue_2) == 0x0002B0, "Member 'BP_TrainCarriage_C_CalculateSpeed::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, K2Node_VariableSet_RearBogiePitch_ImplicitCast) == 0x0002B8, "Member 'BP_TrainCarriage_C_CalculateSpeed::K2Node_VariableSet_RearBogiePitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CalculateSpeed, K2Node_VariableSet_FrontBogiePitch_ImplicitCast) == 0x0002C0, "Member 'BP_TrainCarriage_C_CalculateSpeed::K2Node_VariableSet_FrontBogiePitch_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.CheckDistanceToParent
// 0x00E0 (0x00E0 - 0x0000)
struct BP_TrainCarriage_C_CheckDistanceToParent final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4036[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceBetweenLocations_Distance;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4037[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4038[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4039[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403A[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_CheckDistanceToParent) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_CheckDistanceToParent");
static_assert(sizeof(BP_TrainCarriage_C_CheckDistanceToParent) == 0x0000E0, "Wrong size on BP_TrainCarriage_C_CheckDistanceToParent");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, DeltaSeconds) == 0x000000, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000028, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_GetDistanceBetweenLocations_Distance) == 0x000040, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_GetDistanceBetweenLocations_Distance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000058, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_BooleanOR_ReturnValue) == 0x000081, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_GetDisplayName_ReturnValue_1) == 0x000088, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0000A8, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x0000D0, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_BooleanAND_ReturnValue) == 0x0000D1, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000D2, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D3, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_CheckDistanceToParent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_TrainCarriage_C_CheckDistanceToParent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.ConnectToParent
// 0x0010 (0x0010 - 0x0000)
struct BP_TrainCarriage_C_ConnectToParent final
{
public:
	class USphereComponent*                       ParentHitch;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ChildHitch;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_ConnectToParent) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_ConnectToParent");
static_assert(sizeof(BP_TrainCarriage_C_ConnectToParent) == 0x000010, "Wrong size on BP_TrainCarriage_C_ConnectToParent");
static_assert(offsetof(BP_TrainCarriage_C_ConnectToParent, ParentHitch) == 0x000000, "Member 'BP_TrainCarriage_C_ConnectToParent::ParentHitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ConnectToParent, ChildHitch) == 0x000008, "Member 'BP_TrainCarriage_C_ConnectToParent::ChildHitch' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.DerailCarriage
// 0x0070 (0x0070 - 0x0000)
struct BP_TrainCarriage_C_DerailCarriage final
{
public:
	struct FVector                                ImpactLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactForce;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CarriageSkelMesh;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CarriageSMMesh;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_DerailCarriage) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_DerailCarriage");
static_assert(sizeof(BP_TrainCarriage_C_DerailCarriage) == 0x000070, "Wrong size on BP_TrainCarriage_C_DerailCarriage");
static_assert(offsetof(BP_TrainCarriage_C_DerailCarriage, ImpactLocation) == 0x000000, "Member 'BP_TrainCarriage_C_DerailCarriage::ImpactLocation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_DerailCarriage, ImpactForce) == 0x000018, "Member 'BP_TrainCarriage_C_DerailCarriage::ImpactForce' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_DerailCarriage, CarriageSkelMesh) == 0x000030, "Member 'BP_TrainCarriage_C_DerailCarriage::CarriageSkelMesh' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_DerailCarriage, CarriageSMMesh) == 0x000040, "Member 'BP_TrainCarriage_C_DerailCarriage::CarriageSMMesh' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_DerailCarriage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'BP_TrainCarriage_C_DerailCarriage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_DerailCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'BP_TrainCarriage_C_DerailCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.DisconnectFromParent
// 0x0002 (0x0002 - 0x0000)
struct BP_TrainCarriage_C_DisconnectFromParent final
{
public:
	bool                                          AddToTimedIgnoreList;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_DisconnectFromParent) == 0x000001, "Wrong alignment on BP_TrainCarriage_C_DisconnectFromParent");
static_assert(sizeof(BP_TrainCarriage_C_DisconnectFromParent) == 0x000002, "Wrong size on BP_TrainCarriage_C_DisconnectFromParent");
static_assert(offsetof(BP_TrainCarriage_C_DisconnectFromParent, AddToTimedIgnoreList) == 0x000000, "Member 'BP_TrainCarriage_C_DisconnectFromParent::AddToTimedIgnoreList' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_DisconnectFromParent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'BP_TrainCarriage_C_DisconnectFromParent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.ExecuteUbergraph_BP_TrainCarriage
// 0x0028 (0x0028 - 0x0000)
struct BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickCarriageMovement_SuccessfulUpdate;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickCarriageMovement_UpdateAborted;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403C[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage");
static_assert(sizeof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage) == 0x000028, "Wrong size on BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage");
static_assert(offsetof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage, EntryPoint) == 0x000000, "Member 'BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage, CallFunc_TickCarriageMovement_SuccessfulUpdate) == 0x000018, "Member 'BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage::CallFunc_TickCarriageMovement_SuccessfulUpdate' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage, CallFunc_TickCarriageMovement_UpdateAborted) == 0x000019, "Member 'BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage::CallFunc_TickCarriageMovement_UpdateAborted' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage, CallFunc_SelectFloat_B_ImplicitCast) == 0x000020, "Member 'BP_TrainCarriage_C_ExecuteUbergraph_BP_TrainCarriage::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.GetRotationBasedSmoothErrorTolerance
// 0x0080 (0x0080 - 0x0000)
struct BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance final
{
public:
	struct FRotator                               SourceRotator;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	double                                        ErrorTolerance;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance");
static_assert(sizeof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance) == 0x000080, "Wrong size on BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, SourceRotator) == 0x000000, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::SourceRotator' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, ErrorTolerance) == 0x000018, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::ErrorTolerance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, ReturnValue) == 0x000020, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000078, "Member 'BP_TrainCarriage_C_GetRotationBasedSmoothErrorTolerance::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.HandleActiveObstacle
// 0x0038 (0x0038 - 0x0000)
struct BP_TrainCarriage_C_HandleActiveObstacle final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403F[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Bogie_C*                            K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4040[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Bogie_C*                            K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SensorPulse_SensorHitSomething;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4041[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_HandleActiveObstacle) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_HandleActiveObstacle");
static_assert(sizeof(BP_TrainCarriage_C_HandleActiveObstacle) == 0x000038, "Wrong size on BP_TrainCarriage_C_HandleActiveObstacle");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, DeltaSeconds) == 0x000000, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, Temp_bool_Variable) == 0x000008, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000009, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, K2Node_Select_Default) == 0x000010, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, Temp_bool_Variable_1) == 0x000019, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001A, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, K2Node_Select_Default_1) == 0x000020, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, CallFunc_SensorPulse_SensorHitSomething) == 0x000028, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::CallFunc_SensorPulse_SensorHitSomething' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00002A, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleActiveObstacle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_TrainCarriage_C_HandleActiveObstacle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.HandleEndOfTrack
// 0x0280 (0x0280 - 0x0000)
struct BP_TrainCarriage_C_HandleEndOfTrack final
{
public:
	bool                                          HitByHelperBogie;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4042[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TrainCarriage_C*                    InstantiatingCarriage;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4043[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RandomRotator_ReturnValue_1;              // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_1;              // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4044[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RandomRotator_ReturnValue_2;              // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_2;              // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_HandleEndOfTrack) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_HandleEndOfTrack");
static_assert(sizeof(BP_TrainCarriage_C_HandleEndOfTrack) == 0x000280, "Wrong size on BP_TrainCarriage_C_HandleEndOfTrack");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, HitByHelperBogie) == 0x000000, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::HitByHelperBogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, InstantiatingCarriage) == 0x000008, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::InstantiatingCarriage' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_RandomRotator_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_SelectRotator_ReturnValue) == 0x000028, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_RandomRotator_ReturnValue_1) == 0x000068, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_RandomRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_SelectRotator_ReturnValue_1) == 0x000080, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_SelectRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000098, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000B0, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Location) == 0x0000C8, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Rotation) == 0x0000E0, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000110, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000128, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Location_1) == 0x000140, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Rotation_1) == 0x000158, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Scale_1) == 0x000170, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, K2Node_SwitchEnum_CmpSuccess) == 0x000190, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_RandomRotator_ReturnValue_2) == 0x000198, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_RandomRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_SelectRotator_ReturnValue_2) == 0x0001B0, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_SelectRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_GetForwardVector_ReturnValue_2) == 0x0001C8, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x0001E0, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Location_2) == 0x0001F8, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Rotation_2) == 0x000210, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_BreakTransform_Scale_2) == 0x000228, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000240, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000258, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000260, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_HandleEndOfTrack, K2Node_SwitchEnum_CmpSuccess_1) == 0x000278, "Member 'BP_TrainCarriage_C_HandleEndOfTrack::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.InitalizeMesh
// 0x0328 (0x0328 - 0x0000)
struct BP_TrainCarriage_C_InitalizeMesh final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult_1;  // 0x0150(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult_2;  // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_InitalizeMesh) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_InitalizeMesh");
static_assert(sizeof(BP_TrainCarriage_C_InitalizeMesh) == 0x000328, "Wrong size on BP_TrainCarriage_C_InitalizeMesh");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_MakeVector_ReturnValue_1) == 0x000020, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000050, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x000068, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_K2_AddRelativeLocation_SweepHitResult_1) == 0x000150, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_K2_AddRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_K2_AddRelativeLocation_SweepHitResult_2) == 0x000238, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_K2_AddRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000320, "Member 'BP_TrainCarriage_C_InitalizeMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.InitalizeTrainCarriage
// 0x0018 (0x0018 - 0x0000)
struct BP_TrainCarriage_C_InitalizeTrainCarriage final
{
public:
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4045[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_InitalizeTrainCarriage) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_InitalizeTrainCarriage");
static_assert(sizeof(BP_TrainCarriage_C_InitalizeTrainCarriage) == 0x000018, "Wrong size on BP_TrainCarriage_C_InitalizeTrainCarriage");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000001, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000003, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x000004, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_InitalizeTrainCarriage, CallFunc_BooleanAND_ReturnValue_1) == 0x000013, "Member 'BP_TrainCarriage_C_InitalizeTrainCarriage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.LeanCarriage
// 0x0418 (0x0418 - 0x0000)
struct BP_TrainCarriage_C_LeanCarriage final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4046[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4047[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0040(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0128(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_2;     // 0x0270(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4048[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4049[0x6];                                     // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404A[0x3];                                     // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404B[0x4];                                     // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_LeanCarriage) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_LeanCarriage");
static_assert(sizeof(BP_TrainCarriage_C_LeanCarriage) == 0x000418, "Wrong size on BP_TrainCarriage_C_LeanCarriage");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000040, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000128, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakTransform_Location) == 0x000210, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakTransform_Rotation) == 0x000228, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakTransform_Scale) == 0x000240, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_MakeRotator_ReturnValue_1) == 0x000258, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_K2_AddLocalRotation_SweepHitResult_2) == 0x000270, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_K2_AddLocalRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Lerp_ReturnValue) == 0x000358, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakTransform_Location_1) == 0x000360, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakTransform_Rotation_1) == 0x000378, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakTransform_Scale_1) == 0x000390, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0003A8, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakRotator_Roll) == 0x0003C0, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakRotator_Pitch) == 0x0003C4, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BreakRotator_Yaw) == 0x0003C8, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Abs_ReturnValue) == 0x0003D0, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0003D8, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_BooleanAND_ReturnValue) == 0x0003E1, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003E8, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Abs_ReturnValue_1) == 0x0003F0, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0003F8, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0003FC, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000400, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Abs_A_ImplicitCast) == 0x000408, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_LeanCarriage, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000410, "Member 'BP_TrainCarriage_C_LeanCarriage::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.ManuallySetupCarriage
// 0x0600 (0x0600 - 0x0000)
struct BP_TrainCarriage_C_ManuallySetupCarriage final
{
public:
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0018(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0100(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_404C[0x8];                                     // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x0250(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0418(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0518(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_TrainCarriage_C_ManuallySetupCarriage) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_ManuallySetupCarriage");
static_assert(sizeof(BP_TrainCarriage_C_ManuallySetupCarriage) == 0x000600, "Wrong size on BP_TrainCarriage_C_ManuallySetupCarriage");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_Add_VectorVector_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000018, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000100, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_GetRelativeTransform_ReturnValue) == 0x0001F0, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x000250, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_BreakTransform_Location) == 0x0002B0, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_BreakTransform_Rotation) == 0x0002C8, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_BreakTransform_Scale) == 0x0002E0, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_BreakTransform_Location_1) == 0x0002F8, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_BreakTransform_Rotation_1) == 0x000310, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_BreakTransform_Scale_1) == 0x000328, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_FindLookAtRotation_ReturnValue) == 0x000340, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000358, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000370, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000388, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_MakeTransform_ReturnValue) == 0x0003A0, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_MakeVector_ReturnValue) == 0x000400, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000418, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000500, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ManuallySetupCarriage, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000518, "Member 'BP_TrainCarriage_C_ManuallySetupCarriage::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.NotifyAboutTrackUpdate
// 0x0010 (0x0010 - 0x0000)
struct BP_TrainCarriage_C_NotifyAboutTrackUpdate final
{
public:
	class ABP_TrainTrack_C*                       UpdatedTrack;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_NotifyAboutTrackUpdate) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_NotifyAboutTrackUpdate");
static_assert(sizeof(BP_TrainCarriage_C_NotifyAboutTrackUpdate) == 0x000010, "Wrong size on BP_TrainCarriage_C_NotifyAboutTrackUpdate");
static_assert(offsetof(BP_TrainCarriage_C_NotifyAboutTrackUpdate, UpdatedTrack) == 0x000000, "Member 'BP_TrainCarriage_C_NotifyAboutTrackUpdate::UpdatedTrack' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_NotifyAboutTrackUpdate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_NotifyAboutTrackUpdate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.PerformRollCheck
// 0x0278 (0x0278 - 0x0000)
struct BP_TrainCarriage_C_PerformRollCheck final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404D[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404F[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4050[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4051[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4052[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4053[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_RotatorToString_ReturnValue;         // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4054[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4055[0x5];                                     // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_1; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_2; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_2;                     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_PerformRollCheck) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_PerformRollCheck");
static_assert(sizeof(BP_TrainCarriage_C_PerformRollCheck) == 0x000278, "Wrong size on BP_TrainCarriage_C_PerformRollCheck");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, DeltaSeconds) == 0x000000, "Member 'BP_TrainCarriage_C_PerformRollCheck::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_PerformRollCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_TrainCarriage_C_PerformRollCheck::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00000A, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_SelectVector_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GetRightVector_ReturnValue) == 0x000060, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000080, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B0, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakTransform_Location) == 0x0000C8, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakTransform_Rotation) == 0x0000E0, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakTransform_Location_1) == 0x000110, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakTransform_Rotation_1) == 0x000128, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakTransform_Scale_1) == 0x000140, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000170, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GetDisplayName_ReturnValue) == 0x000188, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Concat_StrStr_ReturnValue) == 0x000198, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakRotator_Roll) == 0x0001A8, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakRotator_Pitch) == 0x0001AC, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakRotator_Yaw) == 0x0001B0, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0001B8, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakRotator_Roll_1) == 0x0001D0, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakRotator_Pitch_1) == 0x0001D4, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BreakRotator_Yaw_1) == 0x0001D8, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Abs_ReturnValue) == 0x0001E8, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Abs_ReturnValue_1) == 0x0001F8, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000200, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Abs_ReturnValue_2) == 0x000208, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000210, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Conv_RotatorToString_ReturnValue) == 0x000218, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Conv_RotatorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BooleanOR_ReturnValue) == 0x000228, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000230, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BooleanOR_ReturnValue_1) == 0x000240, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BooleanAND_ReturnValue) == 0x000241, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000242, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000248, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_1) == 0x000250, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_2) == 0x000258, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Abs_A_ImplicitCast) == 0x000260, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Abs_A_ImplicitCast_1) == 0x000268, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PerformRollCheck, CallFunc_Abs_A_ImplicitCast_2) == 0x000270, "Member 'BP_TrainCarriage_C_PerformRollCheck::CallFunc_Abs_A_ImplicitCast_2' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.PutSensorBogieOutFront
// 0x0048 (0x0048 - 0x0000)
struct BP_TrainCarriage_C_PutSensorBogieOutFront final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4056[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4057[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAC_Bogie_C*>                    K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_PutSensorBogieOutFront) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_PutSensorBogieOutFront");
static_assert(sizeof(BP_TrainCarriage_C_PutSensorBogieOutFront) == 0x000048, "Wrong size on BP_TrainCarriage_C_PutSensorBogieOutFront");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_PutSensorBogieOutFront, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'BP_TrainCarriage_C_PutSensorBogieOutFront::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TrainCarriage_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TrainCarriage_C_ReceiveTick");
static_assert(sizeof(BP_TrainCarriage_C_ReceiveTick) == 0x000004, "Wrong size on BP_TrainCarriage_C_ReceiveTick");
static_assert(offsetof(BP_TrainCarriage_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_TrainCarriage_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.RefreshPositionOnTrack
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TrainCarriage_C_RefreshPositionOnTrack final
{
public:
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4058[0xE];                                     // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_RefreshPositionOnTrack) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_RefreshPositionOnTrack");
static_assert(sizeof(BP_TrainCarriage_C_RefreshPositionOnTrack) == 0x0000C0, "Wrong size on BP_TrainCarriage_C_RefreshPositionOnTrack");
static_assert(offsetof(BP_TrainCarriage_C_RefreshPositionOnTrack, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_RefreshPositionOnTrack::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RefreshPositionOnTrack, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000001, "Member 'BP_TrainCarriage_C_RefreshPositionOnTrack::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RefreshPositionOnTrack, CallFunc_GetTransform_BogieTransform) == 0x000010, "Member 'BP_TrainCarriage_C_RefreshPositionOnTrack::CallFunc_GetTransform_BogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RefreshPositionOnTrack, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_TrainCarriage_C_RefreshPositionOnTrack::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RefreshPositionOnTrack, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_TrainCarriage_C_RefreshPositionOnTrack::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RefreshPositionOnTrack, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_TrainCarriage_C_RefreshPositionOnTrack::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.ResetCarriage
// 0x0010 (0x0010 - 0x0000)
struct BP_TrainCarriage_C_ResetCarriage final
{
public:
	bool                                          ResetChildren;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4059[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_ResetCarriage) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_ResetCarriage");
static_assert(sizeof(BP_TrainCarriage_C_ResetCarriage) == 0x000010, "Wrong size on BP_TrainCarriage_C_ResetCarriage");
static_assert(offsetof(BP_TrainCarriage_C_ResetCarriage, ResetChildren) == 0x000000, "Member 'BP_TrainCarriage_C_ResetCarriage::ResetChildren' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ResetCarriage, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_TrainCarriage_C_ResetCarriage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ResetCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'BP_TrainCarriage_C_ResetCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ResetCarriage, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_TrainCarriage_C_ResetCarriage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ResetCarriage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_ResetCarriage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.RevertDistances
// 0x0020 (0x0020 - 0x0000)
struct BP_TrainCarriage_C_RevertDistances final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_RevertDistances) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_RevertDistances");
static_assert(sizeof(BP_TrainCarriage_C_RevertDistances) == 0x000020, "Wrong size on BP_TrainCarriage_C_RevertDistances");
static_assert(offsetof(BP_TrainCarriage_C_RevertDistances, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_TrainCarriage_C_RevertDistances::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RevertDistances, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_TrainCarriage_C_RevertDistances::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RevertDistances, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_TrainCarriage_C_RevertDistances::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RevertDistances, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_RevertDistances::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RevertDistances, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_TrainCarriage_C_RevertDistances::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_RevertDistances, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_TrainCarriage_C_RevertDistances::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SensorPulse
// 0x03B0 (0x03B0 - 0x0000)
struct BP_TrainCarriage_C_SensorPulse final
{
public:
	class UAC_Bogie_C*                            StartBogie;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SensorHitSomething;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TargetDistance;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitSomething;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceTraveled;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PulseSpeed;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BogieDirectionOfTravel                      RestoreDirOfTravel;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405C[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RestoreDistance;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RestoreTrackSplineIndex;                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405D[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TrainTrack_C*                       RestoreTrack;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405E[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405F[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickBogieMovement_HitEOT;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4060[0xF];                                     // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0158(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4061[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0170(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4062[0x1];                                     // 0x025B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4063[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4064[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorOnIgnoreList_IsOnIgnoreList;       // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0366(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4065[0x1];                                     // 0x0367(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4066[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4067[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4068[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SensorPulse) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_SensorPulse");
static_assert(sizeof(BP_TrainCarriage_C_SensorPulse) == 0x0003B0, "Wrong size on BP_TrainCarriage_C_SensorPulse");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, StartBogie) == 0x000000, "Member 'BP_TrainCarriage_C_SensorPulse::StartBogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, SensorHitSomething) == 0x000008, "Member 'BP_TrainCarriage_C_SensorPulse::SensorHitSomething' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, TargetDistance) == 0x000010, "Member 'BP_TrainCarriage_C_SensorPulse::TargetDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, HitSomething) == 0x000018, "Member 'BP_TrainCarriage_C_SensorPulse::HitSomething' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, DistanceTraveled) == 0x000020, "Member 'BP_TrainCarriage_C_SensorPulse::DistanceTraveled' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, PulseSpeed) == 0x000028, "Member 'BP_TrainCarriage_C_SensorPulse::PulseSpeed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, RestoreDirOfTravel) == 0x000030, "Member 'BP_TrainCarriage_C_SensorPulse::RestoreDirOfTravel' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, RestoreDistance) == 0x000038, "Member 'BP_TrainCarriage_C_SensorPulse::RestoreDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, RestoreTrackSplineIndex) == 0x000040, "Member 'BP_TrainCarriage_C_SensorPulse::RestoreTrackSplineIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, RestoreTrack) == 0x000048, "Member 'BP_TrainCarriage_C_SensorPulse::RestoreTrack' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_TrainCarriage_C_SensorPulse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, Temp_bool_True_if_break_was_hit_Variable) == 0x000054, "Member 'BP_TrainCarriage_C_SensorPulse::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Not_PreBool_ReturnValue) == 0x000055, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_TrainCarriage_C_SensorPulse::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Not_PreBool_ReturnValue_1) == 0x000070, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_TickBogieMovement_HitEOT) == 0x000080, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_TickBogieMovement_HitEOT' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_GetTransform_BogieTransform) == 0x000090, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_GetTransform_BogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakTransform_Scale) == 0x000120, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Abs_ReturnValue) == 0x000138, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000158, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000168, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000169, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Array_Get_Item) == 0x000170, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BooleanAND_ReturnValue) == 0x000258, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_bBlockingHit) == 0x000259, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_bInitialOverlap) == 0x00025A, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_Time) == 0x00025C, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_Distance) == 0x000260, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_Location) == 0x000268, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_ImpactPoint) == 0x000280, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_Normal) == 0x000298, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B0, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_BoneName) == 0x0002E8, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_HitItem) == 0x0002F0, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_ElementIndex) == 0x0002F4, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_FaceIndex) == 0x0002F8, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_TraceStart) == 0x000300, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BreakHitResult_TraceEnd) == 0x000318, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_GetComponentBounds_Origin) == 0x000330, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_GetComponentBounds_BoxExtent) == 0x000348, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_GetComponentBounds_SphereRadius) == 0x000360, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_IsActorOnIgnoreList_IsOnIgnoreList) == 0x000364, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_IsActorOnIgnoreList_IsOnIgnoreList' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000365, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Not_PreBool_ReturnValue_2) == 0x000366, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_GetDisplayName_ReturnValue) == 0x000368, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BooleanAND_ReturnValue_1) == 0x000378, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Concat_StrStr_ReturnValue) == 0x000380, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Array_Length_ReturnValue) == 0x000390, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, Temp_int_Loop_Counter_Variable) == 0x000394, "Member 'BP_TrainCarriage_C_SensorPulse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Less_IntInt_ReturnValue) == 0x000398, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_Add_IntInt_ReturnValue) == 0x00039C, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_BooleanAND_ReturnValue_2) == 0x0003A0, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SensorPulse, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x0003A8, "Member 'BP_TrainCarriage_C_SensorPulse::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SetCarriageDirection
// 0x0028 (0x0028 - 0x0000)
struct BP_TrainCarriage_C_SetCarriageDirection final
{
public:
	E_BogieDirectionOfTravel                      DirOfTravel;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4069[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SetCarriageDirection) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_SetCarriageDirection");
static_assert(sizeof(BP_TrainCarriage_C_SetCarriageDirection) == 0x000028, "Wrong size on BP_TrainCarriage_C_SetCarriageDirection");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, DirOfTravel) == 0x000000, "Member 'BP_TrainCarriage_C_SetCarriageDirection::DirOfTravel' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_TrainCarriage_C_SetCarriageDirection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_SetCarriageDirection::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_TrainCarriage_C_SetCarriageDirection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_SetCarriageDirection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_TrainCarriage_C_SetCarriageDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_TrainCarriage_C_SetCarriageDirection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageDirection, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_TrainCarriage_C_SetCarriageDirection::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SetCarriageState
// 0x0003 (0x0003 - 0x0000)
struct BP_TrainCarriage_C_SetCarriageState final
{
public:
	E_CarriageState                               NewCarriageState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PassToChildren;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SetCarriageState) == 0x000001, "Wrong alignment on BP_TrainCarriage_C_SetCarriageState");
static_assert(sizeof(BP_TrainCarriage_C_SetCarriageState) == 0x000003, "Wrong size on BP_TrainCarriage_C_SetCarriageState");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageState, NewCarriageState) == 0x000000, "Member 'BP_TrainCarriage_C_SetCarriageState::NewCarriageState' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageState, PassToChildren) == 0x000001, "Member 'BP_TrainCarriage_C_SetCarriageState::PassToChildren' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetCarriageState, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'BP_TrainCarriage_C_SetCarriageState::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SetChildCarriage
// 0x0008 (0x0008 - 0x0000)
struct BP_TrainCarriage_C_SetChildCarriage final
{
public:
	class ABP_TrainCarriage_C*                    NewChild;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SetChildCarriage) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_SetChildCarriage");
static_assert(sizeof(BP_TrainCarriage_C_SetChildCarriage) == 0x000008, "Wrong size on BP_TrainCarriage_C_SetChildCarriage");
static_assert(offsetof(BP_TrainCarriage_C_SetChildCarriage, NewChild) == 0x000000, "Member 'BP_TrainCarriage_C_SetChildCarriage::NewChild' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SetParentCarriage
// 0x0010 (0x0010 - 0x0000)
struct BP_TrainCarriage_C_SetParentCarriage final
{
public:
	class ABP_TrainCarriage_C*                    NewParent;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RefreshPosition;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SetParentCarriage) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_SetParentCarriage");
static_assert(sizeof(BP_TrainCarriage_C_SetParentCarriage) == 0x000010, "Wrong size on BP_TrainCarriage_C_SetParentCarriage");
static_assert(offsetof(BP_TrainCarriage_C_SetParentCarriage, NewParent) == 0x000000, "Member 'BP_TrainCarriage_C_SetParentCarriage::NewParent' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetParentCarriage, RefreshPosition) == 0x000008, "Member 'BP_TrainCarriage_C_SetParentCarriage::RefreshPosition' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SetupAnimations
// 0x0001 (0x0001 - 0x0000)
struct BP_TrainCarriage_C_SetupAnimations final
{
public:
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SetupAnimations) == 0x000001, "Wrong alignment on BP_TrainCarriage_C_SetupAnimations");
static_assert(sizeof(BP_TrainCarriage_C_SetupAnimations) == 0x000001, "Wrong size on BP_TrainCarriage_C_SetupAnimations");
static_assert(offsetof(BP_TrainCarriage_C_SetupAnimations, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_SetupAnimations::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SetupBogies
// 0x0130 (0x0130 - 0x0000)
struct BP_TrainCarriage_C_SetupBogies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406E[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4070[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4071[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4072[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4073[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAC_Bogie_C*>                    CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_TrainCarriage_C_SetupBogies) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_SetupBogies");
static_assert(sizeof(BP_TrainCarriage_C_SetupBogies) == 0x000130, "Wrong size on BP_TrainCarriage_C_SetupBogies");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_TrainCarriage_C_SetupBogies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_TrainCarriage_C_SetupBogies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Array_Add_ReturnValue_1) == 0x000054, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Array_Add_ReturnValue_2) == 0x000058, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_BreakTransform_Rotation) == 0x000078, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_BreakTransform_Scale) == 0x000090, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0000A8, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A9, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_SelectFloat_ReturnValue_1) == 0x0000B0, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_GetTransform_BogieTransform) == 0x0000C0, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_GetTransform_BogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupBogies, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000120, "Member 'BP_TrainCarriage_C_SetupBogies::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SetupCollision
// 0x0100 (0x0100 - 0x0000)
struct BP_TrainCarriage_C_SetupCollision final
{
public:
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4074[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            CallFunc_AddComponent_ReturnValue_1;               // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SetupCollision) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_SetupCollision");
static_assert(sizeof(BP_TrainCarriage_C_SetupCollision) == 0x000100, "Wrong size on BP_TrainCarriage_C_SetupCollision");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, CallFunc_MakeLiteralString_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_SetupCollision::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, Temp_struct_Variable) == 0x000010, "Member 'BP_TrainCarriage_C_SetupCollision::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'BP_TrainCarriage_C_SetupCollision::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000078, "Member 'BP_TrainCarriage_C_SetupCollision::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BP_TrainCarriage_C_SetupCollision::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, Temp_struct_Variable_1) == 0x000090, "Member 'BP_TrainCarriage_C_SetupCollision::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, CallFunc_AddComponent_ReturnValue_1) == 0x0000F0, "Member 'BP_TrainCarriage_C_SetupCollision::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SetupCollision, CallFunc_Array_Add_ReturnValue_1) == 0x0000F8, "Member 'BP_TrainCarriage_C_SetupCollision::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.SmoothOutBogieDistance
// 0x0158 (0x0158 - 0x0000)
struct BP_TrainCarriage_C_SmoothOutBogieDistance final
{
public:
	class UAC_Bogie_C*                            Bogie;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        TargetDistance;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousLocation;                                  // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ToleranceValue;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VecLen;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopCount;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotCloseEnough;                                    // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4075[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotation_Rotation;                     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRotationBasedSmoothErrorTolerance_ErrorTolerance; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_Location;                     // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4076[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4077[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4078[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4079[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickBogieMovement_HitEOT;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407A[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407B[0x2];                                     // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_SmoothOutBogieDistance) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_SmoothOutBogieDistance");
static_assert(sizeof(BP_TrainCarriage_C_SmoothOutBogieDistance) == 0x000158, "Wrong size on BP_TrainCarriage_C_SmoothOutBogieDistance");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, Bogie) == 0x000000, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::Bogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, TargetDistance) == 0x000008, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::TargetDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, PreviousLocation) == 0x000010, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::PreviousLocation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, ToleranceValue) == 0x000028, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::ToleranceValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, Delta) == 0x000030, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::Delta' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, VecLen) == 0x000038, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::VecLen' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, LoopCount) == 0x000040, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::LoopCount' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, NotCloseEnough) == 0x000044, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::NotCloseEnough' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_GetRotation_Rotation) == 0x000050, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_GetRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_GetRotationBasedSmoothErrorTolerance_ErrorTolerance) == 0x000078, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_GetRotationBasedSmoothErrorTolerance_ErrorTolerance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_GetLocation_Location) == 0x000080, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_GetLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_VSize_ReturnValue) == 0x0000B0, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_BooleanAND_ReturnValue) == 0x0000B9, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_SelectFloat_ReturnValue) == 0x0000C0, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, Temp_int_Variable) == 0x0000C8, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Abs_ReturnValue_1) == 0x0000D0, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Abs_ReturnValue_2) == 0x0000E0, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000F0, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_TickBogieMovement_HitEOT) == 0x000100, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_TickBogieMovement_HitEOT' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000118, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000128, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000138, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_SelectFloat_ReturnValue_1) == 0x000148, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000151, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_SmoothOutBogieDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000154, "Member 'BP_TrainCarriage_C_SmoothOutBogieDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.StopCarriage
// 0x0001 (0x0001 - 0x0000)
struct BP_TrainCarriage_C_StopCarriage final
{
public:
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_StopCarriage) == 0x000001, "Wrong alignment on BP_TrainCarriage_C_StopCarriage");
static_assert(sizeof(BP_TrainCarriage_C_StopCarriage) == 0x000001, "Wrong size on BP_TrainCarriage_C_StopCarriage");
static_assert(offsetof(BP_TrainCarriage_C_StopCarriage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_StopCarriage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.TickBogieMovement
// 0x00D8 (0x00D8 - 0x0000)
struct BP_TrainCarriage_C_TickBogieMovement final
{
public:
	class UAC_Bogie_C*                            Bogie;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreEndOfTrack;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitEOT;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConnectionPointAtEOT;                              // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407C[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackConnection                     TrackConnection;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            InBogie;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_TrackConnectionPoint                ConnectionPoint;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        InSpeed;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIgnoreEndOfTrack;                                // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AtTheEndOfTheSpline;                               // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407D[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceToEnd;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceToEndOfTrack_Distance;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDistanceToEndOfTrack_AtSplineEnd;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407F[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackConnection                     CallFunc_PickConnectionToUse_Connection;           // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickConnectionToUse_ConnectionFound;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4080[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackConnection                     CallFunc_Array_Get_Item;                           // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirectionOfTravelInverted_IsInverted;   // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4081[0x1];                                     // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4082[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackConnectionPoint                CallFunc_GetConnectionPoint_ConnectionPoint;       // 0x00C0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetConnectionPoint_IsEndPoint;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_TickBogieMovement) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_TickBogieMovement");
static_assert(sizeof(BP_TrainCarriage_C_TickBogieMovement) == 0x0000D8, "Wrong size on BP_TrainCarriage_C_TickBogieMovement");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, Bogie) == 0x000000, "Member 'BP_TrainCarriage_C_TickBogieMovement::Bogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, Speed) == 0x000008, "Member 'BP_TrainCarriage_C_TickBogieMovement::Speed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, IgnoreEndOfTrack) == 0x000010, "Member 'BP_TrainCarriage_C_TickBogieMovement::IgnoreEndOfTrack' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, HitEOT) == 0x000011, "Member 'BP_TrainCarriage_C_TickBogieMovement::HitEOT' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, ConnectionPointAtEOT) == 0x000012, "Member 'BP_TrainCarriage_C_TickBogieMovement::ConnectionPointAtEOT' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, TrackConnection) == 0x000018, "Member 'BP_TrainCarriage_C_TickBogieMovement::TrackConnection' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, InBogie) == 0x000028, "Member 'BP_TrainCarriage_C_TickBogieMovement::InBogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, ConnectionPoint) == 0x000030, "Member 'BP_TrainCarriage_C_TickBogieMovement::ConnectionPoint' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, InSpeed) == 0x000040, "Member 'BP_TrainCarriage_C_TickBogieMovement::InSpeed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, InIgnoreEndOfTrack) == 0x000048, "Member 'BP_TrainCarriage_C_TickBogieMovement::InIgnoreEndOfTrack' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, AtTheEndOfTheSpline) == 0x000049, "Member 'BP_TrainCarriage_C_TickBogieMovement::AtTheEndOfTheSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, DistanceToEnd) == 0x000050, "Member 'BP_TrainCarriage_C_TickBogieMovement::DistanceToEnd' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_IsClosedLoop_ReturnValue) == 0x000058, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_GetDistanceToEndOfTrack_Distance) == 0x000068, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_GetDistanceToEndOfTrack_Distance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_GetDistanceToEndOfTrack_AtSplineEnd) == 0x000070, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_GetDistanceToEndOfTrack_AtSplineEnd' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_PickConnectionToUse_Connection) == 0x000078, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_PickConnectionToUse_Connection' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_PickConnectionToUse_ConnectionFound) == 0x000088, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_PickConnectionToUse_ConnectionFound' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A5, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_IsDirectionOfTravelInverted_IsInverted) == 0x0000A6, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_IsDirectionOfTravelInverted_IsInverted' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_MakeLiteralString_ReturnValue) == 0x0000A8, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_GetConnectionPoint_ConnectionPoint) == 0x0000C0, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_GetConnectionPoint_ConnectionPoint' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickBogieMovement, CallFunc_GetConnectionPoint_IsEndPoint) == 0x0000D0, "Member 'BP_TrainCarriage_C_TickBogieMovement::CallFunc_GetConnectionPoint_IsEndPoint' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.TickCarriageMovement
// 0x0140 (0x0140 - 0x0000)
struct BP_TrainCarriage_C_TickCarriageMovement final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuccessfulUpdate;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateAborted;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4083[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeDelta;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4084[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4085[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickCarriageMovement_SuccessfulUpdate;    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickCarriageMovement_UpdateAborted;       // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4086[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4087[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickCarriageMovement_SuccessfulUpdate_1;  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickCarriageMovement_UpdateAborted_1;     // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4088[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4089[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408A[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408B[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_Location;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408C[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408D[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickBogieMovement_HitEOT;                 // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_TickCarriageMovement) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_TickCarriageMovement");
static_assert(sizeof(BP_TrainCarriage_C_TickCarriageMovement) == 0x000140, "Wrong size on BP_TrainCarriage_C_TickCarriageMovement");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, DeltaSeconds) == 0x000000, "Member 'BP_TrainCarriage_C_TickCarriageMovement::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, SuccessfulUpdate) == 0x000008, "Member 'BP_TrainCarriage_C_TickCarriageMovement::SuccessfulUpdate' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, UpdateAborted) == 0x000009, "Member 'BP_TrainCarriage_C_TickCarriageMovement::UpdateAborted' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, TimeDelta) == 0x000010, "Member 'BP_TrainCarriage_C_TickCarriageMovement::TimeDelta' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002D, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Loop_Counter_Variable_2) == 0x000038, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000043, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_TickCarriageMovement_SuccessfulUpdate) == 0x000044, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_TickCarriageMovement_SuccessfulUpdate' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_TickCarriageMovement_UpdateAborted) == 0x000045, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_TickCarriageMovement_UpdateAborted' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Loop_Counter_Variable_3) == 0x000054, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Add_IntInt_ReturnValue_4) == 0x000058, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x00005C, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_TickCarriageMovement_SuccessfulUpdate_1) == 0x00005D, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_TickCarriageMovement_SuccessfulUpdate_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_TickCarriageMovement_UpdateAborted_1) == 0x00005E, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_TickCarriageMovement_UpdateAborted_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Greater_IntInt_ReturnValue) == 0x00005F, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Variable) == 0x000060, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000064, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_BooleanAND_ReturnValue) == 0x000065, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000066, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000067, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Not_PreBool_ReturnValue_1) == 0x000068, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_BooleanAND_ReturnValue_1) == 0x000069, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Less_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_BooleanAND_ReturnValue_2) == 0x000084, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Array_Index_Variable_2) == 0x000088, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_GetLocation_Location) == 0x0000A0, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_GetLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Length_ReturnValue_3) == 0x0000B8, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000BC, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_BooleanAND_ReturnValue_3) == 0x0000BD, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, Temp_int_Array_Index_Variable_3) == 0x0000C0, "Member 'BP_TrainCarriage_C_TickCarriageMovement::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_GetTransform_BogieTransform) == 0x0000D0, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_GetTransform_BogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, K2Node_SwitchEnum_CmpSuccess) == 0x000130, "Member 'BP_TrainCarriage_C_TickCarriageMovement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCarriageMovement, CallFunc_TickBogieMovement_HitEOT) == 0x000131, "Member 'BP_TrainCarriage_C_TickCarriageMovement::CallFunc_TickBogieMovement_HitEOT' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.TickCollision
// 0x0830 (0x0830 - 0x0000)
struct BP_TrainCarriage_C_TickCollision final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RemoveIndexes;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	double                                        UpdatedTimeout;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ImpactForce;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408F[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_TrackTimedIgnore                    CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4090[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackTimedIgnore                    K2Node_MakeStruct_S_TrackTimedIgnore;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4091[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4092[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4093[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4094[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_4095[0x8];                                     // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x0170(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4096[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4097[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0258(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4098[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_3;                         // 0x0270(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4099[0x2];                                     // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409A[0x4];                                     // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409B[0x3];                                     // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409C[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorOnIgnoreList_IsOnIgnoreList;       // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409D[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409E[0x6];                                     // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409F[0xF];                                     // 0x04B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_BogieTransform_1;            // 0x04C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits_1;        // 0x0598(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue_1;    // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A0[0x3];                                     // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A1[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_4;                         // 0x05B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x06A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A2[0x2];                                     // 0x06A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A3[0x4];                                     // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0720(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A4[0x4];                                     // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A5[0x4];                                     // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorOnIgnoreList_IsOnIgnoreList_1;     // 0x07E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A6[0x6];                                     // 0x07E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x07E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A7[0x7];                                     // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A8[0x3];                                     // 0x0811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Timeout_5_009A71724E13EC0AD7AB51BD64347213_ImplicitCast; // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_TickCollision) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_TickCollision");
static_assert(sizeof(BP_TrainCarriage_C_TickCollision) == 0x000830, "Wrong size on BP_TrainCarriage_C_TickCollision");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, DeltaSeconds) == 0x000000, "Member 'BP_TrainCarriage_C_TickCollision::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, DeltaTime) == 0x000008, "Member 'BP_TrainCarriage_C_TickCollision::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, RemoveIndexes) == 0x000010, "Member 'BP_TrainCarriage_C_TickCollision::RemoveIndexes' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, UpdatedTimeout) == 0x000020, "Member 'BP_TrainCarriage_C_TickCollision::UpdatedTimeout' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, ImpactForce) == 0x000028, "Member 'BP_TrainCarriage_C_TickCollision::ImpactForce' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_MakeLiteralString_ReturnValue) == 0x000040, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000050, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, K2Node_MakeStruct_S_TrackTimedIgnore) == 0x0000A0, "Member 'BP_TrainCarriage_C_TickCollision::K2Node_MakeStruct_S_TrackTimedIgnore' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_TrainCarriage_C_TickCollision::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Array_Index_Variable_2) == 0x0000C8, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Loop_Counter_Variable_2) == 0x0000CC, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Loop_Counter_Variable_3) == 0x0000D8, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Loop_Counter_Variable_4) == 0x0000DC, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000EC, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetForwardVector_ReturnValue) == 0x000110, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000128, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Array_Index_Variable_3) == 0x000140, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, Temp_int_Array_Index_Variable_4) == 0x000144, "Member 'BP_TrainCarriage_C_TickCollision::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Get_Item_2) == 0x000150, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000154, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, K2Node_MakeArray_Array_1) == 0x000158, "Member 'BP_TrainCarriage_C_TickCollision::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetTransform_BogieTransform) == 0x000170, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetTransform_BogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakTransform_Location) == 0x0001D0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakTransform_Rotation) == 0x0001E8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakTransform_Scale) == 0x000200, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000218, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Length_ReturnValue_2) == 0x000230, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x000238, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Less_IntInt_ReturnValue_2) == 0x000250, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000258, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000268, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Get_Item_3) == 0x000270, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Length_ReturnValue_3) == 0x000358, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_bBlockingHit) == 0x00035C, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_bInitialOverlap) == 0x00035D, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Time) == 0x000360, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Distance) == 0x000364, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Location) == 0x000368, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_ImpactPoint) == 0x000380, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Normal) == 0x000398, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_ImpactNormal) == 0x0003B0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_PhysMat) == 0x0003C8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitActor) == 0x0003D0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitComponent) == 0x0003D8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitBoneName) == 0x0003E0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_BoneName) == 0x0003E8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitItem) == 0x0003F0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_ElementIndex) == 0x0003F4, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_FaceIndex) == 0x0003F8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_TraceStart) == 0x000400, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_TraceEnd) == 0x000418, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Less_IntInt_ReturnValue_3) == 0x000430, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetMass_ReturnValue) == 0x000434, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000438, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetVelocity_ReturnValue) == 0x000440, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_IsActorOnIgnoreList_IsOnIgnoreList) == 0x000458, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_IsActorOnIgnoreList_IsOnIgnoreList' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_VSize_ReturnValue) == 0x000460, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000468, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Not_PreBool_ReturnValue) == 0x000470, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BooleanAND_ReturnValue) == 0x000471, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000478, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000490, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000498, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, K2Node_SwitchEnum_CmpSuccess) == 0x0004B0, "Member 'BP_TrainCarriage_C_TickCollision::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetTransform_BogieTransform_1) == 0x0004C0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetTransform_BogieTransform_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakTransform_Location_1) == 0x000520, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakTransform_Rotation_1) == 0x000538, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakTransform_Scale_1) == 0x000550, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000568, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000580, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BoxTraceMultiForObjects_OutHits_1) == 0x000598, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BoxTraceMultiForObjects_OutHits_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BoxTraceMultiForObjects_ReturnValue_1) == 0x0005A8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BoxTraceMultiForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Length_ReturnValue_4) == 0x0005AC, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Less_IntInt_ReturnValue_4) == 0x0005B0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Array_Get_Item_4) == 0x0005B8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0006A0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0006A1, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Time_1) == 0x0006A4, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Distance_1) == 0x0006A8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Location_1) == 0x0006B0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0006C8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_Normal_1) == 0x0006E0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0006F8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_PhysMat_1) == 0x000710, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitActor_1) == 0x000718, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitComponent_1) == 0x000720, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitBoneName_1) == 0x000728, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_BoneName_1) == 0x000730, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_HitItem_1) == 0x000738, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_ElementIndex_1) == 0x00073C, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_FaceIndex_1) == 0x000740, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_TraceStart_1) == 0x000748, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BreakHitResult_TraceEnd_1) == 0x000760, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000778, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetComponentBounds_Origin) == 0x000790, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetComponentBounds_BoxExtent) == 0x0007A8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetComponentBounds_SphereRadius) == 0x0007C0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0007C8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0007E0, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_IsActorOnIgnoreList_IsOnIgnoreList_1) == 0x0007E1, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_IsActorOnIgnoreList_IsOnIgnoreList_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GetDisplayName_ReturnValue) == 0x0007E8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Not_PreBool_ReturnValue_1) == 0x0007F8, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Concat_StrStr_ReturnValue) == 0x000800, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_BooleanAND_ReturnValue_1) == 0x000810, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, K2Node_MakeStruct_Timeout_5_009A71724E13EC0AD7AB51BD64347213_ImplicitCast) == 0x000814, "Member 'BP_TrainCarriage_C_TickCollision::K2Node_MakeStruct_Timeout_5_009A71724E13EC0AD7AB51BD64347213_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000818, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000820, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_TickCollision, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000828, "Member 'BP_TrainCarriage_C_TickCollision::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.ToggleCarriageDirection
// 0x0010 (0x0010 - 0x0000)
struct BP_TrainCarriage_C_ToggleCarriageDirection final
{
public:
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_ToggleCarriageDirection) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_ToggleCarriageDirection");
static_assert(sizeof(BP_TrainCarriage_C_ToggleCarriageDirection) == 0x000010, "Wrong size on BP_TrainCarriage_C_ToggleCarriageDirection");
static_assert(offsetof(BP_TrainCarriage_C_ToggleCarriageDirection, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_ToggleCarriageDirection::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_ToggleCarriageDirection, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_ToggleCarriageDirection::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.UpdateAnimations
// 0x0038 (0x0038 - 0x0000)
struct BP_TrainCarriage_C_UpdateAnimations final
{
public:
	double                                        CallFunc_GetWheelSpeed_WheelSpeed;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_TrainCarBogie_C*                K2Node_DynamicCast_AsANIMBP_Train_Car_Bogie;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_TrainCarBogie_C*                K2Node_DynamicCast_AsANIMBP_Train_Car_Bogie_1;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_UpdateAnimations) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_UpdateAnimations");
static_assert(sizeof(BP_TrainCarriage_C_UpdateAnimations) == 0x000038, "Wrong size on BP_TrainCarriage_C_UpdateAnimations");
static_assert(offsetof(BP_TrainCarriage_C_UpdateAnimations, CallFunc_GetWheelSpeed_WheelSpeed) == 0x000000, "Member 'BP_TrainCarriage_C_UpdateAnimations::CallFunc_GetWheelSpeed_WheelSpeed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateAnimations, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_UpdateAnimations::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateAnimations, K2Node_DynamicCast_AsANIMBP_Train_Car_Bogie) == 0x000010, "Member 'BP_TrainCarriage_C_UpdateAnimations::K2Node_DynamicCast_AsANIMBP_Train_Car_Bogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateAnimations, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TrainCarriage_C_UpdateAnimations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateAnimations, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000020, "Member 'BP_TrainCarriage_C_UpdateAnimations::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateAnimations, K2Node_DynamicCast_AsANIMBP_Train_Car_Bogie_1) == 0x000028, "Member 'BP_TrainCarriage_C_UpdateAnimations::K2Node_DynamicCast_AsANIMBP_Train_Car_Bogie_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateAnimations, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_TrainCarriage_C_UpdateAnimations::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.UpdateBogieDistances
// 0x0110 (0x0110 - 0x0000)
struct BP_TrainCarriage_C_UpdateBogieDistances final
{
public:
	double                                        StartingTrackDistance;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TrainTrack_C*                       Track;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TrackSplineIndex;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAlignedBogies;                                 // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AB[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_Bogie_C*>                    Param_Bogies;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Invert;                                            // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ErrorDistance;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_TrackPassThroughInfo>        K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AD[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackSpline                         CallFunc_GetTrackSplineByIndex_TrackSpline;        // 0x0050(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetTrackSplineByIndex_ValidTrackSpline;   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AE[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AF[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_Bogie_C*                            CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_TrainTrack_C*                       CallFunc_FindLocationOnTracks_EndTrack;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_TrackSpline                         CallFunc_FindLocationOnTracks_EndTrackSpline;      // 0x00A8(0x0038)(HasGetValueTypeHash)
	double                                        CallFunc_FindLocationOnTracks_EndDistance;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindLocationOnTracks_EndReached;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindLocationOnTracks_InvertedDirOfTravel; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B0[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_TrackPassThroughInfo>        CallFunc_FindLocationOnTracks_TravelInfo;          // 0x00F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B1[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSplineIndex_SplineIndex;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B2[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_UpdateBogieDistances) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_UpdateBogieDistances");
static_assert(sizeof(BP_TrainCarriage_C_UpdateBogieDistances) == 0x000110, "Wrong size on BP_TrainCarriage_C_UpdateBogieDistances");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, StartingTrackDistance) == 0x000000, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::StartingTrackDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, Track) == 0x000008, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::Track' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, TrackSplineIndex) == 0x000010, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::TrackSplineIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, SkipAlignedBogies) == 0x000014, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::SkipAlignedBogies' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, Param_Bogies) == 0x000018, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::Param_Bogies' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, Invert) == 0x000028, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::Invert' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, ErrorDistance) == 0x000030, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::ErrorDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_GetTrackSplineByIndex_TrackSpline) == 0x000050, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_GetTrackSplineByIndex_TrackSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_GetTrackSplineByIndex_ValidTrackSpline) == 0x000088, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_GetTrackSplineByIndex_ValidTrackSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_FindLocationOnTracks_EndTrack) == 0x0000A0, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_FindLocationOnTracks_EndTrack' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_FindLocationOnTracks_EndTrackSpline) == 0x0000A8, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_FindLocationOnTracks_EndTrackSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_FindLocationOnTracks_EndDistance) == 0x0000E0, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_FindLocationOnTracks_EndDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_FindLocationOnTracks_EndReached) == 0x0000E8, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_FindLocationOnTracks_EndReached' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_FindLocationOnTracks_InvertedDirOfTravel) == 0x0000E9, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_FindLocationOnTracks_InvertedDirOfTravel' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_FindLocationOnTracks_TravelInfo) == 0x0000F0, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_FindLocationOnTracks_TravelInfo' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_Not_PreBool_ReturnValue) == 0x000100, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_GetSplineIndex_SplineIndex) == 0x000104, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_GetSplineIndex_SplineIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateBogieDistances, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'BP_TrainCarriage_C_UpdateBogieDistances::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.UpdateCarriageMeshLocations
// 0x0F70 (0x0F70 - 0x0000)
struct BP_TrainCarriage_C_UpdateCarriageMeshLocations final
{
public:
	struct FTransform                             RearBogieTransform;                                // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             AdjustedRearBogieTrans;                            // 0x0060(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             AdjustedFrontBoigeTrans;                           // 0x00C0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_2;            // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_3;            // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0390(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_7;                // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_7;                // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_7;                   // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_8;                // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_8;                // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_8;                   // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B3[0xC];                                     // 0x0564(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0570(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_9;                // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_9;                // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_9;                   // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B4[0x4];                                     // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0690(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B5[0x8];                                     // 0x0708(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0710(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x07B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B6[0x4];                                     // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_10;               // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_10;               // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_10;                  // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_1;              // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0940(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x09A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_11;               // 0x0A00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_11;               // 0x0A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_11;                  // 0x0A30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_12;               // 0x0A48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_12;               // 0x0A60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_12;                  // 0x0A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0A90(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0AF0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0B50(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B7[0x7];                                     // 0x0C39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0C40(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_2;    // 0x0D28(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x0E10(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_3;    // 0x0E70(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0F60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_UpdateCarriageMeshLocations) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_UpdateCarriageMeshLocations");
static_assert(sizeof(BP_TrainCarriage_C_UpdateCarriageMeshLocations) == 0x000F70, "Wrong size on BP_TrainCarriage_C_UpdateCarriageMeshLocations");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, RearBogieTransform) == 0x000000, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::RearBogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, AdjustedRearBogieTrans) == 0x000060, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::AdjustedRearBogieTrans' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, AdjustedFrontBoigeTrans) == 0x0000C0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::AdjustedFrontBoigeTrans' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location) == 0x000120, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation) == 0x000138, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale) == 0x000150, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GetActorScale3D_ReturnValue) == 0x000168, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GetActorScale3D_ReturnValue_1) == 0x000180, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GetActorScale3D_ReturnValue_2) == 0x000198, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GetActorScale3D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GetActorScale3D_ReturnValue_3) == 0x0001B0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GetActorScale3D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_1) == 0x0001C8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_1) == 0x0001E0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_1) == 0x0001F8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_2) == 0x000210, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_2) == 0x000228, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_2) == 0x000240, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000258, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000270, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Add_VectorVector_ReturnValue) == 0x000288, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue) == 0x0002A0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_3) == 0x000300, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_3) == 0x000318, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_3) == 0x000330, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_4) == 0x000348, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_4) == 0x000360, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_4) == 0x000378, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue_1) == 0x000390, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_5) == 0x0003F0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_5) == 0x000408, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_5) == 0x000420, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000438, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000450, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_6) == 0x000468, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_6) == 0x000480, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_6) == 0x000498, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_7) == 0x0004B0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_7) == 0x0004C8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_7) == 0x0004E0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_8) == 0x0004F8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_8) == 0x000510, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_8) == 0x000528, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000540, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Roll) == 0x000558, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Pitch) == 0x00055C, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Yaw) == 0x000560, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue_2) == 0x000570, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0005D0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_9) == 0x0005D8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_9) == 0x0005F0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_9) == 0x000608, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeRotator_ReturnValue) == 0x000620, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Roll_1) == 0x000638, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Pitch_1) == 0x00063C, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Yaw_1) == 0x000640, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000648, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeRotator_ReturnValue_1) == 0x000660, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000678, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue_3) == 0x000690, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0006F0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_SelectTransform_ReturnValue) == 0x000710, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_FindLookAtRotation_ReturnValue) == 0x000770, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_ComposeRotators_ReturnValue) == 0x000788, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_SelectRotator_ReturnValue) == 0x0007A0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0007B8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Roll_2) == 0x0008A0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Pitch_2) == 0x0008A4, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakRotator_Yaw_2) == 0x0008A8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeRotator_ReturnValue_2) == 0x0008B0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_10) == 0x0008C8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_10) == 0x0008E0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_10) == 0x0008F8, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_SelectRotator_ReturnValue_1) == 0x000910, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_SelectRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000928, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue_4) == 0x000940, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue_5) == 0x0009A0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_11) == 0x000A00, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_11) == 0x000A18, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_11) == 0x000A30, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Location_12) == 0x000A48, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Location_12' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Rotation_12) == 0x000A60, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Rotation_12' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_BreakTransform_Scale_12) == 0x000A78, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_BreakTransform_Scale_12' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue_6) == 0x000A90, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeTransform_ReturnValue_7) == 0x000AF0, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000B50, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000C38, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000C40, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_K2_SetWorldTransform_SweepHitResult_2) == 0x000D28, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_K2_SetWorldTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_GetTransform_BogieTransform) == 0x000E10, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_GetTransform_BogieTransform' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_K2_SetWorldTransform_SweepHitResult_3) == 0x000E70, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_K2_SetWorldTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000F58, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateCarriageMeshLocations, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000F60, "Member 'BP_TrainCarriage_C_UpdateCarriageMeshLocations::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.UpdateSettingsFromParent
// 0x0002 (0x0002 - 0x0000)
struct BP_TrainCarriage_C_UpdateSettingsFromParent final
{
public:
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_UpdateSettingsFromParent) == 0x000001, "Wrong alignment on BP_TrainCarriage_C_UpdateSettingsFromParent");
static_assert(sizeof(BP_TrainCarriage_C_UpdateSettingsFromParent) == 0x000002, "Wrong size on BP_TrainCarriage_C_UpdateSettingsFromParent");
static_assert(offsetof(BP_TrainCarriage_C_UpdateSettingsFromParent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_UpdateSettingsFromParent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateSettingsFromParent, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_TrainCarriage_C_UpdateSettingsFromParent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.UpdateStartingDistanceRelativeToParent
// 0x0C80 (0x0C80 - 0x0000)
struct BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent final
{
public:
	class USphereComponent*                       ChildHitch;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ParentHitch;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        TargetDistance;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChildHitchDistance;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ParentHitchDistance;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_Bogie_C*                            ParentBogie;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0170(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x01D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x02B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_3;     // 0x0310(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_1;      // 0x0370(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_TrackSpline                         CallFunc_GetTrackSplineByIndex_TrackSpline;        // 0x0458(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetTrackSplineByIndex_ValidTrackSpline;   // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B9[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_4;     // 0x04B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BA[0x8];                                     // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_5;     // 0x0530(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BB[0x8];                                     // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_2;      // 0x05A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BC[0x8];                                     // 0x0668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_6;     // 0x0670(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BD[0x8];                                     // 0x06D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_7;     // 0x06E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_3;      // 0x0740(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_7;                          // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BE[0x8];                                     // 0x0828(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_8;     // 0x0830(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_9;     // 0x0890(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_4;      // 0x08F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0950(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0968(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0980(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_8;                          // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_8;                          // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_8;                          // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_9;                          // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_9;                          // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_9;                          // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BF[0x8];                                     // 0x09D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_10;    // 0x09E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_11;    // 0x0A40(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_5;      // 0x0AA0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_10;                         // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_10;                         // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_10;                         // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0B18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0B48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_11;                         // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_11;                         // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_11;                         // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_6;                        // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_TrackPassThroughInfo>        K2Node_MakeArray_Array;                            // 0x0B98(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TrainTrack_C*                       CallFunc_FindLocationOnTracks_EndTrack;            // 0x0BB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_TrackSpline                         CallFunc_FindLocationOnTracks_EndTrackSpline;      // 0x0BB8(0x0038)(HasGetValueTypeHash)
	double                                        CallFunc_FindLocationOnTracks_EndDistance;         // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindLocationOnTracks_EndReached;          // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindLocationOnTracks_InvertedDirOfTravel; // 0x0BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C0[0x6];                                     // 0x0BFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_TrackPassThroughInfo>        CallFunc_FindLocationOnTracks_TravelInfo;          // 0x0C00(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSplineIndex_SplineIndex;               // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C1[0x4];                                     // 0x0C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_4;             // 0x0C18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0C28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C2[0x7];                                     // 0x0C39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0C40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0C50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0C60(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent");
static_assert(sizeof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent) == 0x000C80, "Wrong size on BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, ChildHitch) == 0x000000, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::ChildHitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, ParentHitch) == 0x000008, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::ParentHitch' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, TargetDistance) == 0x000010, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::TargetDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, ChildHitchDistance) == 0x000018, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::ChildHitchDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, ParentHitchDistance) == 0x000020, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::ParentHitchDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, ParentBogie) == 0x000028, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::ParentBogie' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetDisplayName_ReturnValue_1) == 0x000048, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetDisplayName_ReturnValue_2) == 0x000058, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetDisplayName_ReturnValue_3) == 0x000088, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X) == 0x0000F8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y) == 0x000100, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z) == 0x000108, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000110, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000170, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_MakeRelativeTransform_ReturnValue) == 0x0001D0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Location) == 0x000230, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Rotation) == 0x000248, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Scale) == 0x000260, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000278, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_1) == 0x000280, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_1) == 0x000288, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_1) == 0x000290, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000298, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Abs_ReturnValue) == 0x0002A8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x0002B0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_3) == 0x000310, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_MakeRelativeTransform_ReturnValue_1) == 0x000370, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_MakeRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Location_1) == 0x0003D0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Rotation_1) == 0x0003E8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Scale_1) == 0x000400, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_2) == 0x000418, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_2) == 0x000420, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_2) == 0x000428, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_3) == 0x000430, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_3) == 0x000438, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_3) == 0x000440, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000448, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Abs_ReturnValue_1) == 0x000450, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetTrackSplineByIndex_TrackSpline) == 0x000458, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetTrackSplineByIndex_TrackSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetTrackSplineByIndex_ValidTrackSpline) == 0x000490, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetTrackSplineByIndex_ValidTrackSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_4) == 0x000498, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_4) == 0x0004A0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_4) == 0x0004A8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_4) == 0x0004B0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Abs_ReturnValue_2) == 0x000510, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000518, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000520, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_5) == 0x000530, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000590, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_MakeRelativeTransform_ReturnValue_2) == 0x0005A0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_MakeRelativeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Location_2) == 0x000600, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Rotation_2) == 0x000618, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Scale_2) == 0x000630, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_5) == 0x000648, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_5) == 0x000650, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_5) == 0x000658, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000660, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_6) == 0x000670, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Abs_ReturnValue_3) == 0x0006D0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_7) == 0x0006E0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_MakeRelativeTransform_ReturnValue_3) == 0x000740, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_MakeRelativeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Location_3) == 0x0007A0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Rotation_3) == 0x0007B8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Scale_3) == 0x0007D0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_6) == 0x0007E8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_6) == 0x0007F0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_6) == 0x0007F8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_7) == 0x000800, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_7) == 0x000808, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_7) == 0x000810, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000818, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Abs_ReturnValue_4) == 0x000820, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_8) == 0x000830, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_9) == 0x000890, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_MakeRelativeTransform_ReturnValue_4) == 0x0008F0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_MakeRelativeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Location_4) == 0x000950, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Rotation_4) == 0x000968, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Scale_4) == 0x000980, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_8) == 0x000998, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_8) == 0x0009A0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_8) == 0x0009A8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_9) == 0x0009B0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_9) == 0x0009B8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_9) == 0x0009C0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0009C8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Abs_ReturnValue_5) == 0x0009D0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_10) == 0x0009E0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_K2_GetComponentToWorld_ReturnValue_11) == 0x000A40, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_K2_GetComponentToWorld_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_MakeRelativeTransform_ReturnValue_5) == 0x000AA0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_MakeRelativeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_10) == 0x000B00, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_10) == 0x000B08, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_10) == 0x000B10, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Location_5) == 0x000B18, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Rotation_5) == 0x000B30, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakTransform_Scale_5) == 0x000B48, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_X_11) == 0x000B60, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Y_11) == 0x000B68, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_BreakVector_Z_11) == 0x000B70, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x000B78, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Abs_ReturnValue_6) == 0x000B80, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Abs_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000B88, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000B90, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, K2Node_MakeArray_Array) == 0x000B98, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000BA8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_FindLocationOnTracks_EndTrack) == 0x000BB0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_FindLocationOnTracks_EndTrack' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_FindLocationOnTracks_EndTrackSpline) == 0x000BB8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_FindLocationOnTracks_EndTrackSpline' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_FindLocationOnTracks_EndDistance) == 0x000BF0, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_FindLocationOnTracks_EndDistance' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_FindLocationOnTracks_EndReached) == 0x000BF8, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_FindLocationOnTracks_EndReached' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_FindLocationOnTracks_InvertedDirOfTravel) == 0x000BF9, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_FindLocationOnTracks_InvertedDirOfTravel' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_FindLocationOnTracks_TravelInfo) == 0x000C00, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_FindLocationOnTracks_TravelInfo' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetSplineIndex_SplineIndex) == 0x000C10, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetSplineIndex_SplineIndex' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_GetDisplayName_ReturnValue_4) == 0x000C18, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_GetDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Conv_IntToString_ReturnValue) == 0x000C28, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000C38, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000C40, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000C50, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000C60, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000C70, "Member 'BP_TrainCarriage_C_UpdateStartingDistanceRelativeToParent::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.UserConstructionScript
// 0x0003 (0x0003 - 0x0000)
struct BP_TrainCarriage_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_TrainCarriage_C_UserConstructionScript");
static_assert(sizeof(BP_TrainCarriage_C_UserConstructionScript) == 0x000003, "Wrong size on BP_TrainCarriage_C_UserConstructionScript");
static_assert(offsetof(BP_TrainCarriage_C_UserConstructionScript, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'BP_TrainCarriage_C_UserConstructionScript::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UserConstructionScript, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000001, "Member 'BP_TrainCarriage_C_UserConstructionScript::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_TrainCarriage_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.WarpCarriageToStartingPoint
// 0x00B0 (0x00B0 - 0x0000)
struct BP_TrainCarriage_C_WarpCarriageToStartingPoint final
{
public:
	bool                                          WarpChildren;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C3[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_BogieTransform;              // 0x0050(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_WarpCarriageToStartingPoint) == 0x000010, "Wrong alignment on BP_TrainCarriage_C_WarpCarriageToStartingPoint");
static_assert(sizeof(BP_TrainCarriage_C_WarpCarriageToStartingPoint) == 0x0000B0, "Wrong size on BP_TrainCarriage_C_WarpCarriageToStartingPoint");
static_assert(offsetof(BP_TrainCarriage_C_WarpCarriageToStartingPoint, WarpChildren) == 0x000000, "Member 'BP_TrainCarriage_C_WarpCarriageToStartingPoint::WarpChildren' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_WarpCarriageToStartingPoint, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'BP_TrainCarriage_C_WarpCarriageToStartingPoint::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_WarpCarriageToStartingPoint, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_TrainCarriage_C_WarpCarriageToStartingPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_WarpCarriageToStartingPoint, CallFunc_BreakTransform_Location) == 0x000008, "Member 'BP_TrainCarriage_C_WarpCarriageToStartingPoint::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_WarpCarriageToStartingPoint, CallFunc_BreakTransform_Rotation) == 0x000020, "Member 'BP_TrainCarriage_C_WarpCarriageToStartingPoint::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_WarpCarriageToStartingPoint, CallFunc_BreakTransform_Scale) == 0x000038, "Member 'BP_TrainCarriage_C_WarpCarriageToStartingPoint::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_WarpCarriageToStartingPoint, CallFunc_GetTransform_BogieTransform) == 0x000050, "Member 'BP_TrainCarriage_C_WarpCarriageToStartingPoint::CallFunc_GetTransform_BogieTransform' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.GetWheelSpeed
// 0x0020 (0x0020 - 0x0000)
struct BP_TrainCarriage_C_GetWheelSpeed final
{
public:
	double                                        WheelSpeed;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C4[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_GetWheelSpeed) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_GetWheelSpeed");
static_assert(sizeof(BP_TrainCarriage_C_GetWheelSpeed) == 0x000020, "Wrong size on BP_TrainCarriage_C_GetWheelSpeed");
static_assert(offsetof(BP_TrainCarriage_C_GetWheelSpeed, WheelSpeed) == 0x000000, "Member 'BP_TrainCarriage_C_GetWheelSpeed::WheelSpeed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetWheelSpeed, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_TrainCarriage_C_GetWheelSpeed::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetWheelSpeed, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_TrainCarriage_C_GetWheelSpeed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetWheelSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_TrainCarriage_C_GetWheelSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_GetWheelSpeed, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_TrainCarriage_C_GetWheelSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.IsActorOnIgnoreList
// 0x0038 (0x0038 - 0x0000)
struct BP_TrainCarriage_C_IsActorOnIgnoreList final
{
public:
	class AActor*                                 ActorToCheck;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnIgnoreList;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C5[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C6[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TrackTimedIgnore                    CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_IsActorOnIgnoreList) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_IsActorOnIgnoreList");
static_assert(sizeof(BP_TrainCarriage_C_IsActorOnIgnoreList) == 0x000038, "Wrong size on BP_TrainCarriage_C_IsActorOnIgnoreList");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, ActorToCheck) == 0x000000, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::ActorToCheck' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, IsOnIgnoreList) == 0x000008, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::IsOnIgnoreList' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsActorOnIgnoreList, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_TrainCarriage_C_IsActorOnIgnoreList::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.IsDirectionOfTravelInverted
// 0x0018 (0x0018 - 0x0000)
struct BP_TrainCarriage_C_IsDirectionOfTravelInverted final
{
public:
	E_TrackSplineLocation                         ConnectionLocation;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInverted;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_IsDirectionOfTravelInverted) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_IsDirectionOfTravelInverted");
static_assert(sizeof(BP_TrainCarriage_C_IsDirectionOfTravelInverted) == 0x000018, "Wrong size on BP_TrainCarriage_C_IsDirectionOfTravelInverted");
static_assert(offsetof(BP_TrainCarriage_C_IsDirectionOfTravelInverted, ConnectionLocation) == 0x000000, "Member 'BP_TrainCarriage_C_IsDirectionOfTravelInverted::ConnectionLocation' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsDirectionOfTravelInverted, Speed) == 0x000008, "Member 'BP_TrainCarriage_C_IsDirectionOfTravelInverted::Speed' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsDirectionOfTravelInverted, IsInverted) == 0x000010, "Member 'BP_TrainCarriage_C_IsDirectionOfTravelInverted::IsInverted' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsDirectionOfTravelInverted, ReturnValue) == 0x000011, "Member 'BP_TrainCarriage_C_IsDirectionOfTravelInverted::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsDirectionOfTravelInverted, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000012, "Member 'BP_TrainCarriage_C_IsDirectionOfTravelInverted::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsDirectionOfTravelInverted, K2Node_SwitchEnum_CmpSuccess) == 0x000013, "Member 'BP_TrainCarriage_C_IsDirectionOfTravelInverted::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrainCarriage_C_IsDirectionOfTravelInverted, K2Node_SwitchEnum_CmpSuccess_1) == 0x000014, "Member 'BP_TrainCarriage_C_IsDirectionOfTravelInverted::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_TrainCarriage.BP_TrainCarriage_C.PrintDebugString
// 0x0010 (0x0010 - 0x0000)
struct BP_TrainCarriage_C_PrintDebugString final
{
public:
	class FString                                 InfoString;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrainCarriage_C_PrintDebugString) == 0x000008, "Wrong alignment on BP_TrainCarriage_C_PrintDebugString");
static_assert(sizeof(BP_TrainCarriage_C_PrintDebugString) == 0x000010, "Wrong size on BP_TrainCarriage_C_PrintDebugString");
static_assert(offsetof(BP_TrainCarriage_C_PrintDebugString, InfoString) == 0x000000, "Member 'BP_TrainCarriage_C_PrintDebugString::InfoString' has a wrong offset!");

}

