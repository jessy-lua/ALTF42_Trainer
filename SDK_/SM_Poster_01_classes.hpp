#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SM_Poster_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SM_Poster_01.SM_Poster_01_C
// 0x0020 (0x02B8 - 0x0298)
class ASM_Poster_01_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_FPCharacterBase_C*                  NewVar_0;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SM_Poster_01(int32 EntryPoint);
	void InpActEvt_E_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SM_Poster_01_C">();
	}
	static class ASM_Poster_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASM_Poster_01_C>();
	}
};
static_assert(alignof(ASM_Poster_01_C) == 0x000008, "Wrong alignment on ASM_Poster_01_C");
static_assert(sizeof(ASM_Poster_01_C) == 0x0002B8, "Wrong size on ASM_Poster_01_C");
static_assert(offsetof(ASM_Poster_01_C, UberGraphFrame) == 0x000298, "Member 'ASM_Poster_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASM_Poster_01_C, Sphere) == 0x0002A0, "Member 'ASM_Poster_01_C::Sphere' has a wrong offset!");
static_assert(offsetof(ASM_Poster_01_C, StaticMesh) == 0x0002A8, "Member 'ASM_Poster_01_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ASM_Poster_01_C, NewVar_0) == 0x0002B0, "Member 'ASM_Poster_01_C::NewVar_0' has a wrong offset!");

}

