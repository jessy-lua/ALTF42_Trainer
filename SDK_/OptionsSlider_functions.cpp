#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsSlider

#include "Basic.hpp"

#include "OptionsSlider_classes.hpp"
#include "OptionsSlider_parameters.hpp"


namespace SDK
{

// Function OptionsSlider.OptionsSlider_C.BndEvt__HoverButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UOptionsSlider_C::BndEvt__HoverButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "BndEvt__HoverButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");

	Params::OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderHandle_K2Node_ComponentBoundEvent_2_OnMouseCaptureEndEvent__DelegateSignature
// (BlueprintEvent)

void UOptionsSlider_C::BndEvt__SliderHandle_K2Node_ComponentBoundEvent_2_OnMouseCaptureEndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "BndEvt__SliderHandle_K2Node_ComponentBoundEvent_2_OnMouseCaptureEndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderHandle_K2Node_ComponentBoundEvent_3_OnMouseCaptureBeginEvent__DelegateSignature
// (BlueprintEvent)

void UOptionsSlider_C::BndEvt__SliderHandle_K2Node_ComponentBoundEvent_3_OnMouseCaptureBeginEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "BndEvt__SliderHandle_K2Node_ComponentBoundEvent_3_OnMouseCaptureBeginEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature");

	Params::OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOptionsSlider_C::BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature");

	Params::OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.ConvertInputToNumeric
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ModifiedText                                           (Parm, OutParm)

void UOptionsSlider_C::ConvertInputToNumeric(const class FText& InText, class FText* ModifiedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "ConvertInputToNumeric");

	Params::OptionsSlider_C_ConvertInputToNumeric Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);

	if (ModifiedText != nullptr)
		*ModifiedText = std::move(Parms.ModifiedText);
}


// Function OptionsSlider.OptionsSlider_C.ExecuteUbergraph_OptionsSlider
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::ExecuteUbergraph_OptionsSlider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "ExecuteUbergraph_OptionsSlider");

	Params::OptionsSlider_C_ExecuteUbergraph_OptionsSlider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.GetDefaultValueNormalized
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UOptionsSlider_C::GetDefaultValueNormalized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "GetDefaultValueNormalized");

	Params::OptionsSlider_C_GetDefaultValueNormalized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OptionsSlider.OptionsSlider_C.GetScaledValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnlyByMaxValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::GetScaledValue(double InValue, double* OnlyByMaxValue, double* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "GetScaledValue");

	Params::OptionsSlider_C_GetScaledValue Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (OnlyByMaxValue != nullptr)
		*OnlyByMaxValue = Parms.OnlyByMaxValue;

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function OptionsSlider.OptionsSlider_C.IncrementSlider
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InIncrementValue                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::IncrementSlider(double InIncrementValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "IncrementSlider");

	Params::OptionsSlider_C_IncrementSlider Parms{};

	Parms.InIncrementValue = InIncrementValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.OnGlobalSettingsApply
// (BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::OnGlobalSettingsApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "OnGlobalSettingsApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.OnOptionChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::OnOptionChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "OnOptionChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.OnSetHoverEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsHovered                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::OnSetHoverEffect(bool bIsHovered, bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "OnSetHoverEffect");

	Params::OptionsSlider_C_OnSetHoverEffect Parms{};

	Parms.bIsHovered = bIsHovered;
	Parms.bPlaySound = bPlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.OnStartChangeCooldown
// (BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::OnStartChangeCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "OnStartChangeCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.SetGlobalSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::SetGlobalSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "SetGlobalSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.SetHoverEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::SetHoverEffect(bool IsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "SetHoverEffect");

	Params::OptionsSlider_C_SetHoverEffect Parms{};

	Parms.IsOn = IsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.SetSliderHandleValue
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::SetSliderHandleValue(double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "SetSliderHandleValue");

	Params::OptionsSlider_C_SetSliderHandleValue Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.Setup Slider Initial
// (Private, BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::Setup_Slider_Initial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "Setup Slider Initial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.SetupOptionNameText
// (Public, BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::SetupOptionNameText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "SetupOptionNameText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.SetupSliderFromMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OptionChangedIgnore                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::SetupSliderFromMenu(double InValue, bool OptionChangedIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "SetupSliderFromMenu");

	Params::OptionsSlider_C_SetupSliderFromMenu Parms{};

	Parms.InValue = InValue;
	Parms.OptionChangedIgnore = OptionChangedIgnore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.Slider_RefreshEvent
// (BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::Slider_RefreshEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "Slider_RefreshEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.UpdateSlider
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOptionChangeIgnore                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::UpdateSlider(double InValue, bool bPlaySound, bool bOptionChangeIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "UpdateSlider");

	Params::OptionsSlider_C_UpdateSlider Parms{};

	Parms.InValue = InValue;
	Parms.bPlaySound = bPlaySound;
	Parms.bOptionChangeIgnore = bOptionChangeIgnore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.UpdateSliderFromMouse
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::UpdateSliderFromMouse(double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "UpdateSliderFromMouse");

	Params::OptionsSlider_C_UpdateSliderFromMouse Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsSlider.OptionsSlider_C.OnPressedLeft
// (BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::OnPressedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "OnPressedLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.OnPressedRight
// (BlueprintCallable, BlueprintEvent)

void UOptionsSlider_C::OnPressedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "OnPressedRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsSlider.OptionsSlider_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsSlider_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsSlider_C", "PreConstruct");

	Params::OptionsSlider_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

