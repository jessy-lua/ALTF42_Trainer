#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALTF42_InGame_PC_Loco

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ALTF42_InGame_PC_Loco.ALTF42_InGame_PC_Loco_C
// 0x0038 (0x0890 - 0x0858)
class AALTF42_InGame_PC_Loco_C final : public APlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0858(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_MenuControllerComponent_C*          BP_MenuControllerComponent;                        // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInputMappingContext*                   Mapping_Context;                                   // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 ALTF42_GI;                                         // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BaseTurnRate;                                      // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseLookUpRate;                                    // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGM_GamepadBeingUsed;                             // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SteamOverlay_Check;                                // 0x0889(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SteamOverlay_ComboStep01_Check;                    // 0x088A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vibration_Enabled;                                 // 0x088B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Tarzan_Running_;                                   // 0x088C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ALTF42_InGame_PC_Loco(int32 EntryPoint);
	void InpActEvt_IA_Pause_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Select_Inventory_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void KeyBoardOrPad_Input_Check(bool Param_IsGM_GamepadBeingUsed);
	void Open_EndingSkech();
	void Open_Tooltip();
	void ReceiveBeginPlay();
	void ReceivePossess(class APawn* PossessedPawn);
	void ReceiveTick(float DeltaSeconds);
	void TarzanRunning_Event(bool Param_Tarzan_Running_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ALTF42_InGame_PC_Loco_C">();
	}
	static class AALTF42_InGame_PC_Loco_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AALTF42_InGame_PC_Loco_C>();
	}
};
static_assert(alignof(AALTF42_InGame_PC_Loco_C) == 0x000008, "Wrong alignment on AALTF42_InGame_PC_Loco_C");
static_assert(sizeof(AALTF42_InGame_PC_Loco_C) == 0x000890, "Wrong size on AALTF42_InGame_PC_Loco_C");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, UberGraphFrame) == 0x000858, "Member 'AALTF42_InGame_PC_Loco_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, BP_MenuControllerComponent) == 0x000860, "Member 'AALTF42_InGame_PC_Loco_C::BP_MenuControllerComponent' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, Mapping_Context) == 0x000868, "Member 'AALTF42_InGame_PC_Loco_C::Mapping_Context' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, ALTF42_GI) == 0x000870, "Member 'AALTF42_InGame_PC_Loco_C::ALTF42_GI' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, BaseTurnRate) == 0x000878, "Member 'AALTF42_InGame_PC_Loco_C::BaseTurnRate' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, BaseLookUpRate) == 0x000880, "Member 'AALTF42_InGame_PC_Loco_C::BaseLookUpRate' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, IsGM_GamepadBeingUsed) == 0x000888, "Member 'AALTF42_InGame_PC_Loco_C::IsGM_GamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, SteamOverlay_Check) == 0x000889, "Member 'AALTF42_InGame_PC_Loco_C::SteamOverlay_Check' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, SteamOverlay_ComboStep01_Check) == 0x00088A, "Member 'AALTF42_InGame_PC_Loco_C::SteamOverlay_ComboStep01_Check' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, Vibration_Enabled) == 0x00088B, "Member 'AALTF42_InGame_PC_Loco_C::Vibration_Enabled' has a wrong offset!");
static_assert(offsetof(AALTF42_InGame_PC_Loco_C, Tarzan_Running_) == 0x00088C, "Member 'AALTF42_InGame_PC_Loco_C::Tarzan_Running_' has a wrong offset!");

}

