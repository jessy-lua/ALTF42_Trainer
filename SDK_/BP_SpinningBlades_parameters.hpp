#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpinningBlades

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SpinningBlades.BP_SpinningBlades_C.BaseMatOverride
// 0x0010 (0x0010 - 0x0000)
struct BP_SpinningBlades_C_BaseMatOverride final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpinningBlades_C_BaseMatOverride) == 0x000008, "Wrong alignment on BP_SpinningBlades_C_BaseMatOverride");
static_assert(sizeof(BP_SpinningBlades_C_BaseMatOverride) == 0x000010, "Wrong size on BP_SpinningBlades_C_BaseMatOverride");
static_assert(offsetof(BP_SpinningBlades_C_BaseMatOverride, Material) == 0x000000, "Member 'BP_SpinningBlades_C_BaseMatOverride::Material' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BaseMatOverride, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SpinningBlades_C_BaseMatOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SpinningBlades.BP_SpinningBlades_C.BladesMatOverride
// 0x0010 (0x0010 - 0x0000)
struct BP_SpinningBlades_C_BladesMatOverride final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpinningBlades_C_BladesMatOverride) == 0x000008, "Wrong alignment on BP_SpinningBlades_C_BladesMatOverride");
static_assert(sizeof(BP_SpinningBlades_C_BladesMatOverride) == 0x000010, "Wrong size on BP_SpinningBlades_C_BladesMatOverride");
static_assert(offsetof(BP_SpinningBlades_C_BladesMatOverride, Material) == 0x000000, "Member 'BP_SpinningBlades_C_BladesMatOverride::Material' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BladesMatOverride, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SpinningBlades_C_BladesMatOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SpinningBlades.BP_SpinningBlades_C.BladeSMOverride
// 0x0010 (0x0010 - 0x0000)
struct BP_SpinningBlades_C_BladeSMOverride final
{
public:
	class UStaticMesh*                            NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpinningBlades_C_BladeSMOverride) == 0x000008, "Wrong alignment on BP_SpinningBlades_C_BladeSMOverride");
static_assert(sizeof(BP_SpinningBlades_C_BladeSMOverride) == 0x000010, "Wrong size on BP_SpinningBlades_C_BladeSMOverride");
static_assert(offsetof(BP_SpinningBlades_C_BladeSMOverride, NewMesh) == 0x000000, "Member 'BP_SpinningBlades_C_BladeSMOverride::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BladeSMOverride, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SpinningBlades_C_BladeSMOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BladeSMOverride, CallFunc_SetStaticMesh_ReturnValue) == 0x000009, "Member 'BP_SpinningBlades_C_BladeSMOverride::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_SpinningBlades.BP_SpinningBlades_C.BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_SpinningBlades.BP_SpinningBlades_C.ExecuteUbergraph_BP_SpinningBlades
// 0x05A0 (0x05A0 - 0x0000)
struct BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B2[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0050(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B3[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B4[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult_1;  // 0x0280(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class UInstancedStaticMeshComponent*>  K2Node_MakeArray_Array;                            // 0x0368(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x03A8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B5[0x2];                                     // 0x0492(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B6[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0510(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B7[0x4];                                     // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_1;              // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B8[0x3];                                     // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B9[0x4];                                     // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BA[0x4];                                     // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades) == 0x000008, "Wrong alignment on BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades");
static_assert(sizeof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades) == 0x0005A0, "Wrong size on BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, EntryPoint) == 0x000000, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000020, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_CustomEvent_OverlappedComponent) == 0x000030, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_CustomEvent_OtherActor) == 0x000038, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_CustomEvent_OtherComp) == 0x000040, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_CustomEvent_OtherBodyIndex) == 0x000048, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_CustomEvent_bFromSweep) == 0x00004C, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_CustomEvent_SweepResult) == 0x000050, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_Event_DeltaSeconds) == 0x000138, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BooleanAND_ReturnValue) == 0x00013C, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_MakeRotator_ReturnValue) == 0x000148, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000160, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000248, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000250, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000258, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_DynamicCast_bSuccess) == 0x000260, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_MakeRotator_ReturnValue_1) == 0x000268, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_K2_AddRelativeRotation_SweepHitResult_1) == 0x000280, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_K2_AddRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_MakeArray_Array) == 0x000368, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_ComponentBoundEvent_HitComponent) == 0x000378, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_ComponentBoundEvent_OtherActor) == 0x000380, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_ComponentBoundEvent_OtherComp) == 0x000388, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000390, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_ComponentBoundEvent_Hit) == 0x0003A8, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_bBlockingHit) == 0x000490, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_bInitialOverlap) == 0x000491, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_Time) == 0x000494, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_Distance) == 0x000498, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_Location) == 0x0004A0, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_ImpactPoint) == 0x0004B8, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_Normal) == 0x0004D0, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_ImpactNormal) == 0x0004E8, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_PhysMat) == 0x000500, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_HitActor) == 0x000508, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_HitComponent) == 0x000510, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_HitBoneName) == 0x000518, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_BoneName) == 0x000520, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_HitItem) == 0x000528, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_ElementIndex) == 0x00052C, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_FaceIndex) == 0x000530, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_TraceStart) == 0x000538, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_BreakHitResult_TraceEnd) == 0x000550, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_DynamicCast_AsALTF4_Loco_BP_1) == 0x000568, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_DynamicCast_AsALTF4_Loco_BP_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, K2Node_DynamicCast_bSuccess_1) == 0x000570, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Delay_Duration_ImplicitCast) == 0x000574, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000578, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000580, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000588, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000590, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000598, "Member 'BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function BP_SpinningBlades.BP_SpinningBlades_C.HittedSomething
// 0x0108 (0x0108 - 0x0000)
struct BP_SpinningBlades_C_HittedSomething final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BB[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SpinningBlades_C_HittedSomething) == 0x000008, "Wrong alignment on BP_SpinningBlades_C_HittedSomething");
static_assert(sizeof(BP_SpinningBlades_C_HittedSomething) == 0x000108, "Wrong size on BP_SpinningBlades_C_HittedSomething");
static_assert(offsetof(BP_SpinningBlades_C_HittedSomething, OverlappedComponent) == 0x000000, "Member 'BP_SpinningBlades_C_HittedSomething::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_HittedSomething, OtherActor) == 0x000008, "Member 'BP_SpinningBlades_C_HittedSomething::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_HittedSomething, OtherComp) == 0x000010, "Member 'BP_SpinningBlades_C_HittedSomething::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_HittedSomething, OtherBodyIndex) == 0x000018, "Member 'BP_SpinningBlades_C_HittedSomething::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_HittedSomething, bFromSweep) == 0x00001C, "Member 'BP_SpinningBlades_C_HittedSomething::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_HittedSomething, SweepResult) == 0x000020, "Member 'BP_SpinningBlades_C_HittedSomething::SweepResult' has a wrong offset!");

// Function BP_SpinningBlades.BP_SpinningBlades_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SpinningBlades_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpinningBlades_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SpinningBlades_C_ReceiveTick");
static_assert(sizeof(BP_SpinningBlades_C_ReceiveTick) == 0x000004, "Wrong size on BP_SpinningBlades_C_ReceiveTick");
static_assert(offsetof(BP_SpinningBlades_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SpinningBlades_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SpinningBlades.BP_SpinningBlades_C.UserConstructionScript
// 0x0410 (0x0410 - 0x0000)
struct BP_SpinningBlades_C_UserConstructionScript final
{
public:
	double                                        R;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min_1;                     // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max_1;                     // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue_1;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BC[0x8];                                     // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BD[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41BE[0x8];                                     // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41BF[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue;                 // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0310(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C0[0x3];                                     // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpinningBlades_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_SpinningBlades_C_UserConstructionScript");
static_assert(sizeof(BP_SpinningBlades_C_UserConstructionScript) == 0x000410, "Wrong size on BP_SpinningBlades_C_UserConstructionScript");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, R) == 0x000000, "Member 'BP_SpinningBlades_C_UserConstructionScript::R' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, Angle) == 0x000008, "Member 'BP_SpinningBlades_C_UserConstructionScript::Angle' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, Temp_int_Variable) == 0x000010, "Member 'BP_SpinningBlades_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_GetLocalBounds_Min) == 0x000018, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_GetLocalBounds_Max) == 0x000030, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_GetLocalBounds_Min_1) == 0x000048, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_GetLocalBounds_Min_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_GetLocalBounds_Max_1) == 0x000060, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_GetLocalBounds_Max_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000078, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Multiply_VectorInt_ReturnValue_1) == 0x000090, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Multiply_VectorInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0000D8, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x0000F0, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000108, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000110, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000118, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, K2Node_MathExpression_ReturnValue) == 0x000120, "Member 'BP_SpinningBlades_C_UserConstructionScript::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_GetRelativeTransform_ReturnValue) == 0x000130, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000190, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x0001A8, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x0001C0, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_DegSin_ReturnValue) == 0x0001D8, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_DegCos_ReturnValue) == 0x0001E0, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001E8, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001F0, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x0001F8, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000210, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000228, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000240, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000244, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000248, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000250, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000258, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000260, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000268, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_ComposeRotators_ReturnValue) == 0x000280, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0002A0, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_AddInstance_ReturnValue) == 0x000300, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000308, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000310, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0003F8, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x0003FC, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpinningBlades_C_UserConstructionScript, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000400, "Member 'BP_SpinningBlades_C_UserConstructionScript::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

}

