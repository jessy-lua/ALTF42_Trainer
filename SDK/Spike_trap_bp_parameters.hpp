#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Spike_trap_bp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function spike_trap_bp.spike_trap_bp_C.BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function spike_trap_bp.spike_trap_bp_C.BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Spike_trap_bp_C_BndEvt__spike_trap_bp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function spike_trap_bp.spike_trap_bp_C.ExecuteUbergraph_spike_trap_bp
// 0x04C0 (0x04C0 - 0x0000)
struct Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357C[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_InGame_PC_Loco_C*               K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357E[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0048(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357F[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0140(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3580[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02A8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3581[0x6];                                     // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x03B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp) == 0x000008, "Wrong alignment on Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp");
static_assert(sizeof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp) == 0x0004C0, "Wrong size on Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, EntryPoint) == 0x000000, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::EntryPoint' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco) == 0x000018, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000028, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000040, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000044, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000048, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000130, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000138, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000140, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000228, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_BreakVector_X) == 0x000240, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_BreakVector_Y) == 0x000248, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_BreakVector_Z) == 0x000250, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_BreakVector_X_1) == 0x000258, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_BreakVector_Y_1) == 0x000260, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_BreakVector_Z_1) == 0x000268, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_MakeVector_ReturnValue) == 0x000270, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000288, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OtherActor) == 0x000290, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OtherComp) == 0x000298, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002A0, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002A4, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_ComponentBoundEvent_SweepResult) == 0x0002A8, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000390, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, K2Node_DynamicCast_bSuccess_1) == 0x000398, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, Temp_bool_IsClosed_Variable_1) == 0x000399, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_VLerp_ReturnValue) == 0x0003A0, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0003B8, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0004A0, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0004A8, "Member 'Spike_trap_bp_C_ExecuteUbergraph_spike_trap_bp::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function spike_trap_bp.spike_trap_bp_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct Spike_trap_bp_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Spike_trap_bp_C_UserConstructionScript) == 0x000008, "Wrong alignment on Spike_trap_bp_C_UserConstructionScript");
static_assert(sizeof(Spike_trap_bp_C_UserConstructionScript) == 0x000018, "Wrong size on Spike_trap_bp_C_UserConstructionScript");
static_assert(offsetof(Spike_trap_bp_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'Spike_trap_bp_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

