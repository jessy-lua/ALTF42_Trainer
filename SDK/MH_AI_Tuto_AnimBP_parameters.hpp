#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MH_AI_Tuto_AnimBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "VelocityBlend_structs.hpp"
#include "MovementDirection_structs.hpp"
#include "LeanAmount_structs.hpp"
#include "TurnInPlace_Asset_structs.hpp"
#include "DynamicMontageParams_structs.hpp"
#include "RotateInPlace_Asset_structs.hpp"
#include "AI_StepTalk_WhoOrWhere_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "ALS_RotationMode_structs.hpp"
#include "ALS_MovementState_structs.hpp"
#include "ALS_MovementAction_structs.hpp"
#include "ALS_Stance_structs.hpp"
#include "ALS_ViewMode_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "GroundedEntryState_structs.hpp"


namespace SDK::Params
{

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.(CLF) CycleBlending
// 0x0070 (0x0070 - 0x0000)
struct MH_AI_Tuto_AnimBP_C__CLF__CycleBlending final
{
public:
	struct FPoseLink                              F;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LF;                                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LB;                                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RF;                                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RB;                                                // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param__CLF__CycleBlending;                         // 0x0060(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C__CLF__CycleBlending");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending) == 0x000070, "Wrong size on MH_AI_Tuto_AnimBP_C__CLF__CycleBlending");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending, F) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C__CLF__CycleBlending::F' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending, B) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C__CLF__CycleBlending::B' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending, LF) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C__CLF__CycleBlending::LF' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending, LB) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C__CLF__CycleBlending::LB' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending, RF) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C__CLF__CycleBlending::RF' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending, RB) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C__CLF__CycleBlending::RB' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__CLF__CycleBlending, Param__CLF__CycleBlending) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C__CLF__CycleBlending::Param__CLF__CycleBlending' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.(N) CycleBlending
// 0x0080 (0x0080 - 0x0000)
struct MH_AI_Tuto_AnimBP_C__N__CycleBlending final
{
public:
	struct FPoseLink                              F;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LF;                                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LB;                                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RF;                                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RB;                                                // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Sprint;                                            // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param__N__CycleBlending;                           // 0x0070(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C__N__CycleBlending) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C__N__CycleBlending");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C__N__CycleBlending) == 0x000080, "Wrong size on MH_AI_Tuto_AnimBP_C__N__CycleBlending");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, F) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::F' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, B) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::B' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, LF) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::LF' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, LB) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::LB' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, RF) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::RF' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, RB) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::RB' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, Sprint) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::Sprint' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C__N__CycleBlending, Param__N__CycleBlending) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C__N__CycleBlending::Param__N__CycleBlending' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.AimOffsetBehaviors
// 0x0010 (0x0010 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_AimOffsetBehaviors final
{
public:
	struct FPoseLink                              Param_AimOffsetBehaviors;                          // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_AimOffsetBehaviors) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_AimOffsetBehaviors");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_AimOffsetBehaviors) == 0x000010, "Wrong size on MH_AI_Tuto_AnimBP_C_AimOffsetBehaviors");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AimOffsetBehaviors, Param_AimOffsetBehaviors) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_AimOffsetBehaviors::Param_AimOffsetBehaviors' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.AngleInRange
// 0x0050 (0x0050 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_AngleInRange final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinAngle;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxAngle;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncreaseBuffer;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B1[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_AngleInRange) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_AngleInRange");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_AngleInRange) == 0x000050, "Wrong size on MH_AI_Tuto_AnimBP_C_AngleInRange");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, Angle) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::Angle' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, MinAngle) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::MinAngle' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, MaxAngle) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::MaxAngle' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, Buffer) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::Buffer' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, IncreaseBuffer) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::IncreaseBuffer' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, ReturnValue) == 0x000021, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, Temp_bool_Variable) == 0x000022, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000049, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AngleInRange, K2Node_Select_Default) == 0x00004A, "Member 'MH_AI_Tuto_AnimBP_C_AngleInRange::K2Node_Select_Default' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_AnimGraph");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on MH_AI_Tuto_AnimBP_C_AnimGraph");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.BaseLayer
// 0x0010 (0x0010 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_BaseLayer final
{
public:
	struct FPoseLink                              Param_BaseLayer;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_BaseLayer) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_BaseLayer");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_BaseLayer) == 0x000010, "Wrong size on MH_AI_Tuto_AnimBP_C_BaseLayer");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_BaseLayer, Param_BaseLayer) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_BaseLayer::Param_BaseLayer' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.BasePoses
// 0x0010 (0x0010 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_BasePoses final
{
public:
	struct FPoseLink                              Param_BasePoses;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_BasePoses) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_BasePoses");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_BasePoses) == 0x000010, "Wrong size on MH_AI_Tuto_AnimBP_C_BasePoses");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_BasePoses, Param_BasePoses) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_BasePoses::Param_BasePoses' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         Param_DeltaTimeX;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on MH_AI_Tuto_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on MH_AI_Tuto_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_BlueprintUpdateAnimation, Param_DeltaTimeX) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_BlueprintUpdateAnimation::Param_DeltaTimeX' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.BPI_SetGroundedEntryState
// 0x0001 (0x0001 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_BPI_SetGroundedEntryState final
{
public:
	EGroundedEntryState                           Param_GroundedEntryState;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_BPI_SetGroundedEntryState) == 0x000001, "Wrong alignment on MH_AI_Tuto_AnimBP_C_BPI_SetGroundedEntryState");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_BPI_SetGroundedEntryState) == 0x000001, "Wrong size on MH_AI_Tuto_AnimBP_C_BPI_SetGroundedEntryState");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_BPI_SetGroundedEntryState, Param_GroundedEntryState) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_BPI_SetGroundedEntryState::Param_GroundedEntryState' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.BPI_SetOverlayOverrideState
// 0x0004 (0x0004 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_BPI_SetOverlayOverrideState final
{
public:
	int32                                         Param_OverlayOverrideState;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_BPI_SetOverlayOverrideState) == 0x000004, "Wrong alignment on MH_AI_Tuto_AnimBP_C_BPI_SetOverlayOverrideState");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_BPI_SetOverlayOverrideState) == 0x000004, "Wrong size on MH_AI_Tuto_AnimBP_C_BPI_SetOverlayOverrideState");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_BPI_SetOverlayOverrideState, Param_OverlayOverrideState) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_BPI_SetOverlayOverrideState::Param_OverlayOverrideState' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateCrouchingPlayRate
// 0x0060 (0x0060 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate) == 0x000060, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, PlayRate) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_X) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_Y) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_Z) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateDiagonalScaleAmount
// 0x0040 (0x0040 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount) == 0x000040, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateInAirLeanAmount
// 0x00C0 (0x00C0 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount final
{
public:
	struct FLeanAmount                            Param_LeanAmount;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B3[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B4[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount) == 0x0000C0, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, Param_LeanAmount) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::Param_LeanAmount' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_X) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_Y) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_Z) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector2D_X) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_LeanAmount) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x0000BC, "Member 'MH_AI_Tuto_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateLandPrediction
// 0x02A0 (0x02A0 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateLandPrediction final
{
public:
	double                                        Param_LandPrediction;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	EDrawDebugTrace                               CallFunc_GetDebugTraceType_DebugType;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B5[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_NormalUnsafe_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B6[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B7[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B8[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateLandPrediction");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction) == 0x0002A0, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateLandPrediction");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, Param_LandPrediction) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::Param_LandPrediction' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, Temp_object_Variable) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_GetDebugTraceType_DebugType) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_GetDebugTraceType_DebugType' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000019, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_GetCurveValue_ReturnValue) == 0x00001C, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_X) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_Y) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_Z) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_Vector_NormalUnsafe_ReturnValue) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_Vector_NormalUnsafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x0001A8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_IsWalkable_ReturnValue) == 0x0001A9, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_bBlockingHit) == 0x0001AA, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001AB, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Time) == 0x0001AC, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Distance) == 0x0001B0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Location) == 0x0001B8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Normal) == 0x0001E8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ImpactNormal) == 0x000200, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_PhysMat) == 0x000218, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitActor) == 0x000220, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitComponent) == 0x000228, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitBoneName) == 0x000230, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_BoneName) == 0x000238, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitItem) == 0x000240, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ElementIndex) == 0x000244, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_FaceIndex) == 0x000248, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_TraceStart) == 0x000250, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_TraceEnd) == 0x000268, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_BooleanAND_ReturnValue) == 0x000280, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_GetFloatValue_ReturnValue) == 0x000284, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_ReturnValue) == 0x000288, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000290, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_A_ImplicitCast) == 0x000298, "Member 'MH_AI_Tuto_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateMovementDirection
// 0x0058 (0x0058 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateMovementDirection final
{
public:
	EMovementDirection                            ReturnValues;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            CallFunc_CalculateQuadrant_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BB[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateQuadrant_Angle_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateMovementDirection");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection) == 0x000058, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateMovementDirection");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, ReturnValues) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::ReturnValues' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, K2Node_SwitchEnum_CmpSuccess_1) == 0x00004C, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, CallFunc_CalculateQuadrant_ReturnValue) == 0x00004D, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::CallFunc_CalculateQuadrant_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateMovementDirection, CallFunc_CalculateQuadrant_Angle_ImplicitCast) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_CalculateMovementDirection::CallFunc_CalculateQuadrant_Angle_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateQuadrant
// 0x0048 (0x0048 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateQuadrant final
{
public:
	EMovementDirection                            Current;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FRMinusThreshold;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FLMinusThreshold;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BRMinusThreshold;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BLMinusThreshold;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue_1;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue_2;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateQuadrant");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant) == 0x000048, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateQuadrant");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, Current) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::Current' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, FRMinusThreshold) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::FRMinusThreshold' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, FLMinusThreshold) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::FLMinusThreshold' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, BRMinusThreshold) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::BRMinusThreshold' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, BLMinusThreshold) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::BLMinusThreshold' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, Buffer) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::Buffer' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, Angle) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::Angle' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, ReturnValue) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000039, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00003B, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00003D, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue) == 0x00003E, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue_1) == 0x00003F, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue_1) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000041, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000042, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue_2) == 0x000043, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue_2) == 0x000044, "Member 'MH_AI_Tuto_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue_2' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateRelativeAccelerationAmount
// 0x0118 (0x0118 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMaxBrakingDeceleration_ReturnValue;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BD[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_ClampSizeMax_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAcceleration_ReturnValue;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BE[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_ClampSizeMax_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BF[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_ClampSizeMax_Max_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_VectorFloat_B_ImplicitCast;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_ClampSizeMax_Max_ImplicitCast_1;   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_VectorFloat_B_ImplicitCast_1;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount) == 0x000118, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_GetMaxBrakingDeceleration_ReturnValue) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_GetMaxBrakingDeceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_ReturnValue) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_GetMaxAcceleration_ReturnValue) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_GetMaxAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_ReturnValue_1) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x0000D0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000E8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_Max_ImplicitCast) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_B_ImplicitCast) == 0x000100, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_Max_ImplicitCast_1) == 0x000108, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_B_ImplicitCast_1) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateStandingPlayRate
// 0x00C0 (0x00C0 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate) == 0x0000C0, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, PlayRate) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetCurveValue_ReturnValue_1) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetOwningComponent_ReturnValue) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue_1) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_X) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_Y) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_Z) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Lerp_ReturnValue_1) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue_2) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateStrideBlend
// 0x0078 (0x0078 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateStrideBlend final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C2[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C3[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateStrideBlend");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend) == 0x000078, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateStrideBlend");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetCurveValue_ReturnValue_1) == 0x00000C, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_ReturnValue_1) == 0x000024, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_ReturnValue_2) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_ReturnValue_1) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_B_ImplicitCast) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x000064, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_A_ImplicitCast) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_B_ImplicitCast_1) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateVelocityBlend
// 0x0150 (0x0150 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend final
{
public:
	struct FVelocityBlend                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeDirection;                                 // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sum;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocRelativeVelocityDir;                            // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         K2Node_MakeStruct_VelocityBlend;                   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast; // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast; // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend) == 0x000150, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, RelativeDirection) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::RelativeDirection' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, Sum) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::Sum' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, LocRelativeVelocityDir) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::LocRelativeVelocityDir' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_X) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Y) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Z) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_1) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_2) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_X_1) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Y_1) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_1) == 0x0000F0, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_3) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_2) == 0x000118, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_3) == 0x000120, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_4) == 0x000128, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_VelocityBlend) == 0x000130, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_VelocityBlend' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast) == 0x000140, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast) == 0x000144, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast) == 0x000148, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast) == 0x00014C, "Member 'MH_AI_Tuto_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CalculateWalkRunBlend
// 0x0020 (0x0020 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend final
{
public:
	double                                        Param_WalkRunBlend;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RunSpeed;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WalkSpeed;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend) == 0x000020, "Wrong size on MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend, Param_WalkRunBlend) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend::Param_WalkRunBlend' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend, RunSpeed) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend::RunSpeed' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend, WalkSpeed) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend::WalkSpeed' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001A, "Member 'MH_AI_Tuto_AnimBP_C_CalculateWalkRunBlend::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CanDynamicTransition
// 0x0018 (0x0018 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CanDynamicTransition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CanDynamicTransition) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CanDynamicTransition");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CanDynamicTransition) == 0x000018, "Wrong size on MH_AI_Tuto_AnimBP_C_CanDynamicTransition");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanDynamicTransition, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CanDynamicTransition::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanDynamicTransition, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'MH_AI_Tuto_AnimBP_C_CanDynamicTransition::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanDynamicTransition, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CanDynamicTransition::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanDynamicTransition, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CanDynamicTransition::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CanOverlayTransition
// 0x0004 (0x0004 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CanOverlayTransition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CanOverlayTransition) == 0x000001, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CanOverlayTransition");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CanOverlayTransition) == 0x000004, "Wrong size on MH_AI_Tuto_AnimBP_C_CanOverlayTransition");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanOverlayTransition, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CanOverlayTransition::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanOverlayTransition, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'MH_AI_Tuto_AnimBP_C_CanOverlayTransition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanOverlayTransition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'MH_AI_Tuto_AnimBP_C_CanOverlayTransition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanOverlayTransition, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'MH_AI_Tuto_AnimBP_C_CanOverlayTransition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CanRotateInPlace
// 0x0004 (0x0004 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CanRotateInPlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CanRotateInPlace) == 0x000001, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CanRotateInPlace");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CanRotateInPlace) == 0x000004, "Wrong size on MH_AI_Tuto_AnimBP_C_CanRotateInPlace");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanRotateInPlace, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CanRotateInPlace::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanRotateInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'MH_AI_Tuto_AnimBP_C_CanRotateInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanRotateInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'MH_AI_Tuto_AnimBP_C_CanRotateInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanRotateInPlace, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'MH_AI_Tuto_AnimBP_C_CanRotateInPlace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.CanTurnInPlace
// 0x0018 (0x0018 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_CanTurnInPlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C7[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_CanTurnInPlace");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace) == 0x000018, "Wrong size on MH_AI_Tuto_AnimBP_C_CanTurnInPlace");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_CanTurnInPlace, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_CanTurnInPlace::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.DynamicTransitionCheck
// 0x0068 (0x0068 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck final
{
public:
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams;            // 0x0000(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_1;          // 0x0028(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C9[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CA[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck) == 0x000068, "Wrong size on MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, K2Node_MakeStruct_DynamicMontageParams) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::K2Node_MakeStruct_DynamicMontageParams' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, K2Node_MakeStruct_DynamicMontageParams_1) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::K2Node_MakeStruct_DynamicMontageParams_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_GetOwningComponent_ReturnValue_1) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000054, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.ExecuteUbergraph_MH_AI_Tuto_AnimBP
// 0x0760 (0x0760 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CC[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CD[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_4;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CE[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CF[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D0[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D1[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_5;    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D2[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_6;    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D3[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_1;     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_7;    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D4[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D5[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D6[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_8;    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D7[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D8[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D9[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_2;     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_9;    // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DA[0x1];                                     // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_13;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_10;   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_11;   // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DB[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue;     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_12;   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DC[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_1;   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DD[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DE[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DF[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_13;   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E0[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_14;   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E1[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E2[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_14;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_6;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E3[0x2];                                     // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_15;   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E4[0x1];                                     // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_2;   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_16;   // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_25;       // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E5[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_15;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_3;   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E6[0x1];                                     // 0x015F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_16;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_17;   // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_26;       // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E7[0x1];                                     // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_17;             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E8[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_7;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E9[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EA[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_18;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_18;   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EB[0x2];                                     // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_3;     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_19;   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EC[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_19;             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_20;   // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_4;     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_21;   // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34ED[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_20;             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_8;          // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EE[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_21;             // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_22;   // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EF[0x1];                                     // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_5;     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_23;   // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F0[0x2];                                     // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_27;       // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_28;       // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_29;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_30;       // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_31;       // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_32;       // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_6;     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_24;   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_33;       // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_7;     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_25;   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_11;         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_34;       // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_12;         // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_13;         // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F1[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_22;             // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_9;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F2[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_23;             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_24;             // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F3[0x3];                                     // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_6;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F4[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_25;             // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_7;                        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_10;         // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F5[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_26;             // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_26;   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_14;         // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F6[0x2];                                     // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5; // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_9;       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_15;         // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_16;         // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_35;       // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_17;         // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_18;         // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_19;         // 0x0227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_20;         // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_21;         // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_36;       // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_22;         // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_23;         // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_37;       // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F7[0x1];                                     // 0x023F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F8[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams;            // 0x0258(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_1;          // 0x0270(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_2;          // 0x0288(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_3;          // 0x02A0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_4;          // 0x02B8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_5;          // 0x02D0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_6;          // 0x02E8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_7;          // 0x0300(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_8;          // 0x0318(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_9;          // 0x0330(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_10;         // 0x0348(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_11;         // 0x0360(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_12;         // 0x0378(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_13;         // 0x0390(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_38;       // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_39;       // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F9[0x2];                                     // 0x03AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_8;     // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_40;       // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_41;       // 0x03B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_42;       // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_43;       // 0x03B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_44;       // 0x03B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FA[0x1];                                     // 0x03B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_45;       // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FB[0x2];                                     // 0x03CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_9;     // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_4;      // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_46;       // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_47;       // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FC[0x3];                                     // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_10;      // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FD[0x3];                                     // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_11;      // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_48;       // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FE[0x1];                                     // 0x03E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_27;             // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_27;   // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FF[0x3];                                     // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8; // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_12;      // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x03F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_49;       // 0x03F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_50;       // 0x03F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_51;       // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_24;         // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3500[0x6];                                     // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_4;         // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3501[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_10;    // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_52;       // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_5;      // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_25;         // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3502[0x1];                                     // 0x041B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_9; // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_13;      // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3503[0x3];                                     // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_28;             // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_28;   // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_53;       // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_54;       // 0x042B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_10; // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_14;      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_26;         // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3504[0x5];                                     // 0x0433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_5;         // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_55;       // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3505[0x6];                                     // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_6;         // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_56;       // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_57;       // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_58;       // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3506[0x3];                                     // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_11;    // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_6;      // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_59;       // 0x046E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x046F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_60;       // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_61;       // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3507[0x1];                                     // 0x0473(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_11; // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_15;      // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDynamicTransition_ReturnValue;         // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanTurnInPlace_ReturnValue;               // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3508[0x3];                                     // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_29;             // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRotateInPlace_ReturnValue;             // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_29;   // 0x0485(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3509[0x2];                                     // 0x0486(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_12; // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_16;      // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldMoveCheck_Return_Value;             // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_27;         // 0x0493(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350A[0x4];                                     // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350B[0x7];                                     // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_As___;                          // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_62;       // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350C[0x5];                                     // 0x04B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_CustomEvent_Parameters_1;                   // 0x04B8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroundedEntryState                           K2Node_Event_GroundedEntryState;                   // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue;         // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_1;       // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_2;       // 0x04E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_3;       // 0x04E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_4;       // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_5;       // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350D[0x6];                                     // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ReTriggerDelay;                 // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_CustomEvent_Parameters;                     // 0x04F8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_11;         // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350E[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1; // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350F[0x3];                                     // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OverlayOverrideState;                 // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_6;       // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_7;       // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3510[0x6];                                     // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3511[0x4];                                     // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1; // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3512[0x4];                                     // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2; // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3; // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4; // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5; // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6; // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7; // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8; // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_2;                     // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9; // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10; // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11; // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12; // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13; // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14; // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_3;       // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15; // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16; // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17; // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_3;                     // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18; // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19; // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_5;    // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20; // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21; // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_4;       // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22; // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23; // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_6;    // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24; // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25; // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_5;       // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_7;    // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_4;                     // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_5;                     // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26; // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_8;    // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2;   // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3;   // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_9;    // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_10;   // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27; // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_11;   // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4;   // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_12;   // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28; // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_13;   // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5;   // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_14;   // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_29; // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DeltaTimeX_ImplicitCast;        // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_15;   // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP) == 0x000760, "Wrong size on MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, EntryPoint) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000006, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000009, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000A, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00000B, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue) == 0x00000C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_1) == 0x00001C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_2) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000024, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000025, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue_1) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000034, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x00003C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_4) == 0x000041, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_3) == 0x000044, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_4) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue_2) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000059, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00005A, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_5) == 0x00005C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000061, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_6) == 0x000064, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_7) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_5) == 0x00006C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00006D, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x00006E, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_8) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_6) == 0x000074, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_1) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00007C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_7) == 0x00007D, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_9) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000084, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue_3) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_4) == 0x000091, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000092, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_5) == 0x000093, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x000094, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000095, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_IsValid_ReturnValue) == 0x000096, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000097, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_1) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x00009C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_2) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_8) == 0x0000A1, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_3) == 0x0000A2, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000A3, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000A4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0000A5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0000A6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0000A7, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_4) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_5) == 0x0000A9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x0000AA, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0000AB, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x0000AC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_10) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x0000B4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_11) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000BC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0000BD, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x0000BE, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x0000BF, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x0000C1, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x0000C2, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x0000C3, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x0000C4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x0000C5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_6) == 0x0000C6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0000C7, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_7) == 0x0000C8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_8) == 0x0000C9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_12) == 0x0000CC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue_4) == 0x0000D0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_2) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x0000DC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_9) == 0x0000DD, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_6) == 0x0000DE, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_13) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_10) == 0x0000E4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0000E5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_7) == 0x0000E6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_9) == 0x0000E7, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x0000E8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_11) == 0x0000EC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue) == 0x0000F0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_12) == 0x0000F4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_1) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000FC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_X) == 0x000100, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_Y) == 0x000108, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue) == 0x000114, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000118, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_8) == 0x000119, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x00011C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_13) == 0x000120, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x000124, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_14) == 0x000128, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1) == 0x00012C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000130, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_14) == 0x000134, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_9) == 0x000138, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_6) == 0x000139, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x00013C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x000140, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_15) == 0x000141, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_10) == 0x000142, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x000143, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x000144, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x000145, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_10) == 0x000146, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_2) == 0x000148, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_16) == 0x00014C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x00014D, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_11) == 0x00014E, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_25) == 0x00014F, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_11) == 0x000150, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_15) == 0x000154, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_3) == 0x000158, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x00015C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x00015D, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_12) == 0x00015E, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_16) == 0x000160, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_17) == 0x000164, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_13) == 0x000165, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_26) == 0x000166, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_17) == 0x000168, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue_5) == 0x000170, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_7) == 0x000178, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x000179, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2) == 0x00017C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000180, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_18) == 0x000184, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_18) == 0x000188, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_14) == 0x000189, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_3) == 0x00018C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_19) == 0x000190, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_15) == 0x000191, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3) == 0x000194, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_19) == 0x000198, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x00019C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_20) == 0x00019D, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_16) == 0x00019E, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_17) == 0x00019F, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_4) == 0x0001A0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_21) == 0x0001A4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_20) == 0x0001A8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_8) == 0x0001AC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_21) == 0x0001B0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_22) == 0x0001B4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x0001B5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_18) == 0x0001B6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_5) == 0x0001B8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_23) == 0x0001BC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_19) == 0x0001BD, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4) == 0x0001C0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x0001C4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_20) == 0x0001C5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_27) == 0x0001C6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_28) == 0x0001C7, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_29) == 0x0001C8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_30) == 0x0001C9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_31) == 0x0001CA, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_32) == 0x0001CB, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_6) == 0x0001CC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_24) == 0x0001D0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_33) == 0x0001D1, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_12) == 0x0001D2, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001D3, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_7) == 0x0001D4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_25) == 0x0001D8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x0001D9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_21) == 0x0001DA, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x0001DB, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_11) == 0x0001DC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_34) == 0x0001DD, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_13) == 0x0001DE, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_12) == 0x0001DF, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_13) == 0x0001E0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_22) == 0x0001E4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_9) == 0x0001E8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_23) == 0x0001EC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_24) == 0x0001F0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x0001F4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue_6) == 0x0001F8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000200, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_25) == 0x000204, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_ReturnValue_7) == 0x000208, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_10) == 0x000210, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_26) == 0x000214, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_26) == 0x000218, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_14) == 0x000219, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5) == 0x00021C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_9) == 0x000220, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_22) == 0x000221, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_15) == 0x000222, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_16) == 0x000223, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_35) == 0x000224, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_17) == 0x000225, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_18) == 0x000226, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_19) == 0x000227, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_X_1) == 0x000228, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_Y_1) == 0x000230, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000238, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_20) == 0x000239, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_21) == 0x00023A, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_36) == 0x00023B, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_22) == 0x00023C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_23) == 0x00023D, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_37) == 0x00023E, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_X_2) == 0x000240, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_Y_2) == 0x000248, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000250, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams) == 0x000258, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_1) == 0x000270, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_2) == 0x000288, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_3) == 0x0002A0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_4) == 0x0002B8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_5) == 0x0002D0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_6) == 0x0002E8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_7) == 0x000300, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_8) == 0x000318, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_9) == 0x000330, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_10) == 0x000348, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_11) == 0x000360, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_12) == 0x000378, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_MakeStruct_DynamicMontageParams_13) == 0x000390, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_MakeStruct_DynamicMontageParams_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_38) == 0x0003A8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_39) == 0x0003A9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_8) == 0x0003AC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x0003B0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_40) == 0x0003B1, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_23) == 0x0003B2, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_41) == 0x0003B3, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_42) == 0x0003B4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_43) == 0x0003B5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_44) == 0x0003B6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_X_3) == 0x0003B8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_Y_3) == 0x0003C0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x0003C8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_45) == 0x0003C9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_9) == 0x0003CC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_14) == 0x0003D0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_4) == 0x0003D1, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_24) == 0x0003D2, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_46) == 0x0003D3, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_47) == 0x0003D4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6) == 0x0003D8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_10) == 0x0003DC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7) == 0x0003E0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_11) == 0x0003E4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_25) == 0x0003E5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_48) == 0x0003E6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_27) == 0x0003E8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_27) == 0x0003EC, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8) == 0x0003F0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_12) == 0x0003F4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_26) == 0x0003F5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_49) == 0x0003F6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_50) == 0x0003F7, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_51) == 0x0003F8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_24) == 0x0003F9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_X_4) == 0x000400, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_Y_4) == 0x000408, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_4) == 0x000410, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_10) == 0x000414, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_52) == 0x000418, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_5) == 0x000419, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_25) == 0x00041A, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_9) == 0x00041C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_13) == 0x000420, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_28) == 0x000424, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_28) == 0x000428, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_27) == 0x000429, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_53) == 0x00042A, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_54) == 0x00042B, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_10) == 0x00042C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_14) == 0x000430, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_28) == 0x000431, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_26) == 0x000432, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_X_5) == 0x000438, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_Y_5) == 0x000440, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_5) == 0x000448, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_55) == 0x000449, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_X_6) == 0x000450, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BreakVector2D_Y_6) == 0x000458, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_6) == 0x000460, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_56) == 0x000461, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_29) == 0x000462, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_57) == 0x000463, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_58) == 0x000464, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_11) == 0x000468, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_6) == 0x00046C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_30) == 0x00046D, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_59) == 0x00046E, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_15) == 0x00046F, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_60) == 0x000470, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanOR_ReturnValue_16) == 0x000471, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_61) == 0x000472, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_11) == 0x000474, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_15) == 0x000478, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_31) == 0x000479, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_SwitchEnum_CmpSuccess) == 0x00047A, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanDynamicTransition_ReturnValue) == 0x00047B, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanDynamicTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanTurnInPlace_ReturnValue) == 0x00047C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanTurnInPlace_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetCurveValue_ReturnValue_29) == 0x000480, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetCurveValue_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanRotateInPlace_ReturnValue) == 0x000484, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanRotateInPlace_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_29) == 0x000485, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_Event_DeltaTimeX) == 0x000488, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_12) == 0x00048C, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_16) == 0x000490, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_ShouldMoveCheck_Return_Value) == 0x000491, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_ShouldMoveCheck_Return_Value' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_BooleanAND_ReturnValue_32) == 0x000492, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_27) == 0x000493, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000498, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, Temp_bool_IsClosed_Variable) == 0x0004A0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_DynamicCast_As___) == 0x0004A8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_DynamicCast_As___' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_DynamicCast_bSuccess) == 0x0004B0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_IsValid_ReturnValue_1) == 0x0004B1, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_62) == 0x0004B2, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_CustomEvent_Parameters_1) == 0x0004B8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_CustomEvent_Parameters_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x0004D0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_MapRangeClamped_ReturnValue) == 0x0004D8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, Temp_bool_Has_Been_Initd_Variable_1) == 0x0004E0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_Event_GroundedEntryState) == 0x0004E1, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_Event_GroundedEntryState' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, Temp_bool_IsClosed_Variable_1) == 0x0004E2, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, Temp_bool_IsClosed_Variable_2) == 0x0004E3, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue) == 0x0004E4, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_1) == 0x0004E5, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_2) == 0x0004E6, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_3) == 0x0004E7, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_4) == 0x0004E8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_5) == 0x0004E9, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_CustomEvent_ReTriggerDelay) == 0x0004F0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_CustomEvent_ReTriggerDelay' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_CustomEvent_Parameters) == 0x0004F8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_CustomEvent_Parameters' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_11) == 0x000510, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1) == 0x000518, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, Temp_bool_Has_Been_Initd_Variable_2) == 0x000520, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_Event_OverlayOverrideState) == 0x000524, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_Event_OverlayOverrideState' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_6) == 0x000528, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_7) == 0x000529, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000530, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x000538, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000540, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1) == 0x000548, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x000550, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2) == 0x000558, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3) == 0x000560, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4) == 0x000568, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_A_ImplicitCast) == 0x000570, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000578, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000580, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5) == 0x000588, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000590, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6) == 0x000598, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7) == 0x0005A0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_A_ImplicitCast_1) == 0x0005A8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8) == 0x0005B0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x0005B8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x0005C0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_A_ImplicitCast_2) == 0x0005C8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9) == 0x0005D0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10) == 0x0005D8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11) == 0x0005E0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12) == 0x0005E8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0005F0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0005F8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13) == 0x000600, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14) == 0x000608, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000610, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_3) == 0x000618, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15) == 0x000620, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16) == 0x000628, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000630, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x000638, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17) == 0x000640, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_A_ImplicitCast_3) == 0x000648, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x000650, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18) == 0x000658, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19) == 0x000660, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_5) == 0x000668, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20) == 0x000670, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21) == 0x000678, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_4) == 0x000680, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22) == 0x000688, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23) == 0x000690, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_6) == 0x000698, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24) == 0x0006A0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25) == 0x0006A8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_5) == 0x0006B0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_7) == 0x0006B8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_A_ImplicitCast_4) == 0x0006C0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Abs_A_ImplicitCast_5) == 0x0006C8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Abs_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26) == 0x0006D0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_8) == 0x0006D8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2) == 0x0006E0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3) == 0x0006E8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_9) == 0x0006F0, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_10) == 0x0006F8, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27) == 0x000700, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_11) == 0x000708, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4) == 0x000710, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_12) == 0x000718, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28) == 0x000720, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_13) == 0x000728, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5) == 0x000730, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_14) == 0x000738, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_29) == 0x000740, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_29' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, K2Node_VariableSet_DeltaTimeX_ImplicitCast) == 0x000748, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::K2Node_VariableSet_DeltaTimeX_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_15) == 0x000750, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP, CallFunc_Delay_Duration_ImplicitCast) == 0x000758, "Member 'MH_AI_Tuto_AnimBP_C_ExecuteUbergraph_MH_AI_Tuto_AnimBP::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.Foot IK
// 0x0020 (0x0020 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_Foot_IK final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_Foot_IK;                                     // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_Foot_IK) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_Foot_IK");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_Foot_IK) == 0x000020, "Wrong size on MH_AI_Tuto_AnimBP_C_Foot_IK");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_Foot_IK, InPose) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_Foot_IK::InPose' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_Foot_IK, Param_Foot_IK) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_Foot_IK::Param_Foot_IK' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.GetDebugTraceType
// 0x0038 (0x0038 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_GetDebugTraceType final
{
public:
	EDrawDebugTrace                               ShowTraceType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugType;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3513[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IALS_Controller_BPI_C> K2Node_DynamicCast_AsALS_Controller_BPI;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3514[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_DebugView;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowHUD;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowTraces;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowDebugShapes;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowLayerColors;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_Slomo;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo;      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_GetDebugTraceType");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType) == 0x000038, "Wrong size on MH_AI_Tuto_AnimBP_C_GetDebugTraceType");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, ShowTraceType) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::ShowTraceType' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, DebugType) == 0x000001, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::DebugType' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, K2Node_DynamicCast_AsALS_Controller_BPI) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::K2Node_DynamicCast_AsALS_Controller_BPI' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_DebugView) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_DebugView' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowHUD) == 0x000031, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowHUD' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowTraces) == 0x000032, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowTraces' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowDebugShapes) == 0x000033, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowDebugShapes' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowLayerColors) == 0x000034, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowLayerColors' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_Slomo) == 0x000035, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_Slomo' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo) == 0x000036, "Member 'MH_AI_Tuto_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.InterpLeanAmount
// 0x0068 (0x0068 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_InterpLeanAmount final
{
public:
	struct FLeanAmount                            Current;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            Target;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_InterpLeanAmount");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount) == 0x000068, "Wrong size on MH_AI_Tuto_AnimBP_C_InterpLeanAmount");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, Current) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::Current' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, Target) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::Target' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, InterpSpeed) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::InterpSpeed' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, DeltaTime) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::DeltaTime' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_ReturnValue_1) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_LeanAmount) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x000064, "Member 'MH_AI_Tuto_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.InterpVelocityBlend
// 0x00C0 (0x00C0 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_InterpVelocityBlend final
{
public:
	struct FVelocityBlend                         Current;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         Target;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         K2Node_MakeStruct_VelocityBlend;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_2;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_3;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_2;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_3;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_InterpVelocityBlend");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend) == 0x0000C0, "Wrong size on MH_AI_Tuto_AnimBP_C_InterpVelocityBlend");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, Current) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::Current' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, Target) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::Target' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, InterpSpeed) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::InterpSpeed' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, DeltaTime) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::DeltaTime' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, ReturnValue) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_1) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_2) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_3) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_VelocityBlend) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_VelocityBlend' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_2) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_3) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_2) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_3) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast) == 0x0000B4, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast) == 0x0000BC, "Member 'MH_AI_Tuto_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.LayerBlending
// 0x0040 (0x0040 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_LayerBlending final
{
public:
	struct FPoseLink                              Base_Layer_Input;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Overlay_Layer_Input;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Base_Poses_Input;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_LayerBlending;                               // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_LayerBlending) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_LayerBlending");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_LayerBlending) == 0x000040, "Wrong size on MH_AI_Tuto_AnimBP_C_LayerBlending");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_LayerBlending, Base_Layer_Input) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_LayerBlending::Base_Layer_Input' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_LayerBlending, Overlay_Layer_Input) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_LayerBlending::Overlay_Layer_Input' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_LayerBlending, Base_Poses_Input) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_LayerBlending::Base_Poses_Input' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_LayerBlending, Param_LayerBlending) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_LayerBlending::Param_LayerBlending' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.OverlayLayer
// 0x0010 (0x0010 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_OverlayLayer final
{
public:
	struct FPoseLink                              Param_OverlayLayer;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_OverlayLayer) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_OverlayLayer");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_OverlayLayer) == 0x000010, "Wrong size on MH_AI_Tuto_AnimBP_C_OverlayLayer");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_OverlayLayer, Param_OverlayLayer) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_OverlayLayer::Param_OverlayLayer' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.PlayDynamicTransition
// 0x0020 (0x0020 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_PlayDynamicTransition final
{
public:
	double                                        ReTriggerDelay;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  Parameters;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_PlayDynamicTransition) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_PlayDynamicTransition");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_PlayDynamicTransition) == 0x000020, "Wrong size on MH_AI_Tuto_AnimBP_C_PlayDynamicTransition");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_PlayDynamicTransition, ReTriggerDelay) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_PlayDynamicTransition::ReTriggerDelay' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_PlayDynamicTransition, Parameters) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_PlayDynamicTransition::Parameters' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.PlayTransition
// 0x0018 (0x0018 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_PlayTransition final
{
public:
	struct FDynamicMontageParams                  Parameters;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_PlayTransition) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_PlayTransition");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_PlayTransition) == 0x000018, "Wrong size on MH_AI_Tuto_AnimBP_C_PlayTransition");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_PlayTransition, Parameters) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_PlayTransition::Parameters' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.ResetIKOffsets
// 0x0070 (0x0070 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_ResetIKOffsets final
{
public:
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast_1;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_ResetIKOffsets");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets) == 0x000070, "Wrong size on MH_AI_Tuto_AnimBP_C_ResetIKOffsets");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_ReturnValue_1) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_ReturnValue_1) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000064, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast_1) == 0x00006C, "Member 'MH_AI_Tuto_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.RotateInPlaceCheck
// 0x0058 (0x0058 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck final
{
public:
	struct FRotateInPlace_Asset                   TargetRotateAsset;                                 // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3515[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3516[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck) == 0x000058, "Wrong size on MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, TargetRotateAsset) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::TargetRotateAsset' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_X) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000049, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_RotateInPlaceCheck::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.SetFootLocking
// 0x0140 (0x0140 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_SetFootLocking final
{
public:
	class FName                                   Enable_FootIK_Curve;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FootLockCurve;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IKFootBone;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentFootLockAlpha;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentFootLockLocation;                           // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentFootLockRotation;                           // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	double                                        FootLockCurveValue;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3517[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3518[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3519[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351A[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_FootLockCurveValue_ImplicitCast; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_SetFootLocking) == 0x000010, "Wrong alignment on MH_AI_Tuto_AnimBP_C_SetFootLocking");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_SetFootLocking) == 0x000140, "Wrong size on MH_AI_Tuto_AnimBP_C_SetFootLocking");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, Enable_FootIK_Curve) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::Enable_FootIK_Curve' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, FootLockCurve) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::FootLockCurve' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, IKFootBone) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::IKFootBone' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CurrentFootLockAlpha) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CurrentFootLockAlpha' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CurrentFootLockLocation) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CurrentFootLockLocation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CurrentFootLockRotation) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CurrentFootLockRotation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, FootLockCurveValue) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::FootLockCurveValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_GetCurveValue_ReturnValue) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00005C, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_GetOwningComponent_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000118, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000119, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_GetCurveValue_ReturnValue_1) == 0x00011C, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_BooleanOR_ReturnValue) == 0x000121, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000128, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLocking, K2Node_VariableSet_FootLockCurveValue_ImplicitCast) == 0x000130, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLocking::K2Node_VariableSet_FootLockCurveValue_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.SetFootLockOffsets
// 0x0160 (0x0160 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_SetFootLockOffsets final
{
public:
	struct FVector                                LocalLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotation;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                LocationDifference;                                // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationDifference;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351B[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLastUpdateRotation_ReturnValue;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_SetFootLockOffsets");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets) == 0x000160, "Wrong size on MH_AI_Tuto_AnimBP_C_SetFootLockOffsets");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, LocalLocation) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::LocalLocation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, LocalRotation) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::LocalRotation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, LocationDifference) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::LocationDifference' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, RotationDifference) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::RotationDifference' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_GetOwningComponent_ReturnValue) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_GetLastUpdateRotation_ReturnValue) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_GetLastUpdateRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000128, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000140, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootLockOffsets, CallFunc_IsMovingOnGround_ReturnValue) == 0x000158, "Member 'MH_AI_Tuto_AnimBP_C_SetFootLockOffsets::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.SetFootOffsets
// 0x04F0 (0x04F0 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_SetFootOffsets final
{
public:
	class FName                                   Enable_FootIK_Curve;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IKFootBone;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBone;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocationTarget;                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocationOffset;                             // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentRotationOffset;                             // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRotationOffset;                              // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                ImpactNormal;                                      // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKFootFloorLocation;                               // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351C[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351D[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351E[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue_1;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               CallFunc_GetDebugTraceType_DebugType;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351F[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0288(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3520[0x1];                                     // 0x0373(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3521[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3522[0x4];                                     // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3523[0x7];                                     // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_SetFootOffsets) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_SetFootOffsets");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_SetFootOffsets) == 0x0004F0, "Wrong size on MH_AI_Tuto_AnimBP_C_SetFootOffsets");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, Enable_FootIK_Curve) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::Enable_FootIK_Curve' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, IKFootBone) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::IKFootBone' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, RootBone) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::RootBone' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CurrentLocationTarget) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CurrentLocationTarget' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CurrentLocationOffset) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CurrentLocationOffset' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CurrentRotationOffset) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CurrentRotationOffset' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, TargetRotationOffset) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::TargetRotationOffset' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, ImpactNormal) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::ImpactNormal' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, ImpactPoint) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::ImpactPoint' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, IKFootFloorLocation) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::IKFootFloorLocation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_GetCurveValue_ReturnValue) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, Temp_object_Variable) == 0x0000C8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_ReturnValue) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y) == 0x000100, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z) == 0x000108, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_MakeVector_ReturnValue) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_MakeVector_ReturnValue_1) == 0x000128, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000158, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000170, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000188, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_RInterpTo_ReturnValue) == 0x0001A0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_1) == 0x0001B8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_1) == 0x0001C0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_1) == 0x0001C8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_ReturnValue_1) == 0x0001D8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_2) == 0x0001F0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_2) == 0x0001F8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_2) == 0x000200, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_DegAtan2_ReturnValue) == 0x000208, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_DegAtan2_ReturnValue_1) == 0x000210, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_MakeRotator_ReturnValue) == 0x000220, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000238, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000250, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000268, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_GetDebugTraceType_DebugType) == 0x000280, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_GetDebugTraceType_DebugType' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_LineTraceSingle_OutHit) == 0x000288, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_LineTraceSingle_ReturnValue) == 0x000370, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_bBlockingHit) == 0x000371, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_bInitialOverlap) == 0x000372, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Time) == 0x000374, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Distance) == 0x000378, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Location) == 0x000380, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_ImpactPoint) == 0x000398, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Normal) == 0x0003B0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_ImpactNormal) == 0x0003C8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_PhysMat) == 0x0003E0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitActor) == 0x0003E8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitComponent) == 0x0003F0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitBoneName) == 0x0003F8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_BoneName) == 0x000400, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitItem) == 0x000408, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_ElementIndex) == 0x00040C, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_FaceIndex) == 0x000410, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_TraceStart) == 0x000418, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_TraceEnd) == 0x000430, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_IsWalkable_ReturnValue) == 0x000448, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_GetOwningComponent_ReturnValue) == 0x000450, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_GetSocketLocation_ReturnValue) == 0x000458, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000470, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_3) == 0x000488, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_3) == 0x000490, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_3) == 0x000498, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_4) == 0x0004A0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_4) == 0x0004A8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_4) == 0x0004B0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_MakeVector_ReturnValue_2) == 0x0004B8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0004D0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x0004D8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x0004DC, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0004E0, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0004E4, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetFootOffsets, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0004E8, "Member 'MH_AI_Tuto_AnimBP_C_SetFootOffsets::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.SetPelvisIKOffset
// 0x0120 (0x0120 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset final
{
public:
	struct FVector                                FootOffset_L_Target;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOffset_R_Target;                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PelvisTarget;                                      // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3524[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3525[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3526[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3527[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3528[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset) == 0x000120, "Wrong size on MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, FootOffset_L_Target) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::FootOffset_L_Target' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, FootOffset_R_Target) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::FootOffset_R_Target' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, PelvisTarget) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::PelvisTarget' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_ReturnValue) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_ReturnValue_1) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_1) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_GetCurveValue_ReturnValue) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000B4, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_GetCurveValue_ReturnValue_1) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_2) == 0x0000D0, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_2) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_2) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_3) == 0x0000E8, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_3) == 0x0000F0, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_3) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000100, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000104, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x000108, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000118, "Member 'MH_AI_Tuto_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.ShouldMoveCheck
// 0x0004 (0x0004 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_ShouldMoveCheck final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_ShouldMoveCheck) == 0x000001, "Wrong alignment on MH_AI_Tuto_AnimBP_C_ShouldMoveCheck");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_ShouldMoveCheck) == 0x000004, "Wrong size on MH_AI_Tuto_AnimBP_C_ShouldMoveCheck");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ShouldMoveCheck, Return_Value) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_ShouldMoveCheck::Return_Value' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ShouldMoveCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'MH_AI_Tuto_AnimBP_C_ShouldMoveCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ShouldMoveCheck, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'MH_AI_Tuto_AnimBP_C_ShouldMoveCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_ShouldMoveCheck, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'MH_AI_Tuto_AnimBP_C_ShouldMoveCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.TurnInPlace
// 0x0118 (0x0118 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_TurnInPlace final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        PlayRateScale;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartTime;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideCurrent;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3529[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTurnInPlace_Asset                     TargetTurnAsset;                                   // 0x0030(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	double                                        TurnAngle;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingSlotAnimation_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352A[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352B[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352C[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TurnAngle_ImplicitCast;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_TurnInPlace) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_TurnInPlace");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_TurnInPlace) == 0x000118, "Wrong size on MH_AI_Tuto_AnimBP_C_TurnInPlace");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, TargetRotation) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::TargetRotation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, PlayRateScale) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::PlayRateScale' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, StartTime) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::StartTime' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, OverrideCurrent) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::OverrideCurrent' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, TargetTurnAsset) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::TargetTurnAsset' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, TurnAngle) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::TurnAngle' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_IsPlayingSlotAnimation_ReturnValue) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_IsPlayingSlotAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000092, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000093, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess) == 0x000094, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_1) == 0x000095, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_2) == 0x000096, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_3) == 0x000097, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast) == 0x0000E4, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000F0, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000100, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast) == 0x000108, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlace, K2Node_VariableSet_TurnAngle_ImplicitCast) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlace::K2Node_VariableSet_TurnAngle_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.TurnInPlaceCheck
// 0x00A0 (0x00A0 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck final
{
public:
	double                                        AngleMulti;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTurnInPlace_Asset                     TargetTurnAsset;                                   // 0x0008(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352E[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck) == 0x0000A0, "Wrong size on MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, AngleMulti) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::AngleMulti' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, TargetTurnAsset) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::TargetTurnAsset' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_X) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_Abs_ReturnValue_1) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000099, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'MH_AI_Tuto_AnimBP_C_TurnInPlaceCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateAimingValues
// 0x01E8 (0x01E8 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateAimingValues final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3530[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3531[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_2;     // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3532[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3533[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast_1;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast_1;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateAimingValues");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues) == 0x0001E8, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateAimingValues");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, K2Node_SwitchEnum_CmpSuccess_1) == 0x000001, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x0000C8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_FInterpTo_ReturnValue) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll_1) == 0x0000E8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch_1) == 0x0000EC, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw_1) == 0x0000F0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_ReturnValue) == 0x0000F8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_2) == 0x000108, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_2) == 0x000110, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000118, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_3) == 0x000120, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_3) == 0x000128, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_Abs_ReturnValue) == 0x000130, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000138, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000140, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000148, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue_2) == 0x000160, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_ReturnValue) == 0x000178, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll_2) == 0x000190, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch_2) == 0x000194, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw_2) == 0x000198, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001A0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0001B0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x0001B8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001BC, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0001C0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0001C8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0001D0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_Y_ImplicitCast_1) == 0x0001D8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_Y_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_X_ImplicitCast_1) == 0x0001E0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_X_ImplicitCast_1' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateCharacterInfo
// 0x00E8 (0x00E8 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo final
{
public:
	TScriptInterface<class IALS_Character_BPI_C>  K2Node_DynamicCast_AsALS_Character_BPI;            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3534[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IALS_Character_BPI_C>  K2Node_DynamicCast_AsALS_Character_BPI_1;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_GetAI_NPC_ActionMode_NPC_ActionMode;  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3535[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BPI_GetAI_NPC_ActionMode_ActionStartTime; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_BPI_GetAI_NPC_ActionMode_NPC_ActionAnim;  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_GetAI_NPC_ActionMode_LoopActive;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAI_StepTalk_WhoOrWhere                       CallFunc_BPI_GetAI_NPC_ActionMode_Who_NPC;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_GetAI_NPC_ActionMode_Hit_;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3536[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BPI_Get_EssentialValues_Velocity;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_Acceleration;     // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_MovementInput;    // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_IsMoving;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_IK_Possible;      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_SprintJUMP_;      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_HasMovementInput; // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3537[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BPI_Get_EssentialValues_Speed;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_MovementInputAmount; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BPI_Get_EssentialValues_AimingRotation;   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BPI_Get_EssentialValues_AimYawRate;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IALS_Character_BPI_C>  K2Node_DynamicCast_AsALS_Character_BPI_2;          // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_BPI_Get_CurrentStates_PawnMovementMode;   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            CallFunc_BPI_Get_CurrentStates_MovementState;      // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            CallFunc_BPI_Get_CurrentStates_PrevMovementState;  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           CallFunc_BPI_Get_CurrentStates_MovementAction;     // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             CallFunc_BPI_Get_CurrentStates_RotationMode;       // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     CallFunc_BPI_Get_CurrentStates_ActualGait;         // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   CallFunc_BPI_Get_CurrentStates_ActualStance;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 CallFunc_BPI_Get_CurrentStates_ViewMode;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             CallFunc_BPI_Get_CurrentStates_OverlayState;       // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo) == 0x0000E8, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Character_BPI) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Character_BPI' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Character_BPI_1) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Character_BPI_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_GetAI_NPC_ActionMode_NPC_ActionMode) == 0x000029, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_GetAI_NPC_ActionMode_NPC_ActionMode' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_GetAI_NPC_ActionMode_ActionStartTime) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_GetAI_NPC_ActionMode_ActionStartTime' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_GetAI_NPC_ActionMode_NPC_ActionAnim) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_GetAI_NPC_ActionMode_NPC_ActionAnim' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_GetAI_NPC_ActionMode_LoopActive) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_GetAI_NPC_ActionMode_LoopActive' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_GetAI_NPC_ActionMode_Who_NPC) == 0x000041, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_GetAI_NPC_ActionMode_Who_NPC' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_GetAI_NPC_ActionMode_Hit_) == 0x000042, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_GetAI_NPC_ActionMode_Hit_' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Velocity) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Velocity' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Acceleration) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Acceleration' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_MovementInput) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_MovementInput' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_IsMoving) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_IsMoving' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_IK_Possible) == 0x000091, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_IK_Possible' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_SprintJUMP_) == 0x000092, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_SprintJUMP_' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_HasMovementInput) == 0x000093, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_HasMovementInput' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Speed) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Speed' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_MovementInputAmount) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_MovementInputAmount' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_AimingRotation) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_AimingRotation' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_AimYawRate) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_AimYawRate' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Character_BPI_2) == 0x0000C8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Character_BPI_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, K2Node_SwitchEnum_CmpSuccess) == 0x0000D9, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_PawnMovementMode) == 0x0000DA, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_PawnMovementMode' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_MovementState) == 0x0000DB, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_MovementState' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_PrevMovementState) == 0x0000DC, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_PrevMovementState' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_MovementAction) == 0x0000DD, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_MovementAction' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_RotationMode) == 0x0000DE, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_RotationMode' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ActualGait) == 0x0000DF, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ActualGait' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ActualStance) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ActualStance' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ViewMode) == 0x0000E1, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ViewMode' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_OverlayState) == 0x0000E2, "Member 'MH_AI_Tuto_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_OverlayState' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateFootIK
// 0x0038 (0x0038 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateFootIK final
{
public:
	struct FVector                                FootOffset_R_Target;                               // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOffset_L_Target;                               // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateFootIK) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateFootIK");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateFootIK) == 0x000038, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateFootIK");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateFootIK, FootOffset_R_Target) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateFootIK::FootOffset_R_Target' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateFootIK, FootOffset_L_Target) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_UpdateFootIK::FootOffset_L_Target' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateFootIK, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_UpdateFootIK::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateInAirValues
// 0x0030 (0x0030 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateInAirValues final
{
public:
	struct FLeanAmount                            CallFunc_CalculateInAirLeanAmount_LeanAmount;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            CallFunc_InterpLeanAmount_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateLandPrediction_LandPrediction;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateInAirValues");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues) == 0x000030, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateInAirValues");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues, CallFunc_CalculateInAirLeanAmount_LeanAmount) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateInAirValues::CallFunc_CalculateInAirLeanAmount_LeanAmount' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues, CallFunc_InterpLeanAmount_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_UpdateInAirValues::CallFunc_InterpLeanAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues, CallFunc_CalculateLandPrediction_LandPrediction) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_UpdateInAirValues::CallFunc_CalculateLandPrediction_LandPrediction' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_X) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_Y) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_Z) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_Z' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateLayerValues
// 0x00F8 (0x00F8 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateLayerValues final
{
public:
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3538[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3539[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_13;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_14;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353A[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_L_LS_ImplicitCast;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_R_LS_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BasePose_N_ImplicitCast;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BasePose_CLF_ImplicitCast;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_R_Add_ImplicitCast;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_L_Add_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Spine_Add_ImplicitCast;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_R_ImplicitCast;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Head_Add_ImplicitCast;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_L_ImplicitCast;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateLayerValues");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues) == 0x0000F8, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateLayerValues");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_1) == 0x000004, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_2) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_3) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_4) == 0x00001C, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_5) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_6) == 0x000024, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_7) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue_2) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_8) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_9) == 0x000044, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_10) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_11) == 0x00004C, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_12) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_13) == 0x000054, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_FFloor_ReturnValue) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_14) == 0x00005C, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_FFloor_ReturnValue_1) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000074, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_B_ImplicitCast) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_L_LS_ImplicitCast) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_L_LS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_R_LS_ImplicitCast) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_R_LS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_B_ImplicitCast_1) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_BasePose_N_ImplicitCast) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_BasePose_N_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0000B8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_BasePose_CLF_ImplicitCast) == 0x0000C0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_BasePose_CLF_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_R_Add_ImplicitCast) == 0x0000C8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_R_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_L_Add_ImplicitCast) == 0x0000D0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_L_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Spine_Add_ImplicitCast) == 0x0000D8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Spine_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Hand_R_ImplicitCast) == 0x0000E0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Hand_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Head_Add_ImplicitCast) == 0x0000E8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Head_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Hand_L_ImplicitCast) == 0x0000F0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Hand_L_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateMovementValues
// 0x00A0 (0x00A0 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateMovementValues final
{
public:
	struct FVelocityBlend                         TargetVelocityBlend;                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateRelativeAccelerationAmount_ReturnValue; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDiagonalScaleAmount_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateCrouchingPlayRate_PlayRate;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateStrideBlend_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateWalkRunBlend_WalkRunBlend;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         CallFunc_CalculateVelocityBlend_ReturnValue;       // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            CallFunc_InterpLeanAmount_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         CallFunc_InterpVelocityBlend_ReturnValue;          // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateStandingPlayRate_PlayRate;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateMovementValues");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues) == 0x0000A0, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateMovementValues");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, TargetVelocityBlend) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::TargetVelocityBlend' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_CalculateRelativeAccelerationAmount_ReturnValue) == 0x000010, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_CalculateRelativeAccelerationAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_X) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_Y) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_Z) == 0x000038, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_LeanAmount) == 0x000040, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_CalculateDiagonalScaleAmount_ReturnValue) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_CalculateDiagonalScaleAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_CalculateCrouchingPlayRate_PlayRate) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_CalculateCrouchingPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_CalculateStrideBlend_ReturnValue) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_CalculateStrideBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_CalculateWalkRunBlend_WalkRunBlend) == 0x000060, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_CalculateWalkRunBlend_WalkRunBlend' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_CalculateVelocityBlend_ReturnValue) == 0x000068, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_CalculateVelocityBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_InterpLeanAmount_ReturnValue) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_InterpLeanAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_InterpVelocityBlend_ReturnValue) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_InterpVelocityBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, CallFunc_CalculateStandingPlayRate_PlayRate) == 0x000090, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::CallFunc_CalculateStandingPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x000098, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x00009C, "Member 'MH_AI_Tuto_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateRagdollValues
// 0x0030 (0x0030 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateRagdollValues final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateRagdollValues) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateRagdollValues");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateRagdollValues) == 0x000030, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateRagdollValues");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRagdollValues, CallFunc_GetOwningComponent_ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRagdollValues::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRagdollValues, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000008, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRagdollValues::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRagdollValues, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRagdollValues::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRagdollValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRagdollValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function MH_AI_Tuto_AnimBP.MH_AI_Tuto_AnimBP_C.UpdateRotationValues
// 0x00B8 (0x00B8 - 0x0000)
struct MH_AI_Tuto_AnimBP_C_UpdateRotationValues final
{
public:
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            CallFunc_CalculateMovementDirection_ReturnValues;  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353B[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues) == 0x000008, "Wrong alignment on MH_AI_Tuto_AnimBP_C_UpdateRotationValues");
static_assert(sizeof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues) == 0x0000B8, "Wrong size on MH_AI_Tuto_AnimBP_C_UpdateRotationValues");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_GetControlRotation_ReturnValue) == 0x000000, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000018, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000030, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_CalculateMovementDirection_ReturnValues) == 0x000054, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_CalculateMovementDirection_ReturnValues' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_GetVectorValue_ReturnValue) == 0x000058, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_X) == 0x000070, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Y) == 0x000078, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Z) == 0x000080, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_GetVectorValue_ReturnValue_1) == 0x000088, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_X_1) == 0x0000A0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MH_AI_Tuto_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'MH_AI_Tuto_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Z_1' has a wrong offset!");

}

