#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlameLaunch_TrapBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "LaunchTrap_Rotation_Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FlameLaunch_TrapBP.FlameLaunch_TrapBP_C
// 0x00A0 (0x0338 - 0x0298)
class AFlameLaunch_TrapBP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       FireSpawn_Root;                                    // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       HitAreaRoot;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Trap_Body;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BodyRoot1;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fire_Flamethrower;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Trigger_Zone;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             Body_RotatingMovement;                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HitArea;                                           // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Trap_Mesh;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          On_Trigger_;                                       // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_315A[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Trigger_Size;                                      // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ELaunchTrap_Rotation_Data                     Rotation_Type;                                     // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_315B[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Launch_Delay;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        LaunchOff_Value;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Launch_Length;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         RotationSpeed;                                     // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DamageON_;                                         // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TrapActivate_Control_;                             // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__FlameLaunch_TrapBP_HitArea_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__FlameLaunch_TrapBP_HitArea_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__FlameLaunch_TrapBP_Trigger_Zone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__FlameLaunch_TrapBP_Trigger_Zone_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_FlameLaunch_TrapBP(int32 EntryPoint);
	void FlameLaunch_Loop();
	void FlameLaunch_ON();
	void FlameLaunch_Stop();
	void ReceiveBeginPlay();
	void TrapSetting_Change(ELaunchTrap_Rotation_Data Param_Rotation_Type, int32 Param_RotationSpeed);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FlameLaunch_TrapBP_C">();
	}
	static class AFlameLaunch_TrapBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFlameLaunch_TrapBP_C>();
	}
};
static_assert(alignof(AFlameLaunch_TrapBP_C) == 0x000008, "Wrong alignment on AFlameLaunch_TrapBP_C");
static_assert(sizeof(AFlameLaunch_TrapBP_C) == 0x000338, "Wrong size on AFlameLaunch_TrapBP_C");
static_assert(offsetof(AFlameLaunch_TrapBP_C, UberGraphFrame) == 0x000298, "Member 'AFlameLaunch_TrapBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, FireSpawn_Root) == 0x0002A0, "Member 'AFlameLaunch_TrapBP_C::FireSpawn_Root' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, HitAreaRoot) == 0x0002A8, "Member 'AFlameLaunch_TrapBP_C::HitAreaRoot' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Trap_Body) == 0x0002B0, "Member 'AFlameLaunch_TrapBP_C::Trap_Body' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, BodyRoot1) == 0x0002B8, "Member 'AFlameLaunch_TrapBP_C::BodyRoot1' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, NS_Fire_Flamethrower) == 0x0002C0, "Member 'AFlameLaunch_TrapBP_C::NS_Fire_Flamethrower' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Trigger_Zone) == 0x0002C8, "Member 'AFlameLaunch_TrapBP_C::Trigger_Zone' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Body_RotatingMovement) == 0x0002D0, "Member 'AFlameLaunch_TrapBP_C::Body_RotatingMovement' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, HitArea) == 0x0002D8, "Member 'AFlameLaunch_TrapBP_C::HitArea' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, DefaultSceneRoot) == 0x0002E0, "Member 'AFlameLaunch_TrapBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Trap_Mesh) == 0x0002E8, "Member 'AFlameLaunch_TrapBP_C::Trap_Mesh' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, On_Trigger_) == 0x0002F0, "Member 'AFlameLaunch_TrapBP_C::On_Trigger_' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Trigger_Size) == 0x0002F8, "Member 'AFlameLaunch_TrapBP_C::Trigger_Size' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Rotation_Type) == 0x000310, "Member 'AFlameLaunch_TrapBP_C::Rotation_Type' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Launch_Delay) == 0x000318, "Member 'AFlameLaunch_TrapBP_C::Launch_Delay' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, LaunchOff_Value) == 0x000320, "Member 'AFlameLaunch_TrapBP_C::LaunchOff_Value' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, Launch_Length) == 0x000328, "Member 'AFlameLaunch_TrapBP_C::Launch_Length' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, RotationSpeed) == 0x000330, "Member 'AFlameLaunch_TrapBP_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, DamageON_) == 0x000334, "Member 'AFlameLaunch_TrapBP_C::DamageON_' has a wrong offset!");
static_assert(offsetof(AFlameLaunch_TrapBP_C, TrapActivate_Control_) == 0x000335, "Member 'AFlameLaunch_TrapBP_C::TrapActivate_Control_' has a wrong offset!");

}

