#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_PlayerCameraManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ALS_PlayerCameraManager.ALS_PlayerCameraManager_C
// 0x0120 (0x24E0 - 0x23C0)
class AALS_PlayerCameraManager_C final : public APlayerCameraManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x23C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 CameraBehavior;                                    // 0x23C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x23D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DebugViewOffset;                                   // 0x23D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DebugViewRotation;                                 // 0x23F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                RootLocation;                                      // 0x2408(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SmoothedPivotTarget;                               // 0x2420(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PivotLocation;                                     // 0x2480(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetCameraLocation;                              // 0x2498(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetCameraRotation;                              // 0x24B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Time_Slow_Mode_Active_;                            // 0x24C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38CD[0x7];                                     // 0x24C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time_Slow_Self_Custom_Value;                       // 0x24D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool BlueprintUpdateCamera(class AActor* CameraTarget, struct FVector* NewCameraLocation, struct FRotator* NewCameraRotation, float* NewCameraFOV);
	struct FVector CalculateAxisIndependentLag(const struct FVector& CurrentLocation, const struct FVector& TargetLocation, const struct FRotator& CameraRotation, const struct FVector& LagSpeeds);
	void CustomCameraBehavior(struct FVector* Location, struct FRotator* Rotation, double* FOV);
	void ExecuteUbergraph_ALS_PlayerCameraManager(int32 EntryPoint);
	double Get_CameraBehaviorParam(class FName CurveName);
	void GetDebugTraceType(EDrawDebugTrace ShowTraceType, EDrawDebugTrace* DebugTypu);
	void OnPossess(class APawn* NewPawn);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ALS_PlayerCameraManager_C">();
	}
	static class AALS_PlayerCameraManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AALS_PlayerCameraManager_C>();
	}
};
static_assert(alignof(AALS_PlayerCameraManager_C) == 0x000010, "Wrong alignment on AALS_PlayerCameraManager_C");
static_assert(sizeof(AALS_PlayerCameraManager_C) == 0x0024E0, "Wrong size on AALS_PlayerCameraManager_C");
static_assert(offsetof(AALS_PlayerCameraManager_C, UberGraphFrame) == 0x0023C0, "Member 'AALS_PlayerCameraManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, CameraBehavior) == 0x0023C8, "Member 'AALS_PlayerCameraManager_C::CameraBehavior' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, ControlledPawn) == 0x0023D0, "Member 'AALS_PlayerCameraManager_C::ControlledPawn' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, DebugViewOffset) == 0x0023D8, "Member 'AALS_PlayerCameraManager_C::DebugViewOffset' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, DebugViewRotation) == 0x0023F0, "Member 'AALS_PlayerCameraManager_C::DebugViewRotation' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, RootLocation) == 0x002408, "Member 'AALS_PlayerCameraManager_C::RootLocation' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, SmoothedPivotTarget) == 0x002420, "Member 'AALS_PlayerCameraManager_C::SmoothedPivotTarget' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, PivotLocation) == 0x002480, "Member 'AALS_PlayerCameraManager_C::PivotLocation' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, TargetCameraLocation) == 0x002498, "Member 'AALS_PlayerCameraManager_C::TargetCameraLocation' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, TargetCameraRotation) == 0x0024B0, "Member 'AALS_PlayerCameraManager_C::TargetCameraRotation' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, Time_Slow_Mode_Active_) == 0x0024C8, "Member 'AALS_PlayerCameraManager_C::Time_Slow_Mode_Active_' has a wrong offset!");
static_assert(offsetof(AALS_PlayerCameraManager_C, Time_Slow_Self_Custom_Value) == 0x0024D0, "Member 'AALS_PlayerCameraManager_C::Time_Slow_Self_Custom_Value' has a wrong offset!");

}

