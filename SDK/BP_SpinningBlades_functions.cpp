#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpinningBlades

#include "Basic.hpp"

#include "BP_SpinningBlades_classes.hpp"
#include "BP_SpinningBlades_parameters.hpp"


namespace SDK
{

// Function BP_SpinningBlades.BP_SpinningBlades_C.ActiveBlades
// (BlueprintCallable, BlueprintEvent)

void ABP_SpinningBlades_C::ActiveBlades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "ActiveBlades");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.BaseMatOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SpinningBlades_C::BaseMatOverride(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "BaseMatOverride");

	Params::BP_SpinningBlades_C_BaseMatOverride Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.BladesMatOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SpinningBlades_C::BladesMatOverride(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "BladesMatOverride");

	Params::BP_SpinningBlades_C_BladesMatOverride Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.BladeSMOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SpinningBlades_C::BladeSMOverride(class UStaticMesh* NewMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "BladeSMOverride");

	Params::BP_SpinningBlades_C_BladeSMOverride Parms{};

	Parms.NewMesh = NewMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SpinningBlades_C::BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");

	Params::BP_SpinningBlades_C_BndEvt__BP_SpinningBlades_SM_Blade_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.ExecuteUbergraph_BP_SpinningBlades
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpinningBlades_C::ExecuteUbergraph_BP_SpinningBlades(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "ExecuteUbergraph_BP_SpinningBlades");

	Params::BP_SpinningBlades_C_ExecuteUbergraph_BP_SpinningBlades Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.HittedSomething
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SpinningBlades_C::HittedSomething(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "HittedSomething");

	Params::BP_SpinningBlades_C_HittedSomething Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SpinningBlades_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpinningBlades_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "ReceiveTick");

	Params::BP_SpinningBlades_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.TurningOn__FinishedFunc
// (BlueprintEvent)

void ABP_SpinningBlades_C::TurningOn__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "TurningOn__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.TurningOn__UpdateFunc
// (BlueprintEvent)

void ABP_SpinningBlades_C::TurningOn__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "TurningOn__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.TurnOff
// (BlueprintCallable, BlueprintEvent)

void ABP_SpinningBlades_C::TurnOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "TurnOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.TurnOn
// (BlueprintCallable, BlueprintEvent)

void ABP_SpinningBlades_C::TurnOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "TurnOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpinningBlades.BP_SpinningBlades_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpinningBlades_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpinningBlades_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

