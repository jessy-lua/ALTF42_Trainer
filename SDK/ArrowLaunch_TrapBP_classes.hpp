#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArrowLaunch_TrapBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "LaunchTrap_Rotation_Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ArrowLaunch_TrapBP.ArrowLaunch_TrapBP_C
// 0x0078 (0x0310 - 0x0298)
class AArrowLaunch_TrapBP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   BodyRoot1;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ShootAreaRoot;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TrapBody;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Trigger_Zone;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             Body_RotatingMovement;                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Trap_Mesh;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          On_Trigger_;                                       // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_28A0[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Trigger_Size;                                      // 0x02E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Launch_Delay;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ELaunchTrap_Rotation_Data                     Rotation_Type;                                     // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_28A1[0x3];                                     // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RotationValue;                                     // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DamageON_;                                         // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TrapActivate_Control_;                             // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ArrowLaunch_Loop();
	void ArrowLaunch_Stop();
	void BndEvt__FlameLaunch_TrapBP_Trigger_Zone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__FlameLaunch_TrapBP_Trigger_Zone_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_ArrowLaunch_TrapBP(int32 EntryPoint);
	void FlameLaunch_ON();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ArrowLaunch_TrapBP_C">();
	}
	static class AArrowLaunch_TrapBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArrowLaunch_TrapBP_C>();
	}
};
static_assert(alignof(AArrowLaunch_TrapBP_C) == 0x000008, "Wrong alignment on AArrowLaunch_TrapBP_C");
static_assert(sizeof(AArrowLaunch_TrapBP_C) == 0x000310, "Wrong size on AArrowLaunch_TrapBP_C");
static_assert(offsetof(AArrowLaunch_TrapBP_C, UberGraphFrame) == 0x000298, "Member 'AArrowLaunch_TrapBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, BodyRoot1) == 0x0002A0, "Member 'AArrowLaunch_TrapBP_C::BodyRoot1' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, ShootAreaRoot) == 0x0002A8, "Member 'AArrowLaunch_TrapBP_C::ShootAreaRoot' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, TrapBody) == 0x0002B0, "Member 'AArrowLaunch_TrapBP_C::TrapBody' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, Trigger_Zone) == 0x0002B8, "Member 'AArrowLaunch_TrapBP_C::Trigger_Zone' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, Body_RotatingMovement) == 0x0002C0, "Member 'AArrowLaunch_TrapBP_C::Body_RotatingMovement' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, DefaultSceneRoot) == 0x0002C8, "Member 'AArrowLaunch_TrapBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, Trap_Mesh) == 0x0002D0, "Member 'AArrowLaunch_TrapBP_C::Trap_Mesh' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, On_Trigger_) == 0x0002D8, "Member 'AArrowLaunch_TrapBP_C::On_Trigger_' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, Trigger_Size) == 0x0002E0, "Member 'AArrowLaunch_TrapBP_C::Trigger_Size' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, Launch_Delay) == 0x0002F8, "Member 'AArrowLaunch_TrapBP_C::Launch_Delay' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, Rotation_Type) == 0x000300, "Member 'AArrowLaunch_TrapBP_C::Rotation_Type' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, RotationValue) == 0x000304, "Member 'AArrowLaunch_TrapBP_C::RotationValue' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, DamageON_) == 0x000308, "Member 'AArrowLaunch_TrapBP_C::DamageON_' has a wrong offset!");
static_assert(offsetof(AArrowLaunch_TrapBP_C, TrapActivate_Control_) == 0x000309, "Member 'AArrowLaunch_TrapBP_C::TrapActivate_Control_' has a wrong offset!");

}

