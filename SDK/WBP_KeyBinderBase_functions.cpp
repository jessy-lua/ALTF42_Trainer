#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyBinderBase

#include "Basic.hpp"

#include "WBP_KeyBinderBase_classes.hpp"
#include "WBP_KeyBinderBase_parameters.hpp"


namespace SDK
{

// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyPressed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnKeyPressed(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyPressed");

	Params::WBP_KeyBinderBase_C_OnKeyPressed Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UWBP_KeyBinderBase_C*             KeyBinder                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnKeyChanged__DelegateSignature(const struct FInputChord& NewKey, class UWBP_KeyBinderBase_C* KeyBinder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyChanged__DelegateSignature");

	Params::WBP_KeyBinderBase_C_OnKeyChanged__DelegateSignature Parms{};

	Parms.NewKey = std::move(NewKey);
	Parms.KeyBinder = KeyBinder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyBinderUnhighlighted
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnKeyBinderUnhighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyBinderUnhighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyBinderHighlighted
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnKeyBinderHighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyBinderHighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyBinderButtonUnhighlight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_KeyBinderButtonBase_C*       Key_Binder_Button                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnKeyBinderButtonUnhighlight(class UWBP_KeyBinderButtonBase_C* Key_Binder_Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyBinderButtonUnhighlight");

	Params::WBP_KeyBinderBase_C_OnKeyBinderButtonUnhighlight Parms{};

	Parms.Key_Binder_Button = Key_Binder_Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyBinderButtonSelect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_KeyBinderButtonBase_C*       KeyBinderButton                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnKeyBinderButtonSelect(class UWBP_KeyBinderButtonBase_C* KeyBinderButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyBinderButtonSelect");

	Params::WBP_KeyBinderBase_C_OnKeyBinderButtonSelect Parms{};

	Parms.KeyBinderButton = KeyBinderButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyBinderButtonHighlight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_KeyBinderButtonBase_C*       KeyBinderButton                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnKeyBinderButtonHighlight(class UWBP_KeyBinderButtonBase_C* KeyBinderButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyBinderButtonHighlight");

	Params::WBP_KeyBinderBase_C_OnKeyBinderButtonHighlight Parms{};

	Parms.KeyBinderButton = KeyBinderButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnEndKeyChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnEndKeyChange(const struct FInputChord& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnEndKeyChange");

	Params::WBP_KeyBinderBase_C_OnEndKeyChange Parms{};

	Parms.NewKey = std::move(NewKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnDeclineRemoveDuplicate
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnDeclineRemoveDuplicate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnDeclineRemoveDuplicate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnCancelRemoveDuplicate
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnCancelRemoveDuplicate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnCancelRemoveDuplicate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnCancelKeyChange
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnCancelKeyChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnCancelKeyChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnButtonClicked
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnAutoRevertDuplicate
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnAutoRevertDuplicate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnAutoRevertDuplicate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnAcceptRemoveDuplicate
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnAcceptRemoveDuplicate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnAcceptRemoveDuplicate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.IsKeyMatchingInputDeviceType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFKeyBinderButtonData            KeyBinderButtonData                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_KeyBinderBase_C::IsKeyMatchingInputDeviceType(const struct FFKeyBinderButtonData& KeyBinderButtonData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "IsKeyMatchingInputDeviceType");

	Params::WBP_KeyBinderBase_C_IsKeyMatchingInputDeviceType Parms{};

	Parms.KeyBinderButtonData = std::move(KeyBinderButtonData);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.IsKeyChangeAllowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWBP_KeyBinderButtonBase_C*       KeyBinderButton                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsKeyChangeAllowed                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::IsKeyChangeAllowed(class UWBP_KeyBinderButtonBase_C* KeyBinderButton, bool* bIsKeyChangeAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "IsKeyChangeAllowed");

	Params::WBP_KeyBinderBase_C_IsKeyChangeAllowed Parms{};

	Parms.KeyBinderButton = KeyBinderButton;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsKeyChangeAllowed != nullptr)
		*bIsKeyChangeAllowed = Parms.bIsKeyChangeAllowed;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.IsBlacklistedKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsBlacklisted                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::IsBlacklistedKey(const struct FKey& InKey, bool* bIsBlacklisted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "IsBlacklistedKey");

	Params::WBP_KeyBinderBase_C_IsBlacklistedKey Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);

	if (bIsBlacklisted != nullptr)
		*bIsBlacklisted = Parms.bIsBlacklisted;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.GetSelectedKeyBinderButton
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWBP_KeyBinderButtonBase_C*       KeyBinderButton                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::GetSelectedKeyBinderButton(class UWBP_KeyBinderButtonBase_C** KeyBinderButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "GetSelectedKeyBinderButton");

	Params::WBP_KeyBinderBase_C_GetSelectedKeyBinderButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KeyBinderButton != nullptr)
		*KeyBinderButton = Parms.KeyBinderButton;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.GetKeyBinderButtonByPlayerKeyMapping
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPlayerKeyMapping                Param_PlayerKeyMapping                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_KeyBinderButtonBase_C*       BinderButton                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::GetKeyBinderButtonByPlayerKeyMapping(const struct FPlayerKeyMapping& Param_PlayerKeyMapping, bool* bSuccess, class UWBP_KeyBinderButtonBase_C** BinderButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "GetKeyBinderButtonByPlayerKeyMapping");

	Params::WBP_KeyBinderBase_C_GetKeyBinderButtonByPlayerKeyMapping Parms{};

	Parms.Param_PlayerKeyMapping = std::move(Param_PlayerKeyMapping);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (BinderButton != nullptr)
		*BinderButton = Parms.BinderButton;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ExecuteUbergraph_WBP_KeyBinderBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::ExecuteUbergraph_WBP_KeyBinderBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ExecuteUbergraph_WBP_KeyBinderBase");

	Params::WBP_KeyBinderBase_C_ExecuteUbergraph_WBP_KeyBinderBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.CreateKeyBinderButtons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::CreateKeyBinderButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "CreateKeyBinderButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.CreateKeyBinderButtonEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::CreateKeyBinderButtonEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "CreateKeyBinderButtonEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_KeyBinderBase_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.CloseGamepadClearNotSupported
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::CloseGamepadClearNotSupported()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "CloseGamepadClearNotSupported");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ClearInputBinding
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::ClearInputBinding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ClearInputBinding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ChangeInputBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      InInputChord                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::ChangeInputBinding(const struct FInputChord& InInputChord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ChangeInputBinding");

	Params::WBP_KeyBinderBase_C_ChangeInputBinding Parms{};

	Parms.InInputChord = std::move(InInputChord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ChangeHighlightedKeyBinderButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexToHighlight                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRightNavigation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::ChangeHighlightedKeyBinderButton(int32 IndexToHighlight, bool bIsRightNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ChangeHighlightedKeyBinderButton");

	Params::WBP_KeyBinderBase_C_ChangeHighlightedKeyBinderButton Parms{};

	Parms.IndexToHighlight = IndexToHighlight;
	Parms.bIsRightNavigation = bIsRightNavigation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.BroadcastCurrentIndexToAllKeyBinders
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::BroadcastCurrentIndexToAllKeyBinders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "BroadcastCurrentIndexToAllKeyBinders");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ApplyWidgetStyleNormal
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::ApplyWidgetStyleNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ApplyWidgetStyleNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ApplyWidgetStyleHighlighted
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::ApplyWidgetStyleHighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ApplyWidgetStyleHighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ApplyWidgetStyleDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::ApplyWidgetStyleDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ApplyWidgetStyleDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ApplyWidgetStyleActive
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::ApplyWidgetStyleActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ApplyWidgetStyleActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.UnhighlightCurrentKeyBinderButton
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::UnhighlightCurrentKeyBinderButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "UnhighlightCurrentKeyBinderButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.UnhighlightAllKeyBinderButtons
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::UnhighlightAllKeyBinderButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "UnhighlightAllKeyBinderButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.SwapBindingFromCurrentToDuplicate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_KeyBinderButtonBase_C*       KeyBinderButton                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::SwapBindingFromCurrentToDuplicate(class UWBP_KeyBinderButtonBase_C* KeyBinderButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "SwapBindingFromCurrentToDuplicate");

	Params::WBP_KeyBinderBase_C_SwapBindingFromCurrentToDuplicate Parms{};

	Parms.KeyBinderButton = KeyBinderButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.ShowGamepadClearNotSupported
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::ShowGamepadClearNotSupported()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "ShowGamepadClearNotSupported");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.SetWidgetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWidgetStyleState                       Param_WidgetState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::SetWidgetState(EWidgetStyleState Param_WidgetState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "SetWidgetState");

	Params::WBP_KeyBinderBase_C_SetWidgetState Parms{};

	Parms.Param_WidgetState = Param_WidgetState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.SetupDisplayNameText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::SetupDisplayNameText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "SetupDisplayNameText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.SetStyleOnKeyBinderButtonAtIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWidgetStyleState                       Style                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::SetStyleOnKeyBinderButtonAtIndex(EWidgetStyleState Style, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "SetStyleOnKeyBinderButtonAtIndex");

	Params::WBP_KeyBinderBase_C_SetStyleOnKeyBinderButtonAtIndex Parms{};

	Parms.Style = Style;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.SetKeyBinderButtonPadding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHorizontalBoxSlot*               HBox                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::SetKeyBinderButtonPadding(class UHorizontalBoxSlot* HBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "SetKeyBinderButtonPadding");

	Params::WBP_KeyBinderBase_C_SetKeyBinderButtonPadding Parms{};

	Parms.HBox = HBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.RemoveDuplicateBindingInSameContext
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFKeyBinderButtonData            KeyBinderButtonData                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bForceCancelKeyChange                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDuplicateFound                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::RemoveDuplicateBindingInSameContext(const struct FFKeyBinderButtonData& KeyBinderButtonData, bool* bForceCancelKeyChange, bool* bDuplicateFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "RemoveDuplicateBindingInSameContext");

	Params::WBP_KeyBinderBase_C_RemoveDuplicateBindingInSameContext Parms{};

	Parms.KeyBinderButtonData = std::move(KeyBinderButtonData);

	UObject::ProcessEvent(Func, &Parms);

	if (bForceCancelKeyChange != nullptr)
		*bForceCancelKeyChange = Parms.bForceCancelKeyChange;

	if (bDuplicateFound != nullptr)
		*bDuplicateFound = Parms.bDuplicateFound;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.RemoveDuplicateAndAddNewBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFKeyBinderButtonData            Param_DuplicateBinderButtonData                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FPlayerKeyMapping                Param_DuplicatePlayerKeyMapping                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::RemoveDuplicateAndAddNewBinding(const struct FFKeyBinderButtonData& Param_DuplicateBinderButtonData, const struct FPlayerKeyMapping& Param_DuplicatePlayerKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "RemoveDuplicateAndAddNewBinding");

	Params::WBP_KeyBinderBase_C_RemoveDuplicateAndAddNewBinding Parms{};

	Parms.Param_DuplicateBinderButtonData = std::move(Param_DuplicateBinderButtonData);
	Parms.Param_DuplicatePlayerKeyMapping = std::move(Param_DuplicatePlayerKeyMapping);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.RefreshWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::RefreshWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "RefreshWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.RefreshKeyBinderButtons
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::RefreshKeyBinderButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "RefreshKeyBinderButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "PreConstruct");

	Params::WBP_KeyBinderBase_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OverrideWidgetStyleFromConfig
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OverrideWidgetStyleFromConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OverrideWidgetStyleFromConfig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnStartKeyChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_KeyBinderButtonBase_C*       KeyBinderButton                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnStartKeyChange(class UWBP_KeyBinderButtonBase_C* KeyBinderButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnStartKeyChange");

	Params::WBP_KeyBinderBase_C_OnStartKeyChange Parms{};

	Parms.KeyBinderButton = KeyBinderButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnSetupKeyBinder
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnSetupKeyBinder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnSetupKeyBinder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnSetHighlightEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWidgetStyleState                       Param_HighlightState                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_KeyBinderBase_C::OnSetHighlightEffect(EWidgetStyleState Param_HighlightState, bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnSetHighlightEffect");

	Params::WBP_KeyBinderBase_C_OnSetHighlightEffect Parms{};

	Parms.Param_HighlightState = Param_HighlightState;
	Parms.bPlaySound = bPlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_KeyBinderBase_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnRemovedFromFocusPath");

	Params::WBP_KeyBinderBase_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnQueryRemoveDuplicateBinding
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnQueryRemoveDuplicateBinding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnQueryRemoveDuplicateBinding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnPreviewMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_KeyBinderBase_C::OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnPreviewMouseButtonDown");

	Params::WBP_KeyBinderBase_C_OnPreviewMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnPressedUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_KeyBinderBase_C::OnPressedUp(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnPressedUp");

	Params::WBP_KeyBinderBase_C_OnPressedUp Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnPressedSelect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_KeyBinderBase_C::OnPressedSelect(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnPressedSelect");

	Params::WBP_KeyBinderBase_C_OnPressedSelect Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnPressedRight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_KeyBinderBase_C::OnPressedRight(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnPressedRight");

	Params::WBP_KeyBinderBase_C_OnPressedRight Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnPressedLeft
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_KeyBinderBase_C::OnPressedLeft(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnPressedLeft");

	Params::WBP_KeyBinderBase_C_OnPressedLeft Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnPressedDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_KeyBinderBase_C::OnPressedDown(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnPressedDown");

	Params::WBP_KeyBinderBase_C_OnPressedDown Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnPressedBack
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_KeyBinderBase_C::OnPressedBack(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnPressedBack");

	Params::WBP_KeyBinderBase_C_OnPressedBack Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnParentMenuSetupComplete
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnParentMenuSetupComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnParentMenuSetupComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnMouseWheel
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_KeyBinderBase_C::OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnMouseWheel");

	Params::WBP_KeyBinderBase_C_OnMouseWheel Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnLeaveEditMode
// (BlueprintCallable, BlueprintEvent)

void UWBP_KeyBinderBase_C::OnLeaveEditMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnLeaveEditMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_KeyBinderBase.WBP_KeyBinderBase_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_KeyBinderBase_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_KeyBinderBase_C", "OnKeyUp");

	Params::WBP_KeyBinderBase_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

