#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_MH_Merchant

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "MantleType_structs.hpp"
#include "Engine_structs.hpp"
#include "Mantle_Asset_structs.hpp"
#include "ALTF42_ItemList_OnlyBoxData_structs.hpp"
#include "AI_StepTalk_WhoOrWhere_structs.hpp"
#include "ALS_Base_CharacterBP_classes.hpp"
#include "ALS_OverlayState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AI_MH_Merchant.AI_MH_Merchant_C
// 0x0330 (0x0E80 - 0x0B50)
class AAI_MH_Merchant_C final : public AALS_Base_CharacterBP_C
{
public:
	uint8                                         Pad_394B[0x6];                                     // 0x0B42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_AI_MH_Merchant_C;                   // 0x0B48(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_L_HandBandage;                                  // 0x0B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_L_LegBandage;                                   // 0x0B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_R_HandBandage;                                  // 0x0B60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Head_Bandage;                                   // 0x0B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ShopOwner_Horn;                                 // 0x0B70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ShopOwner_Hat;                                  // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ShopOwner_EyeLashes;                            // 0x0B80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ShopOwner_Mustache;                             // 0x0B88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ShopOwner_Pocket;                               // 0x0B90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MerchantBody;                                      // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULODSyncComponent*                      LODSync;                                           // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Wheelchair;                                        // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Hit_Head_Coillsion;                                // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Hit_Top_Coillsion;                                 // 0x0BB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Char_TalkOverlap_Check;                            // 0x0BC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Foot_Block_SM;                                     // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HeldObjectRoot;                                    // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          Mantle_2m_Default;                                 // 0x0BE8(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          Mantle_1m_Default;                                 // 0x0C28(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          Mantle_1m_RH;                                      // 0x0C68(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          Mantle_1m_LH;                                      // 0x0CA8(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          Mantle_1m_2H;                                      // 0x0CE8(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          Mantle_1m_Box;                                     // 0x0D28(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LandRoll_Default;                                  // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpFront_Default;                                // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LandRoll_RH;                                       // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LandRoll_LH;                                       // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LandRoll_2H;                                       // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpFront_RH;                                     // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpFront_LH;                                     // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpFront_2H;                                     // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpBack_Default;                                 // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpBack_RH;                                      // 0x0DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpBack_LH;                                      // 0x0DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GetUpBack_2H;                                      // 0x0DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 ALTF42_GI;                                         // 0x0DC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ImPlayer;                                          // 0x0DD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Damage_;                                           // 0x0DD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAI_StepTalk_WhoOrWhere                       Who_NPC;                                           // 0x0DD2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394C[0x5];                                     // 0x0DD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Hit_Talk;                                          // 0x0DD8(0x0018)(Edit, BlueprintVisible)
	class FText                                   NPC_NAme;                                          // 0x0DF0(0x0018)(Edit, BlueprintVisible)
	class UObject*                                NPC_Image;                                         // 0x0E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Hit_;                                              // 0x0E10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop_Active;                                       // 0x0E11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_ActionMode;                                    // 0x0E12(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394D[0x5];                                     // 0x0E13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Talk_Text;                                         // 0x0E18(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABase_Shop_BP_C*                        MoveShop_BP;                                       // 0x0E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      NPC_Action_Anim;                                   // 0x0E38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           NPC_Hit_Anim;                                      // 0x0E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Random_Roam_;                                      // 0x0E48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394E[0x3];                                     // 0x0E49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Item_Plus_Value;                                   // 0x0E4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALTF42_ItemList_OnlyBoxData                  NPC_Give_Item;                                     // 0x0E50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_Talking_;                                      // 0x0E51(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394F[0x6];                                     // 0x0E52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Action_Start_Time;                                 // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANPC_Flag_BP_C*                         Flag_01;                                           // 0x0E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ANPC_Flag_BP_C*                         Flag_02;                                           // 0x0E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          GoAway_;                                           // 0x0E70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AttachToHand(class UStaticMesh* NewStaticMesh, class USkeletalMesh* NewSkeletalMesh, class UClass* NewAnimClass, bool LeftHand, const struct FVector& Offset);
	void BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ClearHeldObject();
	void ExecuteUbergraph_AI_MH_Merchant(int32 EntryPoint);
	void Hit_Event();
	void Hit_Reset();
	void NPC_Acting_Event(bool Param_NPC_ActionMode, bool Param_Loop_Active);
	void NPC_GoAway_Event();
	void OnFail_848D385146EC7379AA16878FBC45F5CB(EPathFollowingResult MovementResult);
	void OnSuccess_848D385146EC7379AA16878FBC45F5CB(EPathFollowingResult MovementResult);
	void Shop_Move(class AActor* TargetActor, class ABase_Shop_BP_C* Param_MoveShop_BP);
	void UpdateHeldObject();
	void UserConstructionScript();
	struct FTransform BPI_Get_3P_PivotTarget();
	void BPI_Get_3P_TraceParams(struct FVector* TraceOrigin, double* TraceRadius, ETraceTypeQuery* TraceChannel);
	struct FVector BPI_Get_FP_CameraTarget();
	void BPI_GetAI_NPC_ActionMode(bool* Param_NPC_ActionMode, double* ActionStartTime, class UAnimSequenceBase** NPC_ActionAnim, bool* LoopActive, EAI_StepTalk_WhoOrWhere* Param_Who_NPC, bool* Param_Hit_);
	class UAnimMontage* GetGetUpAnimation(bool Param_RagdollFaceUp);
	struct FMantle_Asset GetMantleAsset(EMantleType MantleType);
	class UAnimMontage* GetRollAnimation();
	void MantleEnd();
	void MantleStart(double MantleHeight, const struct FALS_ComponentAndTransform& MantleLedgeWS, EMantleType MantleType);
	void OnOverlayStateChanged(EALS_OverlayState NewOverlayState);
	void RagdollEnd();
	void RagdollStart();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AI_MH_Merchant_C">();
	}
	static class AAI_MH_Merchant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAI_MH_Merchant_C>();
	}
};
static_assert(alignof(AAI_MH_Merchant_C) == 0x000010, "Wrong alignment on AAI_MH_Merchant_C");
static_assert(sizeof(AAI_MH_Merchant_C) == 0x000E80, "Wrong size on AAI_MH_Merchant_C");
static_assert(offsetof(AAI_MH_Merchant_C, UberGraphFrame_AI_MH_Merchant_C) == 0x000B48, "Member 'AAI_MH_Merchant_C::UberGraphFrame_AI_MH_Merchant_C' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_L_HandBandage) == 0x000B50, "Member 'AAI_MH_Merchant_C::SM_L_HandBandage' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_L_LegBandage) == 0x000B58, "Member 'AAI_MH_Merchant_C::SM_L_LegBandage' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_R_HandBandage) == 0x000B60, "Member 'AAI_MH_Merchant_C::SM_R_HandBandage' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_Head_Bandage) == 0x000B68, "Member 'AAI_MH_Merchant_C::SM_Head_Bandage' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_ShopOwner_Horn) == 0x000B70, "Member 'AAI_MH_Merchant_C::SM_ShopOwner_Horn' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_ShopOwner_Hat) == 0x000B78, "Member 'AAI_MH_Merchant_C::SM_ShopOwner_Hat' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_ShopOwner_EyeLashes) == 0x000B80, "Member 'AAI_MH_Merchant_C::SM_ShopOwner_EyeLashes' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_ShopOwner_Mustache) == 0x000B88, "Member 'AAI_MH_Merchant_C::SM_ShopOwner_Mustache' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SM_ShopOwner_Pocket) == 0x000B90, "Member 'AAI_MH_Merchant_C::SM_ShopOwner_Pocket' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, MerchantBody) == 0x000B98, "Member 'AAI_MH_Merchant_C::MerchantBody' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, LODSync) == 0x000BA0, "Member 'AAI_MH_Merchant_C::LODSync' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Wheelchair) == 0x000BA8, "Member 'AAI_MH_Merchant_C::Wheelchair' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Hit_Head_Coillsion) == 0x000BB0, "Member 'AAI_MH_Merchant_C::Hit_Head_Coillsion' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Hit_Top_Coillsion) == 0x000BB8, "Member 'AAI_MH_Merchant_C::Hit_Top_Coillsion' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Char_TalkOverlap_Check) == 0x000BC0, "Member 'AAI_MH_Merchant_C::Char_TalkOverlap_Check' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Foot_Block_SM) == 0x000BC8, "Member 'AAI_MH_Merchant_C::Foot_Block_SM' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, HeldObjectRoot) == 0x000BD0, "Member 'AAI_MH_Merchant_C::HeldObjectRoot' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, StaticMesh) == 0x000BD8, "Member 'AAI_MH_Merchant_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, SkeletalMesh) == 0x000BE0, "Member 'AAI_MH_Merchant_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Mantle_2m_Default) == 0x000BE8, "Member 'AAI_MH_Merchant_C::Mantle_2m_Default' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Mantle_1m_Default) == 0x000C28, "Member 'AAI_MH_Merchant_C::Mantle_1m_Default' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Mantle_1m_RH) == 0x000C68, "Member 'AAI_MH_Merchant_C::Mantle_1m_RH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Mantle_1m_LH) == 0x000CA8, "Member 'AAI_MH_Merchant_C::Mantle_1m_LH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Mantle_1m_2H) == 0x000CE8, "Member 'AAI_MH_Merchant_C::Mantle_1m_2H' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Mantle_1m_Box) == 0x000D28, "Member 'AAI_MH_Merchant_C::Mantle_1m_Box' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, LandRoll_Default) == 0x000D68, "Member 'AAI_MH_Merchant_C::LandRoll_Default' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpFront_Default) == 0x000D70, "Member 'AAI_MH_Merchant_C::GetUpFront_Default' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, LandRoll_RH) == 0x000D78, "Member 'AAI_MH_Merchant_C::LandRoll_RH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, LandRoll_LH) == 0x000D80, "Member 'AAI_MH_Merchant_C::LandRoll_LH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, LandRoll_2H) == 0x000D88, "Member 'AAI_MH_Merchant_C::LandRoll_2H' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpFront_RH) == 0x000D90, "Member 'AAI_MH_Merchant_C::GetUpFront_RH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpFront_LH) == 0x000D98, "Member 'AAI_MH_Merchant_C::GetUpFront_LH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpFront_2H) == 0x000DA0, "Member 'AAI_MH_Merchant_C::GetUpFront_2H' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpBack_Default) == 0x000DA8, "Member 'AAI_MH_Merchant_C::GetUpBack_Default' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpBack_RH) == 0x000DB0, "Member 'AAI_MH_Merchant_C::GetUpBack_RH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpBack_LH) == 0x000DB8, "Member 'AAI_MH_Merchant_C::GetUpBack_LH' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GetUpBack_2H) == 0x000DC0, "Member 'AAI_MH_Merchant_C::GetUpBack_2H' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, ALTF42_GI) == 0x000DC8, "Member 'AAI_MH_Merchant_C::ALTF42_GI' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, ImPlayer) == 0x000DD0, "Member 'AAI_MH_Merchant_C::ImPlayer' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Damage_) == 0x000DD1, "Member 'AAI_MH_Merchant_C::Damage_' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Who_NPC) == 0x000DD2, "Member 'AAI_MH_Merchant_C::Who_NPC' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Hit_Talk) == 0x000DD8, "Member 'AAI_MH_Merchant_C::Hit_Talk' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, NPC_NAme) == 0x000DF0, "Member 'AAI_MH_Merchant_C::NPC_NAme' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, NPC_Image) == 0x000E08, "Member 'AAI_MH_Merchant_C::NPC_Image' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Hit_) == 0x000E10, "Member 'AAI_MH_Merchant_C::Hit_' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Loop_Active) == 0x000E11, "Member 'AAI_MH_Merchant_C::Loop_Active' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, NPC_ActionMode) == 0x000E12, "Member 'AAI_MH_Merchant_C::NPC_ActionMode' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Talk_Text) == 0x000E18, "Member 'AAI_MH_Merchant_C::Talk_Text' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, MoveShop_BP) == 0x000E30, "Member 'AAI_MH_Merchant_C::MoveShop_BP' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, NPC_Action_Anim) == 0x000E38, "Member 'AAI_MH_Merchant_C::NPC_Action_Anim' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, NPC_Hit_Anim) == 0x000E40, "Member 'AAI_MH_Merchant_C::NPC_Hit_Anim' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Random_Roam_) == 0x000E48, "Member 'AAI_MH_Merchant_C::Random_Roam_' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Item_Plus_Value) == 0x000E4C, "Member 'AAI_MH_Merchant_C::Item_Plus_Value' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, NPC_Give_Item) == 0x000E50, "Member 'AAI_MH_Merchant_C::NPC_Give_Item' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, NPC_Talking_) == 0x000E51, "Member 'AAI_MH_Merchant_C::NPC_Talking_' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Action_Start_Time) == 0x000E58, "Member 'AAI_MH_Merchant_C::Action_Start_Time' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Flag_01) == 0x000E60, "Member 'AAI_MH_Merchant_C::Flag_01' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, Flag_02) == 0x000E68, "Member 'AAI_MH_Merchant_C::Flag_02' has a wrong offset!");
static_assert(offsetof(AAI_MH_Merchant_C, GoAway_) == 0x000E70, "Member 'AAI_MH_Merchant_C::GoAway_' has a wrong offset!");

}

