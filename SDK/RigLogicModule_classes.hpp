#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RigLogicModule

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class RigLogicModule.DNAIndexMapping
// 0x0000 (0x0028 - 0x0028)
class UDNAIndexMapping final : public UAssetUserData
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DNAIndexMapping">();
	}
	static class UDNAIndexMapping* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDNAIndexMapping>();
	}
};
static_assert(alignof(UDNAIndexMapping) == 0x000008, "Wrong alignment on UDNAIndexMapping");
static_assert(sizeof(UDNAIndexMapping) == 0x000028, "Wrong size on UDNAIndexMapping");

// Class RigLogicModule.DNAAsset
// 0x00A8 (0x00D0 - 0x0028)
class UDNAAsset final : public UAssetUserData
{
public:
	class FString                                 DnaFileName;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF8[0x98];                                    // 0x0038(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DNAAsset">();
	}
	static class UDNAAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDNAAsset>();
	}
};
static_assert(alignof(UDNAAsset) == 0x000008, "Wrong alignment on UDNAAsset");
static_assert(sizeof(UDNAAsset) == 0x0000D0, "Wrong size on UDNAAsset");
static_assert(offsetof(UDNAAsset, DnaFileName) == 0x000028, "Member 'UDNAAsset::DnaFileName' has a wrong offset!");

// Class RigLogicModule.SkelMeshDNAUtils
// 0x0000 (0x0028 - 0x0028)
class USkelMeshDNAUtils final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkelMeshDNAUtils">();
	}
	static class USkelMeshDNAUtils* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkelMeshDNAUtils>();
	}
};
static_assert(alignof(USkelMeshDNAUtils) == 0x000008, "Wrong alignment on USkelMeshDNAUtils");
static_assert(sizeof(USkelMeshDNAUtils) == 0x000028, "Wrong size on USkelMeshDNAUtils");

}

