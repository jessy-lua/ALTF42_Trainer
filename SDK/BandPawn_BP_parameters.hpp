#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BandPawn_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BandPawn_BP.BandPawn_BP_C.BandSound_SetPlay
// 0x0008 (0x0008 - 0x0000)
struct BandPawn_BP_C_BandSound_SetPlay final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandPawn_BP_C_BandSound_SetPlay) == 0x000008, "Wrong alignment on BandPawn_BP_C_BandSound_SetPlay");
static_assert(sizeof(BandPawn_BP_C_BandSound_SetPlay) == 0x000008, "Wrong size on BandPawn_BP_C_BandSound_SetPlay");
static_assert(offsetof(BandPawn_BP_C_BandSound_SetPlay, Sound) == 0x000000, "Member 'BandPawn_BP_C_BandSound_SetPlay::Sound' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_BoyHit_Collision_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_GoblinHit_Collision_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BandPawn_BP_C_BndEvt__BandPawn_BP_ManHit_Collision_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.ExecuteUbergraph_BandPawn_BP
// 0x0400 (0x0400 - 0x0000)
struct BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_2;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_2;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_2;                  // 0x0038(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8A[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABase_Chick_Projectile_C*               K2Node_DynamicCast_AsBase_Chick_Projectile;        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8B[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_1;         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_1;        // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_1;                  // 0x0168(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0280(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABase_Chick_Projectile_C*               K2Node_DynamicCast_AsBase_Chick_Projectile_1;      // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8C[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABase_Chick_Projectile_C*               K2Node_DynamicCast_AsBase_Chick_Projectile_2;      // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8D[0x3];                                     // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Fade_IN_Time;                   // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxVolume;                      // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAudioFaderCurve                              K2Node_CustomEvent_FadeCurve;                      // 0x038C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8E[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_FadeOutTime;                    // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Fade_Out_Volume;                // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAmbientSound*                          K2Node_CustomEvent_Get_Sound;                      // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FadeInDuration;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FadeVolumeLevel_1;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FadeOutDuration;                // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FadeVolumeLevel;                // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8F[0x1];                                     // 0x03B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F90[0x5];                                     // 0x03BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABandPawn_BP_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x03C8(0x0010)(ReferenceParm)
	class ABandPawn_BP_C*                         CallFunc_Array_Get_Item;                           // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F91[0x3];                                     // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Man_Hit__ImplicitCast;          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Boy_Hit__ImplicitCast;          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Goblin_Hit__ImplicitCast;       // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP) == 0x000008, "Wrong alignment on BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP");
static_assert(sizeof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP) == 0x000400, "Wrong size on BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, EntryPoint) == 0x000000, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_IsClosed_Variable_1) == 0x000007, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_HitComponent_2) == 0x000008, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000010, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000018, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_NormalImpulse_2) == 0x000020, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_NormalImpulse_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_Hit_2) == 0x000038, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_Hit_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_int_Variable) == 0x000120, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_DynamicCast_AsBase_Chick_Projectile) == 0x000128, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_DynamicCast_AsBase_Chick_Projectile' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_HitComponent_1) == 0x000138, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000140, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000148, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_NormalImpulse_1) == 0x000150, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_NormalImpulse_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_Hit_1) == 0x000168, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_HitComponent) == 0x000250, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000258, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000260, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000268, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_ComponentBoundEvent_Hit) == 0x000280, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_DynamicCast_AsBase_Chick_Projectile_1) == 0x000368, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_DynamicCast_AsBase_Chick_Projectile_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_DynamicCast_bSuccess_1) == 0x000370, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_DynamicCast_AsBase_Chick_Projectile_2) == 0x000378, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_DynamicCast_AsBase_Chick_Projectile_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_DynamicCast_bSuccess_2) == 0x000380, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_Fade_IN_Time) == 0x000384, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_Fade_IN_Time' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_MaxVolume) == 0x000388, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_MaxVolume' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_FadeCurve) == 0x00038C, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_FadeCurve' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_FadeOutTime) == 0x000390, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_FadeOutTime' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_Fade_Out_Volume) == 0x000394, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_Fade_Out_Volume' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_Get_Sound) == 0x000398, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_Get_Sound' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_FadeInDuration) == 0x0003A0, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_FadeInDuration' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_FadeVolumeLevel_1) == 0x0003A4, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_FadeVolumeLevel_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_FadeOutDuration) == 0x0003A8, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_FadeOutDuration' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_FadeVolumeLevel) == 0x0003AC, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_FadeVolumeLevel' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_Has_Been_Initd_Variable_2) == 0x0003B0, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_Has_Been_Initd_Variable_3) == 0x0003B1, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_IsClosed_Variable_2) == 0x0003B2, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003B4, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0003B8, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, Temp_bool_IsClosed_Variable_3) == 0x0003B9, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_SwitchInteger_CmpSuccess) == 0x0003BA, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_CustomEvent_Sound) == 0x0003C0, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, CallFunc_GetAllActorsOfClass_OutActors) == 0x0003C8, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, CallFunc_Array_Get_Item) == 0x0003D8, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, CallFunc_Array_Length_ReturnValue) == 0x0003E0, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0003E4, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_VariableSet_Man_Hit__ImplicitCast) == 0x0003E8, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_VariableSet_Man_Hit__ImplicitCast' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_VariableSet_Boy_Hit__ImplicitCast) == 0x0003F0, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_VariableSet_Boy_Hit__ImplicitCast' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP, K2Node_VariableSet_Goblin_Hit__ImplicitCast) == 0x0003F8, "Member 'BandPawn_BP_C_ExecuteUbergraph_BandPawn_BP::K2Node_VariableSet_Goblin_Hit__ImplicitCast' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.LevelBGM_Get_Start
// 0x0010 (0x0010 - 0x0000)
struct BandPawn_BP_C_LevelBGM_Get_Start final
{
public:
	class AAmbientSound*                          Get_Sound;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInDuration;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolumeLevel;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandPawn_BP_C_LevelBGM_Get_Start) == 0x000008, "Wrong alignment on BandPawn_BP_C_LevelBGM_Get_Start");
static_assert(sizeof(BandPawn_BP_C_LevelBGM_Get_Start) == 0x000010, "Wrong size on BandPawn_BP_C_LevelBGM_Get_Start");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Get_Start, Get_Sound) == 0x000000, "Member 'BandPawn_BP_C_LevelBGM_Get_Start::Get_Sound' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Get_Start, FadeInDuration) == 0x000008, "Member 'BandPawn_BP_C_LevelBGM_Get_Start::FadeInDuration' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Get_Start, FadeVolumeLevel) == 0x00000C, "Member 'BandPawn_BP_C_LevelBGM_Get_Start::FadeVolumeLevel' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.LevelBGM_Get_Stop
// 0x0008 (0x0008 - 0x0000)
struct BandPawn_BP_C_LevelBGM_Get_Stop final
{
public:
	float                                         FadeOutDuration;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolumeLevel;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandPawn_BP_C_LevelBGM_Get_Stop) == 0x000004, "Wrong alignment on BandPawn_BP_C_LevelBGM_Get_Stop");
static_assert(sizeof(BandPawn_BP_C_LevelBGM_Get_Stop) == 0x000008, "Wrong size on BandPawn_BP_C_LevelBGM_Get_Stop");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Get_Stop, FadeOutDuration) == 0x000000, "Member 'BandPawn_BP_C_LevelBGM_Get_Stop::FadeOutDuration' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Get_Stop, FadeVolumeLevel) == 0x000004, "Member 'BandPawn_BP_C_LevelBGM_Get_Stop::FadeVolumeLevel' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.LevelBGM_Spawn_Start
// 0x000C (0x000C - 0x0000)
struct BandPawn_BP_C_LevelBGM_Spawn_Start final
{
public:
	float                                         Fade_IN_Time;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxVolume;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAudioFaderCurve                              FadeCurve;                                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandPawn_BP_C_LevelBGM_Spawn_Start) == 0x000004, "Wrong alignment on BandPawn_BP_C_LevelBGM_Spawn_Start");
static_assert(sizeof(BandPawn_BP_C_LevelBGM_Spawn_Start) == 0x00000C, "Wrong size on BandPawn_BP_C_LevelBGM_Spawn_Start");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Spawn_Start, Fade_IN_Time) == 0x000000, "Member 'BandPawn_BP_C_LevelBGM_Spawn_Start::Fade_IN_Time' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Spawn_Start, MaxVolume) == 0x000004, "Member 'BandPawn_BP_C_LevelBGM_Spawn_Start::MaxVolume' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Spawn_Start, FadeCurve) == 0x000008, "Member 'BandPawn_BP_C_LevelBGM_Spawn_Start::FadeCurve' has a wrong offset!");

// Function BandPawn_BP.BandPawn_BP_C.LevelBGM_Spawn_Stop
// 0x0008 (0x0008 - 0x0000)
struct BandPawn_BP_C_LevelBGM_Spawn_Stop final
{
public:
	float                                         FadeOutTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fade_Out_Volume;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandPawn_BP_C_LevelBGM_Spawn_Stop) == 0x000004, "Wrong alignment on BandPawn_BP_C_LevelBGM_Spawn_Stop");
static_assert(sizeof(BandPawn_BP_C_LevelBGM_Spawn_Stop) == 0x000008, "Wrong size on BandPawn_BP_C_LevelBGM_Spawn_Stop");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Spawn_Stop, FadeOutTime) == 0x000000, "Member 'BandPawn_BP_C_LevelBGM_Spawn_Stop::FadeOutTime' has a wrong offset!");
static_assert(offsetof(BandPawn_BP_C_LevelBGM_Spawn_Stop, Fade_Out_Volume) == 0x000004, "Member 'BandPawn_BP_C_LevelBGM_Spawn_Stop::Fade_Out_Volume' has a wrong offset!");

}

