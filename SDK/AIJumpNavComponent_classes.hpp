#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIJumpNavComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIJumpNavComponent.AIJumpNavComponent_C
// 0x0028 (0x00C8 - 0x00A0)
class UAIJumpNavComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 Navigation_Filter_Class;                           // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Use_Jump_Function;                                 // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Face_Jump_Destination;                             // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EDrawDebugTrace                               Draw_Debug_Path;                                   // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Override__Automatic_Jump_Arc_;                     // 0x00B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Automatic_Jump_Arc;                                // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3474[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Lowest_Range_Arc;                                  // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Highest_Range_Arc;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void AIJumpNavComponent_AutoGenFunc(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void Calculate_Jump(const struct FVector& End_Pos, double Arc_Param, struct FVector* OutLaunchVelocity, bool* Obstructed);
	void ExecuteUbergraph_AIJumpNavComponent(int32 EntryPoint);
	void Get_Owning_Character(class ACharacter** Character);
	void Jump_Character_To(const struct FVector& EndPos, double ArcParam, bool NavLink_Automatic_Jump_Arc);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIJumpNavComponent_C">();
	}
	static class UAIJumpNavComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIJumpNavComponent_C>();
	}
};
static_assert(alignof(UAIJumpNavComponent_C) == 0x000008, "Wrong alignment on UAIJumpNavComponent_C");
static_assert(sizeof(UAIJumpNavComponent_C) == 0x0000C8, "Wrong size on UAIJumpNavComponent_C");
static_assert(offsetof(UAIJumpNavComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UAIJumpNavComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Navigation_Filter_Class) == 0x0000A8, "Member 'UAIJumpNavComponent_C::Navigation_Filter_Class' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Use_Jump_Function) == 0x0000B0, "Member 'UAIJumpNavComponent_C::Use_Jump_Function' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Face_Jump_Destination) == 0x0000B1, "Member 'UAIJumpNavComponent_C::Face_Jump_Destination' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Draw_Debug_Path) == 0x0000B2, "Member 'UAIJumpNavComponent_C::Draw_Debug_Path' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Override__Automatic_Jump_Arc_) == 0x0000B3, "Member 'UAIJumpNavComponent_C::Override__Automatic_Jump_Arc_' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Automatic_Jump_Arc) == 0x0000B4, "Member 'UAIJumpNavComponent_C::Automatic_Jump_Arc' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Lowest_Range_Arc) == 0x0000B8, "Member 'UAIJumpNavComponent_C::Lowest_Range_Arc' has a wrong offset!");
static_assert(offsetof(UAIJumpNavComponent_C, Highest_Range_Arc) == 0x0000C0, "Member 'UAIJumpNavComponent_C::Highest_Range_Arc' has a wrong offset!");

}

