#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_Shop_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Base_Shop_BP.Base_Shop_BP_C
// 0x00C0 (0x0358 - 0x0298)
class ABase_Shop_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ShopEnable_Overlap;                                // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Bot_Item_2;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Bot_Item_1;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       BotItem_Spawn_Root;                                // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       WallRoot;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   ShopOwnerTag;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShopOpen_;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1187[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF42_InGame_PC_Loco_C*               ALTF42_PC;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 ALTF4_2_GI;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       ALTF4_2_Char;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ShopIN_;                                           // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShopOverlap_;                                      // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1188[0x2];                                     // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NowSelect_intValue;                                // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AShopView_Item_BP_C*                    Item_01;                                           // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AShopView_Item_BP_C*                    Item_02;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DontMoveShop;                                      // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DontTalkShop;                                      // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1189[0x2];                                     // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Item01_Integer;                                    // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Item02_Integer;                                    // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118A[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATeleportTarget_BP_C*                   ShopOwner_MoveTarget;                              // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Costume01_Already;                                 // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume02_Already;                                 // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume03_Already;                                 // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume04_Already;                                 // 0x0333(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume05_Already;                                 // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume06_Already;                                 // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume07_Already;                                 // 0x0336(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume08_Already;                                 // 0x0337(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Costume_SoldOut;                                   // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118B[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASoldOut_BP_C*                          ShopSign_BP;                                       // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Item01_Buy;                                        // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Item02_Buy;                                        // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118C[0x2];                                     // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Before_Item01_Integer;                             // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Before_Item02_Integer;                             // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Base_Shop_BP_ShopEnable_Overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Base_Shop_BP_ShopEnable_Overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Char_Die_Random_Respawn();
	void ExecuteUbergraph_Base_Shop_BP(int32 EntryPoint);
	void Get_ShopItem_Cost_Event();
	void IN_Reset();
	void InpActEvt_AnyKey_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_IA_Interaction_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void Out_Reset();
	void Owner_Arrival();
	void ReceiveBeginPlay();
	void Select_Item();
	void Shop_Buy();
	void Shop_Use_Event();
	void Shop_Where_();
	void SoldOut_Shop_Out_Event();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Base_Shop_BP_C">();
	}
	static class ABase_Shop_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABase_Shop_BP_C>();
	}
};
static_assert(alignof(ABase_Shop_BP_C) == 0x000008, "Wrong alignment on ABase_Shop_BP_C");
static_assert(sizeof(ABase_Shop_BP_C) == 0x000358, "Wrong size on ABase_Shop_BP_C");
static_assert(offsetof(ABase_Shop_BP_C, UberGraphFrame) == 0x000298, "Member 'ABase_Shop_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ShopEnable_Overlap) == 0x0002A0, "Member 'ABase_Shop_BP_C::ShopEnable_Overlap' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Bot_Item_2) == 0x0002A8, "Member 'ABase_Shop_BP_C::Bot_Item_2' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Bot_Item_1) == 0x0002B0, "Member 'ABase_Shop_BP_C::Bot_Item_1' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, BotItem_Spawn_Root) == 0x0002B8, "Member 'ABase_Shop_BP_C::BotItem_Spawn_Root' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Camera) == 0x0002C0, "Member 'ABase_Shop_BP_C::Camera' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, WallRoot) == 0x0002C8, "Member 'ABase_Shop_BP_C::WallRoot' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABase_Shop_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ShopOwnerTag) == 0x0002D8, "Member 'ABase_Shop_BP_C::ShopOwnerTag' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ShopOpen_) == 0x0002E0, "Member 'ABase_Shop_BP_C::ShopOpen_' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ALTF42_PC) == 0x0002E8, "Member 'ABase_Shop_BP_C::ALTF42_PC' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ALTF4_2_GI) == 0x0002F0, "Member 'ABase_Shop_BP_C::ALTF4_2_GI' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ALTF4_2_Char) == 0x0002F8, "Member 'ABase_Shop_BP_C::ALTF4_2_Char' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ShopIN_) == 0x000300, "Member 'ABase_Shop_BP_C::ShopIN_' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ShopOverlap_) == 0x000301, "Member 'ABase_Shop_BP_C::ShopOverlap_' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, NowSelect_intValue) == 0x000304, "Member 'ABase_Shop_BP_C::NowSelect_intValue' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Item_01) == 0x000308, "Member 'ABase_Shop_BP_C::Item_01' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Item_02) == 0x000310, "Member 'ABase_Shop_BP_C::Item_02' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, DontMoveShop) == 0x000318, "Member 'ABase_Shop_BP_C::DontMoveShop' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, DontTalkShop) == 0x000319, "Member 'ABase_Shop_BP_C::DontTalkShop' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Item01_Integer) == 0x00031C, "Member 'ABase_Shop_BP_C::Item01_Integer' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Item02_Integer) == 0x000320, "Member 'ABase_Shop_BP_C::Item02_Integer' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ShopOwner_MoveTarget) == 0x000328, "Member 'ABase_Shop_BP_C::ShopOwner_MoveTarget' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume01_Already) == 0x000330, "Member 'ABase_Shop_BP_C::Costume01_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume02_Already) == 0x000331, "Member 'ABase_Shop_BP_C::Costume02_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume03_Already) == 0x000332, "Member 'ABase_Shop_BP_C::Costume03_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume04_Already) == 0x000333, "Member 'ABase_Shop_BP_C::Costume04_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume05_Already) == 0x000334, "Member 'ABase_Shop_BP_C::Costume05_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume06_Already) == 0x000335, "Member 'ABase_Shop_BP_C::Costume06_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume07_Already) == 0x000336, "Member 'ABase_Shop_BP_C::Costume07_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume08_Already) == 0x000337, "Member 'ABase_Shop_BP_C::Costume08_Already' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Costume_SoldOut) == 0x000338, "Member 'ABase_Shop_BP_C::Costume_SoldOut' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, ShopSign_BP) == 0x000340, "Member 'ABase_Shop_BP_C::ShopSign_BP' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Item01_Buy) == 0x000348, "Member 'ABase_Shop_BP_C::Item01_Buy' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Item02_Buy) == 0x000349, "Member 'ABase_Shop_BP_C::Item02_Buy' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Before_Item01_Integer) == 0x00034C, "Member 'ABase_Shop_BP_C::Before_Item01_Integer' has a wrong offset!");
static_assert(offsetof(ABase_Shop_BP_C, Before_Item02_Integer) == 0x000350, "Member 'ABase_Shop_BP_C::Before_Item02_Integer' has a wrong offset!");

}

