#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EditableText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FFontStyle_structs.hpp"


namespace SDK::Params
{

// Function WBP_EditableText.WBP_EditableText_C.BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_EditableText.WBP_EditableText_C.BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_EditableText_C_BndEvt__WBP_EditableText_EditableText_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_EditableText.WBP_EditableText_C.ExecuteUbergraph_WBP_EditableText
// 0x0040 (0x0040 - 0x0000)
struct WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0020(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText) == 0x000008, "Wrong alignment on WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText");
static_assert(sizeof(WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText) == 0x000040, "Wrong size on WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText");
static_assert(offsetof(WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText, EntryPoint) == 0x000000, "Member 'WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText, K2Node_ComponentBoundEvent_Text_1) == 0x000008, "Member 'WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText, K2Node_ComponentBoundEvent_Text) == 0x000020, "Member 'WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText, K2Node_ComponentBoundEvent_CommitMethod) == 0x000038, "Member 'WBP_EditableText_C_ExecuteUbergraph_WBP_EditableText::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");

// Function WBP_EditableText.WBP_EditableText_C.OnTextChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_EditableText_C_OnTextChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_EditableText_C_OnTextChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditableText_C_OnTextChanged__DelegateSignature");
static_assert(sizeof(WBP_EditableText_C_OnTextChanged__DelegateSignature) == 0x000018, "Wrong size on WBP_EditableText_C_OnTextChanged__DelegateSignature");
static_assert(offsetof(WBP_EditableText_C_OnTextChanged__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditableText_C_OnTextChanged__DelegateSignature::Text' has a wrong offset!");

// Function WBP_EditableText.WBP_EditableText_C.OnTextCommitted__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_EditableText_C_OnTextCommitted__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditableText_C_OnTextCommitted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditableText_C_OnTextCommitted__DelegateSignature");
static_assert(sizeof(WBP_EditableText_C_OnTextCommitted__DelegateSignature) == 0x000020, "Wrong size on WBP_EditableText_C_OnTextCommitted__DelegateSignature");
static_assert(offsetof(WBP_EditableText_C_OnTextCommitted__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditableText_C_OnTextCommitted__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_OnTextCommitted__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_EditableText_C_OnTextCommitted__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_EditableText.WBP_EditableText_C.SetAppearance
// 0x03F0 (0x03F0 - 0x0000)
struct WBP_EditableText_C_SetAppearance final
{
public:
	struct FFFontStyle                            Font;                                              // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0090(0x0018)()
	class FText                                   CallFunc_TextToLower_ReturnValue;                  // 0x00A8(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00C0(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D8(0x0014)()
	uint8                                         Pad_3BF4[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEditableTextStyle                     K2Node_MakeStruct_EditableTextStyle;               // 0x00F0(0x02F0)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditableText_C_SetAppearance) == 0x000010, "Wrong alignment on WBP_EditableText_C_SetAppearance");
static_assert(sizeof(WBP_EditableText_C_SetAppearance) == 0x0003F0, "Wrong size on WBP_EditableText_C_SetAppearance");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, Font) == 0x000000, "Member 'WBP_EditableText_C_SetAppearance::Font' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, Color) == 0x000080, "Member 'WBP_EditableText_C_SetAppearance::Color' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, CallFunc_GetText_ReturnValue) == 0x000090, "Member 'WBP_EditableText_C_SetAppearance::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, CallFunc_TextToLower_ReturnValue) == 0x0000A8, "Member 'WBP_EditableText_C_SetAppearance::CallFunc_TextToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, CallFunc_TextToUpper_ReturnValue) == 0x0000C0, "Member 'WBP_EditableText_C_SetAppearance::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, K2Node_MakeStruct_SlateColor) == 0x0000D8, "Member 'WBP_EditableText_C_SetAppearance::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, K2Node_MakeStruct_EditableTextStyle) == 0x0000F0, "Member 'WBP_EditableText_C_SetAppearance::K2Node_MakeStruct_EditableTextStyle' has a wrong offset!");
static_assert(offsetof(WBP_EditableText_C_SetAppearance, K2Node_SwitchEnum_CmpSuccess) == 0x0003E0, "Member 'WBP_EditableText_C_SetAppearance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

