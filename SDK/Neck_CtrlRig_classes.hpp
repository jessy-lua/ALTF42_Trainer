#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Neck_CtrlRig

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"
#include "RigLogicModule_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass Neck_CtrlRig.Neck_CtrlRig_C
// 0x0018 (0x0628 - 0x0610)
class UNeck_CtrlRig_C final : public UControlRig
{
public:
	double                                        NeckCorrMultU;                                     // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NeckCorrMultM;                                     // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NeckCorrMultD;                                     // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Neck_CtrlRig_C">();
	}
	static class UNeck_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeck_CtrlRig_C>();
	}
};
static_assert(alignof(UNeck_CtrlRig_C) == 0x000008, "Wrong alignment on UNeck_CtrlRig_C");
static_assert(sizeof(UNeck_CtrlRig_C) == 0x000628, "Wrong size on UNeck_CtrlRig_C");
static_assert(offsetof(UNeck_CtrlRig_C, NeckCorrMultU) == 0x000610, "Member 'UNeck_CtrlRig_C::NeckCorrMultU' has a wrong offset!");
static_assert(offsetof(UNeck_CtrlRig_C, NeckCorrMultM) == 0x000618, "Member 'UNeck_CtrlRig_C::NeckCorrMultM' has a wrong offset!");
static_assert(offsetof(UNeck_CtrlRig_C, NeckCorrMultD) == 0x000620, "Member 'UNeck_CtrlRig_C::NeckCorrMultD' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass Neck_CtrlRig.RigVMMemory_Literal
// 0x00E0 (0x0108 - 0x0028)
class URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	class FName                                   RigVMModel___SetCurveValue_1_Curve__Const;         // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_2_1_Item__Const;         // 0x0030(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___GetTransform_2_1_Space__Const;        // 0x003C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___GetTransform_2_1_bInitial__Const;     // 0x003D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___GetTransform_1_2_1_bInitial__Const;   // 0x003E(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F00[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatRemap_1_SourceMinimum__Const; // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_SourceMaximum__Const; // 0x0044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_TargetMaximum__Const; // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_Curve__Const;           // 0x004C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_SourceMaximum__Const;  // 0x0054(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_2_Curve__Const;         // 0x0058(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_SourceMaximum__Const; // 0x0060(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_1_Curve__Const;       // 0x0064(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_SourceMaximum__Const; // 0x006C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_2_1_Curve__Const;       // 0x0070(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_SourceMaximum__Const; // 0x0078(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_1_1_Curve__Const;     // 0x007C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_2_Curve__Const;       // 0x0084(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_2_Item__Const;           // 0x008C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_1_SourceMaximum__Const; // 0x0098(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_3_Curve__Const;         // 0x009C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_2_2_Curve__Const;       // 0x00A4(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_2_SourceMaximum__Const; // 0x00AC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_1_2_Curve__Const;     // 0x00B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_2_1_1_Curve__Const;     // 0x00B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_1_SourceMaximum__Const; // 0x00C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_1_1_1_Curve__Const;   // 0x00C4(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_2_1_Curve__Const;     // 0x00CC(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_Item__Const;             // 0x00D4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_3_1_Curve__Const;       // 0x00E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_2_2_1_Curve__Const;     // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_1_2_1_Curve__Const;   // 0x00F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_2_1_1_1_Curve__Const;   // 0x00F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_1_1_1_1_1_Curve__Const; // 0x0100(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Literal">();
	}
	static class URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Literal>();
	}
};
static_assert(alignof(URigVMMemory_Literal) == 0x000008, "Wrong alignment on URigVMMemory_Literal");
static_assert(sizeof(URigVMMemory_Literal) == 0x000108, "Wrong size on URigVMMemory_Literal");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_Curve__Const) == 0x000028, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_2_1_Item__Const) == 0x000030, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_2_1_Space__Const) == 0x00003C, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_2_1_Space__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_2_1_bInitial__Const) == 0x00003D, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_2_1_bInitial__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_1_2_1_bInitial__Const) == 0x00003E, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_1_2_1_bInitial__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_1_SourceMinimum__Const) == 0x000040, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_1_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_1_SourceMaximum__Const) == 0x000044, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_1_TargetMaximum__Const) == 0x000048, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_1_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_Curve__Const) == 0x00004C, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_SourceMaximum__Const) == 0x000054, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_2_Curve__Const) == 0x000058, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_2_SourceMaximum__Const) == 0x000060, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_2_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_1_Curve__Const) == 0x000064, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_2_3_SourceMaximum__Const) == 0x00006C, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_2_3_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_2_1_Curve__Const) == 0x000070, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_2_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_2_4_SourceMaximum__Const) == 0x000078, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_2_4_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_1_1_Curve__Const) == 0x00007C, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_2_Curve__Const) == 0x000084, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_2_Item__Const) == 0x00008C, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_1_1_SourceMaximum__Const) == 0x000098, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_1_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_3_Curve__Const) == 0x00009C, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_3_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_2_2_Curve__Const) == 0x0000A4, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_2_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_2_2_SourceMaximum__Const) == 0x0000AC, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_2_2_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_1_2_Curve__Const) == 0x0000B0, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_1_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_2_1_1_Curve__Const) == 0x0000B8, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_2_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathFloatRemap_2_4_1_SourceMaximum__Const) == 0x0000C0, "Member 'URigVMMemory_Literal::RigVMModel___MathFloatRemap_2_4_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_1_1_1_Curve__Const) == 0x0000C4, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_1_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_2_1_Curve__Const) == 0x0000CC, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_2_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_Item__Const) == 0x0000D4, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_3_1_Curve__Const) == 0x0000E0, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_3_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_2_2_1_Curve__Const) == 0x0000E8, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_2_2_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_1_2_1_Curve__Const) == 0x0000F0, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_1_2_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_2_1_1_1_Curve__Const) == 0x0000F8, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_2_1_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetCurveValue_1_1_1_1_1_Curve__Const) == 0x000100, "Member 'URigVMMemory_Literal::RigVMModel___SetCurveValue_1_1_1_1_1_Curve__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass Neck_CtrlRig.RigVMMemory_Work
// 0x06E8 (0x0710 - 0x0028)
class URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	float                                         RigVMModel___MathFloatMul_Result;                  // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_A;                       // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_Result;              // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F01[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_Result;       // 0x0038(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_Local;      // 0x0050(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_2_1_Transform;           // 0x00B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_2_1_CachedIndex;         // 0x0110(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_2_1_Transform;         // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_1_CachedIndex;       // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_Value;        // 0x0190(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_Value;               // 0x01B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F02[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_CachedCurveIndex;     // 0x01B8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_Result;                // 0x01C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_A;                     // 0x01CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_Result;                // 0x01D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_Value;                 // 0x01D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_CachedCurveIndex;       // 0x01D8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_2_Result;                // 0x01E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_A;                     // 0x01EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_Result;              // 0x01F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_Value;               // 0x01F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_2_CachedCurveIndex;     // 0x01F8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_1_Result;              // 0x0208(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_1_A;                   // 0x020C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_Result;            // 0x0210(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_Value;             // 0x0214(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_1_CachedCurveIndex;   // 0x0218(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_2_1_Result;              // 0x0228(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_A;                   // 0x022C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_Result;            // 0x0230(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_Value;             // 0x0234(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_2_1_CachedCurveIndex;   // 0x0238(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_1_1_Result;            // 0x0248(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_1_1_A;                 // 0x024C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_1_Result;          // 0x0250(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_1_Value;           // 0x0254(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_1_1_CachedCurveIndex; // 0x0258(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_3_Result;                // 0x0268(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_A;                     // 0x026C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_1_Result;            // 0x0270(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F03[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_3_Result;     // 0x0278(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_2_Local;    // 0x0290(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_2_Transform;             // 0x02F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_2_CachedIndex;           // 0x0350(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_2_Transform;           // 0x0360(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_CachedIndex;         // 0x03C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_3_Value;      // 0x03D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_1_Value;             // 0x03F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F04[0x4];                                     // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_2_CachedCurveIndex;   // 0x03F8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_2_Result;              // 0x0408(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_2_A;                   // 0x040C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_5_Result;              // 0x0410(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_5_Value;               // 0x0414(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_3_CachedCurveIndex;     // 0x0418(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_3_1_Result;              // 0x0428(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_A;                   // 0x042C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_2_Result;            // 0x0430(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_2_Value;             // 0x0434(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_2_2_CachedCurveIndex;   // 0x0438(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_2_1_Result;            // 0x0448(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_2_1_A;                 // 0x044C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_2_Result;          // 0x0450(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_2_Value;           // 0x0454(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_1_2_CachedCurveIndex; // 0x0458(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_3_1_1_Result;            // 0x0468(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_1_A;                 // 0x046C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_1_Result;          // 0x0470(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_1_Value;           // 0x0474(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_2_1_1_CachedCurveIndex; // 0x0478(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_2_1_1_Result;          // 0x0488(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_2_1_1_A;               // 0x048C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_1_1_Result;        // 0x0490(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_1_1_Value;         // 0x0494(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_1_1_1_CachedCurveIndex; // 0x0498(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_3_2_Result;              // 0x04A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_2_A;                   // 0x04AC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_1_2_Result;          // 0x04B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F05[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_3_1_Result;   // 0x04B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_2_1_Local;  // 0x04D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x0530(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x0590(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_Transform;             // 0x05A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_CachedIndex;           // 0x0600(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_3_1_Value;    // 0x0610(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_1_2_Value;           // 0x0630(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F06[0x4];                                     // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_2_1_CachedCurveIndex; // 0x0638(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_2_2_Result;            // 0x0648(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_2_2_A;                 // 0x064C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_5_1_Result;            // 0x0650(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_5_1_Value;             // 0x0654(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_3_1_CachedCurveIndex;   // 0x0658(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_3_2_1_Result;            // 0x0668(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_2_1_A;                 // 0x066C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_2_1_Result;          // 0x0670(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_2_1_Value;           // 0x0674(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_2_2_1_CachedCurveIndex; // 0x0678(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_2_2_1_Result;          // 0x0688(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_2_2_1_A;               // 0x068C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_2_1_Result;        // 0x0690(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_2_1_Value;         // 0x0694(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_1_2_1_CachedCurveIndex; // 0x0698(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_3_2_1_1_Result;          // 0x06A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_2_1_1_A;               // 0x06AC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_1_1_Result;        // 0x06B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_4_1_1_Value;         // 0x06B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_2_1_1_1_CachedCurveIndex; // 0x06B8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_1_2_2_1_1_Result;        // 0x06C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_2_2_1_1_A;             // 0x06CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_1_1_1_Result;      // 0x06D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_2_3_1_1_1_Value;       // 0x06D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_1_1_1_1_1_CachedCurveIndex; // 0x06D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_RigLogic_Data>         RigVMModel___RigLogic_Data;                        // 0x06E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___RigLogic_bIsInitialized;              // 0x06F8(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Work">();
	}
	static class URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Work>();
	}
};
static_assert(alignof(URigVMMemory_Work) == 0x000010, "Wrong alignment on URigVMMemory_Work");
static_assert(sizeof(URigVMMemory_Work) == 0x000710, "Wrong size on URigVMMemory_Work");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_Result) == 0x000028, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_A) == 0x00002C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_1_Result) == 0x000030, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Result) == 0x000038, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_Local) == 0x000050, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_2_1_Transform) == 0x0000B0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_2_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_2_1_CachedIndex) == 0x000110, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_1_Transform) == 0x000120, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_1_CachedIndex) == 0x000180, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Value) == 0x000190, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_1_Value) == 0x0001B0, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_CachedCurveIndex) == 0x0001B8, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_Result) == 0x0001C8, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_A) == 0x0001CC, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_Result) == 0x0001D0, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_Value) == 0x0001D4, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_CachedCurveIndex) == 0x0001D8, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_2_Result) == 0x0001E8, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_2_A) == 0x0001EC, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_2_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_Result) == 0x0001F0, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_Value) == 0x0001F4, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_2_CachedCurveIndex) == 0x0001F8, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_1_Result) == 0x000208, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_1_A) == 0x00020C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_Result) == 0x000210, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_Value) == 0x000214, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_1_CachedCurveIndex) == 0x000218, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_Result) == 0x000228, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_A) == 0x00022C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_4_Result) == 0x000230, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_4_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_4_Value) == 0x000234, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_4_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_2_1_CachedCurveIndex) == 0x000238, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_2_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_1_1_Result) == 0x000248, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_1_1_A) == 0x00024C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_1_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_1_Result) == 0x000250, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_1_Value) == 0x000254, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_1_1_CachedCurveIndex) == 0x000258, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_Result) == 0x000268, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_A) == 0x00026C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_1_1_Result) == 0x000270, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_Result) == 0x000278, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_2_Local) == 0x000290, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_2_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_2_Transform) == 0x0002F0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_2_CachedIndex) == 0x000350, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_Transform) == 0x000360, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_CachedIndex) == 0x0003C0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_Value) == 0x0003D0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_1_1_Value) == 0x0003F0, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_2_CachedCurveIndex) == 0x0003F8, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_Result) == 0x000408, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_A) == 0x00040C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_5_Result) == 0x000410, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_5_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_5_Value) == 0x000414, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_5_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_3_CachedCurveIndex) == 0x000418, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_3_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_Result) == 0x000428, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_A) == 0x00042C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_2_Result) == 0x000430, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_2_Value) == 0x000434, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_2_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_2_2_CachedCurveIndex) == 0x000438, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_2_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_1_Result) == 0x000448, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_1_A) == 0x00044C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_2_Result) == 0x000450, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_2_Value) == 0x000454, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_2_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_1_2_CachedCurveIndex) == 0x000458, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_1_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_1_Result) == 0x000468, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_1_A) == 0x00046C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_4_1_Result) == 0x000470, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_4_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_4_1_Value) == 0x000474, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_4_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_2_1_1_CachedCurveIndex) == 0x000478, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_2_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_1_1_Result) == 0x000488, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_1_1_A) == 0x00048C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_1_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_1_1_Result) == 0x000490, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_1_1_Value) == 0x000494, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_1_1_1_CachedCurveIndex) == 0x000498, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_Result) == 0x0004A8, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_A) == 0x0004AC, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_1_1_2_Result) == 0x0004B0, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_1_Result) == 0x0004B8, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_2_1_Local) == 0x0004D0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_2_1_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_Transform) == 0x000530, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_CachedIndex) == 0x000590, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_Transform) == 0x0005A0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_CachedIndex) == 0x000600, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_1_Value) == 0x000610, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_1_1_2_Value) == 0x000630, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_1_1_2_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_2_1_CachedCurveIndex) == 0x000638, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_2_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_2_Result) == 0x000648, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_2_A) == 0x00064C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_2_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_5_1_Result) == 0x000650, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_5_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_5_1_Value) == 0x000654, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_5_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_3_1_CachedCurveIndex) == 0x000658, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_3_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_Result) == 0x000668, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_A) == 0x00066C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_2_1_Result) == 0x000670, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_2_1_Value) == 0x000674, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_2_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_2_2_1_CachedCurveIndex) == 0x000678, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_2_2_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_2_1_Result) == 0x000688, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_2_1_A) == 0x00068C, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_2_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_2_1_Result) == 0x000690, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_2_1_Value) == 0x000694, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_2_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_1_2_1_CachedCurveIndex) == 0x000698, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_1_2_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_1_Result) == 0x0006A8, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_1_A) == 0x0006AC, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_4_1_1_Result) == 0x0006B0, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_4_1_1_Value) == 0x0006B4, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_4_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_2_1_1_1_CachedCurveIndex) == 0x0006B8, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_2_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_2_1_1_Result) == 0x0006C8, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatMul_1_2_2_1_1_A) == 0x0006CC, "Member 'URigVMMemory_Work::RigVMModel___MathFloatMul_1_2_2_1_1_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_1_1_1_Result) == 0x0006D0, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathFloatRemap_2_3_1_1_1_Value) == 0x0006D4, "Member 'URigVMMemory_Work::RigVMModel___MathFloatRemap_2_3_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetCurveValue_1_1_1_1_1_CachedCurveIndex) == 0x0006D8, "Member 'URigVMMemory_Work::RigVMModel___SetCurveValue_1_1_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___RigLogic_Data) == 0x0006E8, "Member 'URigVMMemory_Work::RigVMModel___RigLogic_Data' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___RigLogic_bIsInitialized) == 0x0006F8, "Member 'URigVMMemory_Work::RigVMModel___RigLogic_bIsInitialized' has a wrong offset!");

}

