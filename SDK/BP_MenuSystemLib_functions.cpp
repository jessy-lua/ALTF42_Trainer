#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuSystemLib

#include "Basic.hpp"

#include "BP_MenuSystemLib_classes.hpp"
#include "BP_MenuSystemLib_parameters.hpp"


namespace SDK
{

// Function BP_MenuSystemLib.BP_MenuSystemLib_C.CreateNewJson
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFilePath                        FilePath                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::CreateNewJson(const struct FFilePath& FilePath, class UObject* __WorldContext, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "CreateNewJson");

	Params::BP_MenuSystemLib_C_CreateNewJson Parms{};

	Parms.FilePath = std::move(FilePath);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetActionMappingByKey
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UInputMappingContext*             InputMappingContext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsGamepadButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FEnhancedActionKeyMapping        ActionMapping                                          (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetActionMappingByKey(class UInputMappingContext* InputMappingContext, const struct FKey& Key, bool bIsGamepadButton, class UObject* __WorldContext, struct FEnhancedActionKeyMapping* ActionMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetActionMappingByKey");

	Params::BP_MenuSystemLib_C_GetActionMappingByKey Parms{};

	Parms.InputMappingContext = InputMappingContext;
	Parms.Key = std::move(Key);
	Parms.bIsGamepadButton = bIsGamepadButton;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ActionMapping != nullptr)
		*ActionMapping = std::move(Parms.ActionMapping);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetColorByName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPDA_MenuSystemConfig_C*          MenuSystemConfig                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EColorPalette                           ColorName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetColorByName(class UPDA_MenuSystemConfig_C* MenuSystemConfig, EColorPalette ColorName, class UObject* __WorldContext, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetColorByName");

	Params::BP_MenuSystemLib_C_GetColorByName Parms{};

	Parms.MenuSystemConfig = MenuSystemConfig;
	Parms.ColorName = ColorName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetFontStyleByName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPDA_MenuSystemConfig_C*          MenuSystemConfig                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EFontPalette                            FontName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFFontStyle                      FontStyle                                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetFontStyleByName(class UPDA_MenuSystemConfig_C* MenuSystemConfig, EFontPalette FontName, class UObject* __WorldContext, struct FFFontStyle* FontStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetFontStyleByName");

	Params::BP_MenuSystemLib_C_GetFontStyleByName Parms{};

	Parms.MenuSystemConfig = MenuSystemConfig;
	Parms.FontName = FontName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FontStyle != nullptr)
		*FontStyle = std::move(Parms.FontStyle);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetJsonConfigFilePath
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFilePath                        FilePath                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetJsonConfigFilePath(class UObject* __WorldContext, struct FFilePath* FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetJsonConfigFilePath");

	Params::BP_MenuSystemLib_C_GetJsonConfigFilePath Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FilePath != nullptr)
		*FilePath = std::move(Parms.FilePath);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetMenuSystemConfigFromLibrary
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPDA_MenuSystemConfig_C*          MenuSystemConfig                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetMenuSystemConfigFromLibrary(class UObject* __WorldContext, class UPDA_MenuSystemConfig_C** MenuSystemConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetMenuSystemConfigFromLibrary");

	Params::BP_MenuSystemLib_C_GetMenuSystemConfigFromLibrary Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MenuSystemConfig != nullptr)
		*MenuSystemConfig = Parms.MenuSystemConfig;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetMenuSystemProActorFromLibrary
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_MenuSystemActor_C*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class ABP_MenuSystemActor_C* UBP_MenuSystemLib_C::GetMenuSystemProActorFromLibrary(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetMenuSystemProActorFromLibrary");

	Params::BP_MenuSystemLib_C_GetMenuSystemProActorFromLibrary Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetResolutionFromString
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ResolutionString                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FIntPoint                        Resolution                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetResolutionFromString(const class FString& ResolutionString, class UObject* __WorldContext, struct FIntPoint* Resolution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetResolutionFromString");

	Params::BP_MenuSystemLib_C_GetResolutionFromString Parms{};

	Parms.ResolutionString = std::move(ResolutionString);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Resolution != nullptr)
		*Resolution = std::move(Parms.Resolution);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetSupportedScreenResolutions
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SupportedResolutions                                   (Parm, OutParm)
// int32                                   CurrentResolutionIndex                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetSupportedScreenResolutions(class UObject* __WorldContext, TArray<class FString>* SupportedResolutions, int32* CurrentResolutionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetSupportedScreenResolutions");

	Params::BP_MenuSystemLib_C_GetSupportedScreenResolutions Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SupportedResolutions != nullptr)
		*SupportedResolutions = std::move(Parms.SupportedResolutions);

	if (CurrentResolutionIndex != nullptr)
		*CurrentResolutionIndex = Parms.CurrentResolutionIndex;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetSupportedScreenResolutionsWithAspectRatio
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           AspectRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SupportedResolutions                                   (Parm, OutParm)

void UBP_MenuSystemLib_C::GetSupportedScreenResolutionsWithAspectRatio(const class FString& AspectRatio, class UObject* __WorldContext, TArray<class FString>* SupportedResolutions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetSupportedScreenResolutionsWithAspectRatio");

	Params::BP_MenuSystemLib_C_GetSupportedScreenResolutionsWithAspectRatio Parms{};

	Parms.AspectRatio = std::move(AspectRatio);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SupportedResolutions != nullptr)
		*SupportedResolutions = std::move(Parms.SupportedResolutions);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetUILayer
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFUILayer                        UILayer                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetUILayer(class UObject* __WorldContext, struct FFUILayer* UILayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "GetUILayer");

	Params::BP_MenuSystemLib_C_GetUILayer Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (UILayer != nullptr)
		*UILayer = std::move(Parms.UILayer);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.IsKeyPressed
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UInputAction*                     InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInputMappingContext*             InputMappingContext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsKeyPressed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEnhancedActionKeyMapping        EnhancedActionKeyMapping                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::IsKeyPressed(const struct FKey& PressedKey, class UInputAction* InputAction, class UInputMappingContext* InputMappingContext, class UObject* __WorldContext, bool* bIsKeyPressed, struct FEnhancedActionKeyMapping* EnhancedActionKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "IsKeyPressed");

	Params::BP_MenuSystemLib_C_IsKeyPressed Parms{};

	Parms.PressedKey = std::move(PressedKey);
	Parms.InputAction = InputAction;
	Parms.InputMappingContext = InputMappingContext;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsKeyPressed != nullptr)
		*bIsKeyPressed = Parms.bIsKeyPressed;

	if (EnhancedActionKeyMapping != nullptr)
		*EnhancedActionKeyMapping = std::move(Parms.EnhancedActionKeyMapping);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.IsKeyPressedAndWhitelisted
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UInputAction*                     InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInputMappingContext*             InputMappingContext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMenuInputWhitelistPreset               InputWhitelistPreset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsKeyPressedAndWhitelisted                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEnhancedActionKeyMapping        EnhancedActionKeyMapping                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::IsKeyPressedAndWhitelisted(const struct FKey& PressedKey, class UInputAction* InputAction, class UInputMappingContext* InputMappingContext, EMenuInputWhitelistPreset InputWhitelistPreset, class UObject* __WorldContext, bool* bIsKeyPressedAndWhitelisted, struct FEnhancedActionKeyMapping* EnhancedActionKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "IsKeyPressedAndWhitelisted");

	Params::BP_MenuSystemLib_C_IsKeyPressedAndWhitelisted Parms{};

	Parms.PressedKey = std::move(PressedKey);
	Parms.InputAction = InputAction;
	Parms.InputMappingContext = InputMappingContext;
	Parms.InputWhitelistPreset = InputWhitelistPreset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsKeyPressedAndWhitelisted != nullptr)
		*bIsKeyPressedAndWhitelisted = Parms.bIsKeyPressedAndWhitelisted;

	if (EnhancedActionKeyMapping != nullptr)
		*EnhancedActionKeyMapping = std::move(Parms.EnhancedActionKeyMapping);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.KeyToMenuInputAction
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UInputMappingContext*             InputMappingContext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMenuInputWhitelistPreset               InputWhitelistPreset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMenuInputAction                        MenuInputAction                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEnhancedActionKeyMapping        EnhancedActionKeyMapping                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    bIsKeyPressed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::KeyToMenuInputAction(const struct FKey& PressedKey, class UInputMappingContext* InputMappingContext, EMenuInputWhitelistPreset InputWhitelistPreset, class UObject* __WorldContext, EMenuInputAction* MenuInputAction, struct FEnhancedActionKeyMapping* EnhancedActionKeyMapping, bool* bIsKeyPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "KeyToMenuInputAction");

	Params::BP_MenuSystemLib_C_KeyToMenuInputAction Parms{};

	Parms.PressedKey = std::move(PressedKey);
	Parms.InputMappingContext = InputMappingContext;
	Parms.InputWhitelistPreset = InputWhitelistPreset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MenuInputAction != nullptr)
		*MenuInputAction = Parms.MenuInputAction;

	if (EnhancedActionKeyMapping != nullptr)
		*EnhancedActionKeyMapping = std::move(Parms.EnhancedActionKeyMapping);

	if (bIsKeyPressed != nullptr)
		*bIsKeyPressed = Parms.bIsKeyPressed;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.KeyToUINavigation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UInputMappingContext*             InputMappingContext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMenuInputWhitelistPreset               InputWhitelistPreset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUINavigation                           UINavigation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEnhancedActionKeyMapping        EnhancedActionKeyMapping                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    bIsKeyPressed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::KeyToUINavigation(const struct FKey& PressedKey, class UInputMappingContext* InputMappingContext, EMenuInputWhitelistPreset InputWhitelistPreset, class UObject* __WorldContext, EUINavigation* UINavigation, struct FEnhancedActionKeyMapping* EnhancedActionKeyMapping, bool* bIsKeyPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "KeyToUINavigation");

	Params::BP_MenuSystemLib_C_KeyToUINavigation Parms{};

	Parms.PressedKey = std::move(PressedKey);
	Parms.InputMappingContext = InputMappingContext;
	Parms.InputWhitelistPreset = InputWhitelistPreset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (UINavigation != nullptr)
		*UINavigation = Parms.UINavigation;

	if (EnhancedActionKeyMapping != nullptr)
		*EnhancedActionKeyMapping = std::move(Parms.EnhancedActionKeyMapping);

	if (bIsKeyPressed != nullptr)
		*bIsKeyPressed = Parms.bIsKeyPressed;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.LevelReferenceToName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UWorld>            Level                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             LevelName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::LevelReferenceToName(const TSoftObjectPtr<class UWorld> Level, class UObject* __WorldContext, class FName* LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "LevelReferenceToName");

	Params::BP_MenuSystemLib_C_LevelReferenceToName Parms{};

	Parms.Level = Level;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LevelName != nullptr)
		*LevelName = Parms.LevelName;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.LoadBooleanFromJsonConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    FieldValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::LoadBooleanFromJsonConfig(const class FString& FieldName, class UObject* __WorldContext, bool* FieldValue, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "LoadBooleanFromJsonConfig");

	Params::BP_MenuSystemLib_C_LoadBooleanFromJsonConfig Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FieldValue != nullptr)
		*FieldValue = Parms.FieldValue;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.LoadFloatFromJsonConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  FieldValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::LoadFloatFromJsonConfig(const class FString& FieldName, class UObject* __WorldContext, double* FieldValue, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "LoadFloatFromJsonConfig");

	Params::BP_MenuSystemLib_C_LoadFloatFromJsonConfig Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FieldValue != nullptr)
		*FieldValue = Parms.FieldValue;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.LoadIntegerFromJsonConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   FieldValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::LoadIntegerFromJsonConfig(const class FString& FieldName, class UObject* __WorldContext, int32* FieldValue, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "LoadIntegerFromJsonConfig");

	Params::BP_MenuSystemLib_C_LoadIntegerFromJsonConfig Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FieldValue != nullptr)
		*FieldValue = Parms.FieldValue;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.LoadJsonFromFile
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFilePath                        File                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FJsonObjectWrapper               JsonObject                                             (Parm, OutParm)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::LoadJsonFromFile(const struct FFilePath& File, class UObject* __WorldContext, struct FJsonObjectWrapper* JsonObject, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "LoadJsonFromFile");

	Params::BP_MenuSystemLib_C_LoadJsonFromFile Parms{};

	Parms.File = std::move(File);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (JsonObject != nullptr)
		*JsonObject = std::move(Parms.JsonObject);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.PrintMenuSystemError
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPrintToScreen                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::PrintMenuSystemError(const class FString& InString, float Duration, bool bPrintToScreen, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "PrintMenuSystemError");

	Params::BP_MenuSystemLib_C_PrintMenuSystemError Parms{};

	Parms.InString = std::move(InString);
	Parms.Duration = Duration;
	Parms.bPrintToScreen = bPrintToScreen;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.ResolutionToAspectRatio
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FIntPoint                        Resolution                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           AspectRatio                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::ResolutionToAspectRatio(const struct FIntPoint& Resolution, class UObject* __WorldContext, class FString* AspectRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "ResolutionToAspectRatio");

	Params::BP_MenuSystemLib_C_ResolutionToAspectRatio Parms{};

	Parms.Resolution = std::move(Resolution);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AspectRatio != nullptr)
		*AspectRatio = std::move(Parms.AspectRatio);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.ResolutionToString
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FIntPoint                        Resolution                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_MenuSystemLib_C::ResolutionToString(const struct FIntPoint& Resolution, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "ResolutionToString");

	Params::BP_MenuSystemLib_C_ResolutionToString Parms{};

	Parms.Resolution = std::move(Resolution);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.SaveJsonToFile
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJsonObjectWrapper               JsonObject                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FFilePath                        File                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::SaveJsonToFile(const struct FJsonObjectWrapper& JsonObject, const struct FFilePath& File, class UObject* __WorldContext, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "SaveJsonToFile");

	Params::BP_MenuSystemLib_C_SaveJsonToFile Parms{};

	Parms.JsonObject = std::move(JsonObject);
	Parms.File = std::move(File);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.SecondsToHoursMinutesSecondsText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_MenuSystemLib_C::SecondsToHoursMinutesSecondsText(float Seconds, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "SecondsToHoursMinutesSecondsText");

	Params::BP_MenuSystemLib_C_SecondsToHoursMinutesSecondsText Parms{};

	Parms.Seconds = Seconds;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.SetFieldOfViewHorizontal
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FieldOfView                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::SetFieldOfViewHorizontal(double FieldOfView, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "SetFieldOfViewHorizontal");

	Params::BP_MenuSystemLib_C_SetFieldOfViewHorizontal Parms{};

	Parms.FieldOfView = FieldOfView;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.SetSoundClassVolumeProperty
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundClass*                      SoundClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  VolumeValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::SetSoundClassVolumeProperty(class USoundClass* SoundClass, double VolumeValue, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MenuSystemLib_C", "SetSoundClassVolumeProperty");

	Params::BP_MenuSystemLib_C_SetSoundClassVolumeProperty Parms{};

	Parms.SoundClass = SoundClass;
	Parms.VolumeValue = VolumeValue;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetControlsValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvertSticks                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvertXAxis                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvertYAxis                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  XAxisSensitivity                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  YAxisSensitivity                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    VibrationEnabled                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FieldOfView                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetControlsValues(class UObject* __WorldContext, bool* bInvertSticks, bool* bInvertXAxis, bool* bInvertYAxis, double* XAxisSensitivity, double* YAxisSensitivity, bool* VibrationEnabled, double* FieldOfView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "GetControlsValues");

	Params::BP_MenuSystemLib_C_GetControlsValues Parms{};

	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (bInvertSticks != nullptr)
		*bInvertSticks = Parms.bInvertSticks;

	if (bInvertXAxis != nullptr)
		*bInvertXAxis = Parms.bInvertXAxis;

	if (bInvertYAxis != nullptr)
		*bInvertYAxis = Parms.bInvertYAxis;

	if (XAxisSensitivity != nullptr)
		*XAxisSensitivity = Parms.XAxisSensitivity;

	if (YAxisSensitivity != nullptr)
		*YAxisSensitivity = Parms.YAxisSensitivity;

	if (VibrationEnabled != nullptr)
		*VibrationEnabled = Parms.VibrationEnabled;

	if (FieldOfView != nullptr)
		*FieldOfView = Parms.FieldOfView;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetInputActionData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           Platform                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFInputActionDataElement         InputNameData                                          (Parm, OutParm, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetInputActionData(const struct FKey& PressedKey, const class FString& Platform, class UObject* __WorldContext, struct FFInputActionDataElement* InputNameData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "GetInputActionData");

	Params::BP_MenuSystemLib_C_GetInputActionData Parms{};

	Parms.PressedKey = std::move(PressedKey);
	Parms.Platform = std::move(Platform);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (InputNameData != nullptr)
		*InputNameData = std::move(Parms.InputNameData);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.GetModifiedAxisValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SpeedMultiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InvertAxis                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ModifiedValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::GetModifiedAxisValue(double Value, double SpeedMultiplier, bool InvertAxis, class UObject* __WorldContext, double* ModifiedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "GetModifiedAxisValue");

	Params::BP_MenuSystemLib_C_GetModifiedAxisValue Parms{};

	Parms.Value = Value;
	Parms.SpeedMultiplier = SpeedMultiplier;
	Parms.InvertAxis = InvertAxis;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (ModifiedValue != nullptr)
		*ModifiedValue = Parms.ModifiedValue;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.IsKeyWhitelisted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FEnhancedActionKeyMapping        EnhancedActionKeyMapping                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FKey                             PressedKey                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// EMenuInputWhitelistPreset               InputWhitelist                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsWhitelisted                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::IsKeyWhitelisted(const struct FEnhancedActionKeyMapping& EnhancedActionKeyMapping, const struct FKey& PressedKey, EMenuInputWhitelistPreset InputWhitelist, class UObject* __WorldContext, bool* bIsWhitelisted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "IsKeyWhitelisted");

	Params::BP_MenuSystemLib_C_IsKeyWhitelisted Parms{};

	Parms.EnhancedActionKeyMapping = std::move(EnhancedActionKeyMapping);
	Parms.PressedKey = std::move(PressedKey);
	Parms.InputWhitelist = InputWhitelist;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsWhitelisted != nullptr)
		*bIsWhitelisted = Parms.bIsWhitelisted;
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.RunHardwareBenchmark
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::RunHardwareBenchmark(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "RunHardwareBenchmark");

	Params::BP_MenuSystemLib_C_RunHardwareBenchmark Parms{};

	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.SetBackgroundBlurRadius
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBackgroundBlur*                  BackgroundBlur                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::SetBackgroundBlurRadius(class UBackgroundBlur* BackgroundBlur, double Radius, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "SetBackgroundBlurRadius");

	Params::BP_MenuSystemLib_C_SetBackgroundBlurRadius Parms{};

	Parms.BackgroundBlur = BackgroundBlur;
	Parms.Radius = Radius;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.SetBorderBrushRadius
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBorder*                          Border                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::SetBorderBrushRadius(class UBorder* Border, double Radius, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "SetBorderBrushRadius");

	Params::BP_MenuSystemLib_C_SetBorderBrushRadius Parms{};

	Parms.Border = Border;
	Parms.Radius = Radius;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuSystemLib.BP_MenuSystemLib_C.SetProgressBarRadius
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProgressBar*                     ProgessBar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MenuSystemLib_C::SetProgressBarRadius(class UProgressBar* ProgessBar, double Radius, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuSystemLib_C", "SetProgressBarRadius");

	Params::BP_MenuSystemLib_C_SetProgressBarRadius Parms{};

	Parms.ProgessBar = ProgessBar;
	Parms.Radius = Radius;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}

}

