#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsSlider

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'OptionsSlider_C_BndEvt__SliderHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'OptionsSlider_C_BndEvt__SliderValueEditText_K2Node_ComponentBoundEvent_7_OnEditableTextChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.ConvertInputToNumeric
// 0x00E0 (0x00E0 - 0x0000)
struct OptionsSlider_C_ConvertInputToNumeric final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ModifiedText;                                      // 0x0018(0x0018)(Parm, OutParm)
	class FString                                 ResultString;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328D[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0058(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_2;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328E[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328F[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3290[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3291[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3292[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_ConvertInputToNumeric) == 0x000008, "Wrong alignment on OptionsSlider_C_ConvertInputToNumeric");
static_assert(sizeof(OptionsSlider_C_ConvertInputToNumeric) == 0x0000E0, "Wrong size on OptionsSlider_C_ConvertInputToNumeric");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, InText) == 0x000000, "Member 'OptionsSlider_C_ConvertInputToNumeric::InText' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, ModifiedText) == 0x000018, "Member 'OptionsSlider_C_ConvertInputToNumeric::ModifiedText' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, ResultString) == 0x000030, "Member 'OptionsSlider_C_ConvertInputToNumeric::ResultString' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, Temp_int_Array_Index_Variable) == 0x000050, "Member 'OptionsSlider_C_ConvertInputToNumeric::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000058, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Array_Get_Item) == 0x000068, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_IsNumeric_ReturnValue) == 0x00007C, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00007D, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x00007E, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue) == 0x00007F, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_NotEqual_StrStr_ReturnValue_2) == 0x000080, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_NotEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue_1) == 0x000081, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Replace_ReturnValue) == 0x000088, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue_2) == 0x000098, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000099, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00009A, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'OptionsSlider_C_ConvertInputToNumeric::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue_3) == 0x0000C8, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ConvertInputToNumeric, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'OptionsSlider_C_ConvertInputToNumeric::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.ExecuteUbergraph_OptionsSlider
// 0x0100 (0x0100 - 0x0000)
struct OptionsSlider_C_ExecuteUbergraph_OptionsSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsHovered;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlaySound;                           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3293[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3294[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0018(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3295[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0048(0x0018)(ConstParm)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_ConvertInputToNumeric_ModifiedText;       // 0x0068(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3296[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x00C0(0x0018)()
	class FText                                   CallFunc_ConvertInputToNumeric_ModifiedText_1;     // 0x00D8(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateSliderFromMouse_InValue_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider) == 0x000008, "Wrong alignment on OptionsSlider_C_ExecuteUbergraph_OptionsSlider");
static_assert(sizeof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider) == 0x000100, "Wrong size on OptionsSlider_C_ExecuteUbergraph_OptionsSlider");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, EntryPoint) == 0x000000, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_Event_IsDesignTime) == 0x000004, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_Event_bIsHovered) == 0x000005, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_Event_bIsHovered' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_Event_bPlaySound) == 0x000006, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_Event_bPlaySound' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_ComponentBoundEvent_Text_1) == 0x000018, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_ComponentBoundEvent_CommitMethod) == 0x000030, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, K2Node_ComponentBoundEvent_Text) == 0x000048, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000060, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_ConvertInputToNumeric_ModifiedText) == 0x000068, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_ConvertInputToNumeric_ModifiedText' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000080, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_Left_ReturnValue) == 0x000090, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_IsValid_ReturnValue_2) == 0x0000BA, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_IsValid_ReturnValue_3) == 0x0000BB, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0000C0, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_ConvertInputToNumeric_ModifiedText_1) == 0x0000D8, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_ConvertInputToNumeric_ModifiedText_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_GetPlayerController_ReturnValue) == 0x0000F0, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_ExecuteUbergraph_OptionsSlider, CallFunc_UpdateSliderFromMouse_InValue_ImplicitCast) == 0x0000F8, "Member 'OptionsSlider_C_ExecuteUbergraph_OptionsSlider::CallFunc_UpdateSliderFromMouse_InValue_ImplicitCast' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.GetDefaultValueNormalized
// 0x0010 (0x0010 - 0x0000)
struct OptionsSlider_C_GetDefaultValueNormalized final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_GetDefaultValueNormalized) == 0x000008, "Wrong alignment on OptionsSlider_C_GetDefaultValueNormalized");
static_assert(sizeof(OptionsSlider_C_GetDefaultValueNormalized) == 0x000010, "Wrong size on OptionsSlider_C_GetDefaultValueNormalized");
static_assert(offsetof(OptionsSlider_C_GetDefaultValueNormalized, ReturnValue) == 0x000000, "Member 'OptionsSlider_C_GetDefaultValueNormalized::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_GetDefaultValueNormalized, CallFunc_NormalizeToRange_ReturnValue) == 0x000008, "Member 'OptionsSlider_C_GetDefaultValueNormalized::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.GetScaledValue
// 0x0030 (0x0030 - 0x0000)
struct OptionsSlider_C_GetScaledValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OnlyByMaxValue;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Return_Value;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_GetScaledValue) == 0x000008, "Wrong alignment on OptionsSlider_C_GetScaledValue");
static_assert(sizeof(OptionsSlider_C_GetScaledValue) == 0x000030, "Wrong size on OptionsSlider_C_GetScaledValue");
static_assert(offsetof(OptionsSlider_C_GetScaledValue, InValue) == 0x000000, "Member 'OptionsSlider_C_GetScaledValue::InValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_GetScaledValue, OnlyByMaxValue) == 0x000008, "Member 'OptionsSlider_C_GetScaledValue::OnlyByMaxValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_GetScaledValue, Return_Value) == 0x000010, "Member 'OptionsSlider_C_GetScaledValue::Return_Value' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_GetScaledValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'OptionsSlider_C_GetScaledValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_GetScaledValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000020, "Member 'OptionsSlider_C_GetScaledValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_GetScaledValue, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'OptionsSlider_C_GetScaledValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.IncrementSlider
// 0x0010 (0x0010 - 0x0000)
struct OptionsSlider_C_IncrementSlider final
{
public:
	double                                        InIncrementValue;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_IncrementSlider) == 0x000008, "Wrong alignment on OptionsSlider_C_IncrementSlider");
static_assert(sizeof(OptionsSlider_C_IncrementSlider) == 0x000010, "Wrong size on OptionsSlider_C_IncrementSlider");
static_assert(offsetof(OptionsSlider_C_IncrementSlider, InIncrementValue) == 0x000000, "Member 'OptionsSlider_C_IncrementSlider::InIncrementValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_IncrementSlider, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'OptionsSlider_C_IncrementSlider::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.OnSetHoverEffect
// 0x0002 (0x0002 - 0x0000)
struct OptionsSlider_C_OnSetHoverEffect final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_OnSetHoverEffect) == 0x000001, "Wrong alignment on OptionsSlider_C_OnSetHoverEffect");
static_assert(sizeof(OptionsSlider_C_OnSetHoverEffect) == 0x000002, "Wrong size on OptionsSlider_C_OnSetHoverEffect");
static_assert(offsetof(OptionsSlider_C_OnSetHoverEffect, bIsHovered) == 0x000000, "Member 'OptionsSlider_C_OnSetHoverEffect::bIsHovered' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_OnSetHoverEffect, bPlaySound) == 0x000001, "Member 'OptionsSlider_C_OnSetHoverEffect::bPlaySound' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.SetGlobalSettings
// 0x08B0 (0x08B0 - 0x0000)
struct OptionsSlider_C_SetGlobalSettings final
{
public:
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor;                // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0090(0x0014)()
	uint8                                         Pad_3297[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont;                  // 0x00A8(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont;            // 0x0100(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont;           // 0x0158(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont;            // 0x01B0(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont;                 // 0x0208(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3298[0xF];                                     // 0x0261(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0270(0x00D0)()
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_1;              // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_1;         // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_1;    // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_1;    // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_1;  // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_1;            // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_1;            // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_1;    // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_1;  // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x03D0(0x0290)()
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont_1;                // 0x0660(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont_1;          // 0x06B8(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont_1;         // 0x0710(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont_1;          // 0x0768(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont_1;               // 0x07C0(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase_1;           // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3299[0x3];                                     // 0x0819(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_2;              // 0x081C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_2;         // 0x082C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_2;    // 0x083C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_2;    // 0x084C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_2;  // 0x085C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_2;            // 0x086C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_2;            // 0x087C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_2;    // 0x088C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_2;  // 0x089C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_SetGlobalSettings) == 0x000010, "Wrong alignment on OptionsSlider_C_SetGlobalSettings");
static_assert(sizeof(OptionsSlider_C_SetGlobalSettings) == 0x0008B0, "Wrong size on OptionsSlider_C_SetGlobalSettings");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor) == 0x000000, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor) == 0x000010, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor) == 0x000020, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor) == 0x000030, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor) == 0x000040, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor) == 0x000050, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor) == 0x000060, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor) == 0x000070, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor) == 0x000080, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, K2Node_MakeStruct_SlateColor) == 0x000090, "Member 'OptionsSlider_C_SetGlobalSettings::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont) == 0x0000A8, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont) == 0x000100, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont) == 0x000158, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont) == 0x0001B0, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont) == 0x000208, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase) == 0x000260, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, K2Node_MakeStruct_SlateBrush) == 0x000270, "Member 'OptionsSlider_C_SetGlobalSettings::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_1) == 0x000340, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_1) == 0x000350, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_1) == 0x000360, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_1) == 0x000370, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_1) == 0x000380, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_1) == 0x000390, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_1) == 0x0003A0, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_1) == 0x0003B0, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_1) == 0x0003C0, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, K2Node_MakeStruct_ProgressBarStyle) == 0x0003D0, "Member 'OptionsSlider_C_SetGlobalSettings::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont_1) == 0x000660, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont_1) == 0x0006B8, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont_1) == 0x000710, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont_1) == 0x000768, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont_1) == 0x0007C0, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase_1) == 0x000818, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase_1' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_2) == 0x00081C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_2) == 0x00082C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_2) == 0x00083C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_2) == 0x00084C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_2) == 0x00085C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_2) == 0x00086C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_2) == 0x00087C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_2) == 0x00088C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_2' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_2) == 0x00089C, "Member 'OptionsSlider_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_2' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.SetHoverEffect
// 0x0010 (0x0010 - 0x0000)
struct OptionsSlider_C_SetHoverEffect final
{
public:
	bool                                          IsOn;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_SetHoverEffect) == 0x000008, "Wrong alignment on OptionsSlider_C_SetHoverEffect");
static_assert(sizeof(OptionsSlider_C_SetHoverEffect) == 0x000010, "Wrong size on OptionsSlider_C_SetHoverEffect");
static_assert(offsetof(OptionsSlider_C_SetHoverEffect, IsOn) == 0x000000, "Member 'OptionsSlider_C_SetHoverEffect::IsOn' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetHoverEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'OptionsSlider_C_SetHoverEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.SetSliderHandleValue
// 0x0018 (0x0018 - 0x0000)
struct OptionsSlider_C_SetSliderHandleValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_SetSliderHandleValue) == 0x000008, "Wrong alignment on OptionsSlider_C_SetSliderHandleValue");
static_assert(sizeof(OptionsSlider_C_SetSliderHandleValue) == 0x000018, "Wrong size on OptionsSlider_C_SetSliderHandleValue");
static_assert(offsetof(OptionsSlider_C_SetSliderHandleValue, InValue) == 0x000000, "Member 'OptionsSlider_C_SetSliderHandleValue::InValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetSliderHandleValue, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'OptionsSlider_C_SetSliderHandleValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetSliderHandleValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000010, "Member 'OptionsSlider_C_SetSliderHandleValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.Setup Slider Initial
// 0x0010 (0x0010 - 0x0000)
struct OptionsSlider_C_Setup_Slider_Initial final
{
public:
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_Setup_Slider_Initial) == 0x000008, "Wrong alignment on OptionsSlider_C_Setup_Slider_Initial");
static_assert(sizeof(OptionsSlider_C_Setup_Slider_Initial) == 0x000010, "Wrong size on OptionsSlider_C_Setup_Slider_Initial");
static_assert(offsetof(OptionsSlider_C_Setup_Slider_Initial, CallFunc_FClamp_ReturnValue) == 0x000000, "Member 'OptionsSlider_C_Setup_Slider_Initial::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_Setup_Slider_Initial, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x000008, "Member 'OptionsSlider_C_Setup_Slider_Initial::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.SetupSliderFromMenu
// 0x0010 (0x0010 - 0x0000)
struct OptionsSlider_C_SetupSliderFromMenu final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OptionChangedIgnore;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_SetupSliderFromMenu) == 0x000008, "Wrong alignment on OptionsSlider_C_SetupSliderFromMenu");
static_assert(sizeof(OptionsSlider_C_SetupSliderFromMenu) == 0x000010, "Wrong size on OptionsSlider_C_SetupSliderFromMenu");
static_assert(offsetof(OptionsSlider_C_SetupSliderFromMenu, InValue) == 0x000000, "Member 'OptionsSlider_C_SetupSliderFromMenu::InValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_SetupSliderFromMenu, OptionChangedIgnore) == 0x000008, "Member 'OptionsSlider_C_SetupSliderFromMenu::OptionChangedIgnore' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.UpdateSlider
// 0x0090 (0x0090 - 0x0000)
struct OptionsSlider_C_UpdateSlider final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOptionChangeIgnore;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTriggerChangeEvent;                               // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySfx;                                          // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreOptionChange;                               // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewValue;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SliderWidthScalar;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AdaptiveSliderWidth;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetScaledValue_OnlyByMaxValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetScaledValue_Return_Value;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0058(0x0018)()
	class FText                                   CallFunc_ConvertInputToNumeric_ModifiedText;       // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_UpdateSlider) == 0x000008, "Wrong alignment on OptionsSlider_C_UpdateSlider");
static_assert(sizeof(OptionsSlider_C_UpdateSlider) == 0x000090, "Wrong size on OptionsSlider_C_UpdateSlider");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, InValue) == 0x000000, "Member 'OptionsSlider_C_UpdateSlider::InValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, bPlaySound) == 0x000008, "Member 'OptionsSlider_C_UpdateSlider::bPlaySound' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, bOptionChangeIgnore) == 0x000009, "Member 'OptionsSlider_C_UpdateSlider::bOptionChangeIgnore' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, bTriggerChangeEvent) == 0x00000A, "Member 'OptionsSlider_C_UpdateSlider::bTriggerChangeEvent' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, bPlaySfx) == 0x00000B, "Member 'OptionsSlider_C_UpdateSlider::bPlaySfx' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, bIgnoreOptionChange) == 0x00000C, "Member 'OptionsSlider_C_UpdateSlider::bIgnoreOptionChange' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, NewValue) == 0x000010, "Member 'OptionsSlider_C_UpdateSlider::NewValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, SliderWidthScalar) == 0x000018, "Member 'OptionsSlider_C_UpdateSlider::SliderWidthScalar' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, AdaptiveSliderWidth) == 0x000020, "Member 'OptionsSlider_C_UpdateSlider::AdaptiveSliderWidth' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_GetScaledValue_OnlyByMaxValue) == 0x000028, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_GetScaledValue_OnlyByMaxValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_GetScaledValue_Return_Value) == 0x000030, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_GetScaledValue_Return_Value' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000058, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_ConvertInputToNumeric_ModifiedText) == 0x000070, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_ConvertInputToNumeric_ModifiedText' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSlider, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'OptionsSlider_C_UpdateSlider::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.UpdateSliderFromMouse
// 0x0020 (0x0020 - 0x0000)
struct OptionsSlider_C_UpdateSliderFromMouse final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_UpdateSliderFromMouse) == 0x000008, "Wrong alignment on OptionsSlider_C_UpdateSliderFromMouse");
static_assert(sizeof(OptionsSlider_C_UpdateSliderFromMouse) == 0x000020, "Wrong size on OptionsSlider_C_UpdateSliderFromMouse");
static_assert(offsetof(OptionsSlider_C_UpdateSliderFromMouse, InValue) == 0x000000, "Member 'OptionsSlider_C_UpdateSliderFromMouse::InValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSliderFromMouse, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'OptionsSlider_C_UpdateSliderFromMouse::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSliderFromMouse, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'OptionsSlider_C_UpdateSliderFromMouse::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsSlider_C_UpdateSliderFromMouse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'OptionsSlider_C_UpdateSliderFromMouse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function OptionsSlider.OptionsSlider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct OptionsSlider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsSlider_C_PreConstruct) == 0x000001, "Wrong alignment on OptionsSlider_C_PreConstruct");
static_assert(sizeof(OptionsSlider_C_PreConstruct) == 0x000001, "Wrong size on OptionsSlider_C_PreConstruct");
static_assert(offsetof(OptionsSlider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'OptionsSlider_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

