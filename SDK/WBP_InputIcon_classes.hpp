#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EInputDeviceType_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InputIcon.WBP_InputIcon_C
// 0x00E8 (0x03A8 - 0x02C0)
class UWBP_InputIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BackgroundMask;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InnerIcon;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               InnerSizeBox;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeyText;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OuterIcon;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OuterKeyBorder;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               OuterSizeBox;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInputMappingContext*                   InputMappingContext;                               // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   MappedKey;                                         // 0x0308(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHoveredKeyboardKey;                              // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bDisplayWithNoneInput;                             // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayNoneTextFromDataTable;                     // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideWhenInputDeviceDoesNotMatchKey;               // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemoveNumpadPrefix;                               // 0x0333(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x0334(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0344(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ExtraHightlightColor;                              // 0x0354(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4E[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DefaultSize;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultSizeLarge;                                  // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WidthOverride;                                     // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightOverride;                                    // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateIconOnInputDeviceChange;                    // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3D4F[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentControllerPlatformName;                     // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ActiveInputDeviceChanged(EInputDeviceType InputDeviceType);
	void ChangeMappedKey(const struct FKey& NewKey);
	void Construct();
	void DisplayKeyBackgroundAndInnerIcon(const struct FSlateBrush& Brush);
	void DisplayKeyBackgroundAndText(class FName InText);
	void DisplayOuterIconOnly(const struct FSlateBrush& Brush);
	void ExecuteUbergraph_WBP_InputIcon(int32 EntryPoint);
	void OnControllerPlatformChange(const class FString& ControllerPlatformName);
	void OnHoveredKeyboardKey__DelegateSignature(const struct FKey& InKey);
	void OnSwitchBetweenKeyboardAndGamepad(EInputDeviceType InputDeviceType);
	void PreConstruct(bool IsDesignTime);
	void RemoveNumpadPrefix(class FName InputName, class FName* ConvertedName);
	void ResetToDefaultSize();
	void SetIconFromMappedKey();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InputIcon_C">();
	}
	static class UWBP_InputIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InputIcon_C>();
	}
};
static_assert(alignof(UWBP_InputIcon_C) == 0x000008, "Wrong alignment on UWBP_InputIcon_C");
static_assert(sizeof(UWBP_InputIcon_C) == 0x0003A8, "Wrong size on UWBP_InputIcon_C");
static_assert(offsetof(UWBP_InputIcon_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_InputIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, BackgroundMask) == 0x0002C8, "Member 'UWBP_InputIcon_C::BackgroundMask' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, InnerIcon) == 0x0002D0, "Member 'UWBP_InputIcon_C::InnerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, InnerSizeBox) == 0x0002D8, "Member 'UWBP_InputIcon_C::InnerSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, KeyText) == 0x0002E0, "Member 'UWBP_InputIcon_C::KeyText' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OuterIcon) == 0x0002E8, "Member 'UWBP_InputIcon_C::OuterIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OuterKeyBorder) == 0x0002F0, "Member 'UWBP_InputIcon_C::OuterKeyBorder' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OuterSizeBox) == 0x0002F8, "Member 'UWBP_InputIcon_C::OuterSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, InputMappingContext) == 0x000300, "Member 'UWBP_InputIcon_C::InputMappingContext' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, MappedKey) == 0x000308, "Member 'UWBP_InputIcon_C::MappedKey' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OnHoveredKeyboardKey) == 0x000320, "Member 'UWBP_InputIcon_C::OnHoveredKeyboardKey' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bDisplayWithNoneInput) == 0x000330, "Member 'UWBP_InputIcon_C::bDisplayWithNoneInput' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bDisplayNoneTextFromDataTable) == 0x000331, "Member 'UWBP_InputIcon_C::bDisplayNoneTextFromDataTable' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bHideWhenInputDeviceDoesNotMatchKey) == 0x000332, "Member 'UWBP_InputIcon_C::bHideWhenInputDeviceDoesNotMatchKey' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bRemoveNumpadPrefix) == 0x000333, "Member 'UWBP_InputIcon_C::bRemoveNumpadPrefix' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, BackgroundColor) == 0x000334, "Member 'UWBP_InputIcon_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, HighlightColor) == 0x000344, "Member 'UWBP_InputIcon_C::HighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, ExtraHightlightColor) == 0x000354, "Member 'UWBP_InputIcon_C::ExtraHightlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, DefaultSize) == 0x000368, "Member 'UWBP_InputIcon_C::DefaultSize' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, DefaultSizeLarge) == 0x000378, "Member 'UWBP_InputIcon_C::DefaultSizeLarge' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, WidthOverride) == 0x000388, "Member 'UWBP_InputIcon_C::WidthOverride' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, HeightOverride) == 0x00038C, "Member 'UWBP_InputIcon_C::HeightOverride' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bUpdateIconOnInputDeviceChange) == 0x000390, "Member 'UWBP_InputIcon_C::bUpdateIconOnInputDeviceChange' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, CurrentControllerPlatformName) == 0x000398, "Member 'UWBP_InputIcon_C::CurrentControllerPlatformName' has a wrong offset!");

}

