#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_Trap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WC_Trap.WC_Trap_C.BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'WC_Trap_C_BndEvt__WC_Trap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function WC_Trap.WC_Trap_C.ExecuteUbergraph_WC_Trap
// 0x0200 (0x0200 - 0x0000)
struct WC_Trap_C_ExecuteUbergraph_WC_Trap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EC[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35ED[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EE[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EF[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0180(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F0[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_Trap_C_ExecuteUbergraph_WC_Trap) == 0x000010, "Wrong alignment on WC_Trap_C_ExecuteUbergraph_WC_Trap");
static_assert(sizeof(WC_Trap_C_ExecuteUbergraph_WC_Trap) == 0x000200, "Wrong size on WC_Trap_C_ExecuteUbergraph_WC_Trap");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, EntryPoint) == 0x000000, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::EntryPoint' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000020, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_ComponentBoundEvent_OtherActor) == 0x000028, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_ComponentBoundEvent_OtherComp) == 0x000030, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000038, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000128, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000130, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000138, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000148, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000150, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, Temp_bool_IsClosed_Variable) == 0x000151, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_MakeVector_ReturnValue) == 0x000158, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_Array_Get_Item) == 0x000170, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000180, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_Less_IntInt_ReturnValue) == 0x0001E0, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_Array_Add_ReturnValue) == 0x0001E4, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0001E8, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_ExecuteUbergraph_WC_Trap, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0001F0, "Member 'WC_Trap_C_ExecuteUbergraph_WC_Trap::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function WC_Trap.WC_Trap_C.F_Physics_Return
// 0x0170 (0x0170 - 0x0000)
struct WC_Trap_C_F_Physics_Return final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F2[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_Trap_C_F_Physics_Return) == 0x000010, "Wrong alignment on WC_Trap_C_F_Physics_Return");
static_assert(sizeof(WC_Trap_C_F_Physics_Return) == 0x000170, "Wrong size on WC_Trap_C_F_Physics_Return");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WC_Trap_C_F_Physics_Return::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WC_Trap_C_F_Physics_Return::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WC_Trap_C_F_Physics_Return::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, CallFunc_Array_Get_Item) == 0x000010, "Member 'WC_Trap_C_F_Physics_Return::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'WC_Trap_C_F_Physics_Return::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WC_Trap_C_F_Physics_Return::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000080, "Member 'WC_Trap_C_F_Physics_Return::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WC_Trap_C_F_Physics_Return, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'WC_Trap_C_F_Physics_Return::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WC_Trap.WC_Trap_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct WC_Trap_C_UserConstructionScript final
{
public:
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WC_Trap_C_UserConstructionScript) == 0x000008, "Wrong alignment on WC_Trap_C_UserConstructionScript");
static_assert(sizeof(WC_Trap_C_UserConstructionScript) == 0x000010, "Wrong size on WC_Trap_C_UserConstructionScript");
static_assert(offsetof(WC_Trap_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'WC_Trap_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

}

