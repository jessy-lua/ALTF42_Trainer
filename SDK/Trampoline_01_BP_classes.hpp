#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trampoline_01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Trampoline_01_BP.Trampoline_01_BP_C
// 0x00B8 (0x0350 - 0x0298)
class ATrampoline_01_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   BlockArea;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  Ragdoll_RadialForce;                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   JustFS_04;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   JustFS_01;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   JustFS_02;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   JustFS_03;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Move_02;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base_02;                                           // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Zero2_PhysicsConstraint;                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PhysicsRoot1;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          JumpArea;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base_01;                                           // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Zero1_PhysicsConstraint;                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Move_01;                                           // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PhysicsRoot_01;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      TrampolineArea;                                    // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Trampoline;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ALTF4_2_Char_000;                                  // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       ALTF42_Char;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IN_;                                               // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4174[0x3];                                     // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Ragdoll_Force_Strength;                            // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Char_Launch_Z;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void End_DooneReset();
	void ExecuteUbergraph_Trampoline_01_BP(int32 EntryPoint);
	void TramAreaIN_Event();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Trampoline_01_BP_C">();
	}
	static class ATrampoline_01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrampoline_01_BP_C>();
	}
};
static_assert(alignof(ATrampoline_01_BP_C) == 0x000008, "Wrong alignment on ATrampoline_01_BP_C");
static_assert(sizeof(ATrampoline_01_BP_C) == 0x000350, "Wrong size on ATrampoline_01_BP_C");
static_assert(offsetof(ATrampoline_01_BP_C, UberGraphFrame) == 0x000298, "Member 'ATrampoline_01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, BlockArea) == 0x0002A0, "Member 'ATrampoline_01_BP_C::BlockArea' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Ragdoll_RadialForce) == 0x0002A8, "Member 'ATrampoline_01_BP_C::Ragdoll_RadialForce' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, JustFS_04) == 0x0002B0, "Member 'ATrampoline_01_BP_C::JustFS_04' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, JustFS_01) == 0x0002B8, "Member 'ATrampoline_01_BP_C::JustFS_01' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, JustFS_02) == 0x0002C0, "Member 'ATrampoline_01_BP_C::JustFS_02' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, JustFS_03) == 0x0002C8, "Member 'ATrampoline_01_BP_C::JustFS_03' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Move_02) == 0x0002D0, "Member 'ATrampoline_01_BP_C::Move_02' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Base_02) == 0x0002D8, "Member 'ATrampoline_01_BP_C::Base_02' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Zero2_PhysicsConstraint) == 0x0002E0, "Member 'ATrampoline_01_BP_C::Zero2_PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, PhysicsRoot1) == 0x0002E8, "Member 'ATrampoline_01_BP_C::PhysicsRoot1' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, JumpArea) == 0x0002F0, "Member 'ATrampoline_01_BP_C::JumpArea' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Base_01) == 0x0002F8, "Member 'ATrampoline_01_BP_C::Base_01' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Zero1_PhysicsConstraint) == 0x000300, "Member 'ATrampoline_01_BP_C::Zero1_PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Move_01) == 0x000308, "Member 'ATrampoline_01_BP_C::Move_01' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, PhysicsRoot_01) == 0x000310, "Member 'ATrampoline_01_BP_C::PhysicsRoot_01' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, TrampolineArea) == 0x000318, "Member 'ATrampoline_01_BP_C::TrampolineArea' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Trampoline) == 0x000320, "Member 'ATrampoline_01_BP_C::Trampoline' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, DefaultSceneRoot) == 0x000328, "Member 'ATrampoline_01_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, ALTF4_2_Char_000) == 0x000330, "Member 'ATrampoline_01_BP_C::ALTF4_2_Char_000' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, ALTF42_Char) == 0x000338, "Member 'ATrampoline_01_BP_C::ALTF42_Char' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, IN_) == 0x000340, "Member 'ATrampoline_01_BP_C::IN_' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Ragdoll_Force_Strength) == 0x000344, "Member 'ATrampoline_01_BP_C::Ragdoll_Force_Strength' has a wrong offset!");
static_assert(offsetof(ATrampoline_01_BP_C, Char_Launch_Z) == 0x000348, "Member 'ATrampoline_01_BP_C::Char_Launch_Z' has a wrong offset!");

}

