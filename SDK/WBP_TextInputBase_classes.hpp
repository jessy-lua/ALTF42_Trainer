#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TextInputBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FFontStyle_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "WBP_InteractableUserWidget_classes.hpp"
#include "EWidgetStyleState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TextInputBase.WBP_TextInputBase_C
// 0x02C8 (0x0748 - 0x0480)
class UWBP_TextInputBase_C final : public UWBP_InteractableUserWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_TextInputBase_C;                // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             OnOptionChanged;                                   // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bInEditMode;                                       // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F77[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextTemp;                                          // 0x04A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DefaultText;                                       // 0x04B8(0x0018)(Edit, BlueprintVisible)
	struct FLinearColor                           LeftBackgroundColor;                               // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightBackgroundColor;                              // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LeftHighlightColor;                                // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaximumCharacters;                                 // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOnlyNumeric;                                      // 0x0504(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F78[0x3];                                     // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RightHighlightColor;                               // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LeftActiveColor;                                   // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightActiveColor;                                  // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LeftDisabledColor;                                 // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightDisabledColor;                                // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextHighlightColor;                                // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextActiveColor;                                   // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextDisabledColor;                                 // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerTextColor;                                    // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerTextHighlightColor;                           // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerTextActiveColor;                              // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerTextDisabledColor;                            // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                HoverButtonRef;                                    // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                LeftBorderRef;                                     // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                OuterBorderRef;                                    // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                RightBorderRef;                                    // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEditableTextBox*                       TextInputBoxRef;                                   // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             OptionNameTextRef;                                 // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   LoadedValue;                                       // 0x0608(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnCustomApplyMethod;                               // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USizeBox*                               SizeBoxRef;                                        // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFFontStyle                            TextFontStyle;                                     // 0x0638(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FFFontStyle                            TextValueFontStyle;                                // 0x06B8(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UPDA_TextInputStyle_C*                  StyleData;                                         // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UButton*                                HoverBlockerButtonRef;                             // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ValidateInputIsNumeric(const class FText& InText, class FText* ModifiedText);
	void SetWidgetState(EWidgetStyleState Param_WidgetState);
	void SetSettingsValue();
	void SetInputTextAppearence(class UEditableTextBox* TextInput, const struct FFFontStyle& Font, const struct FLinearColor& Color);
	void SetDefaultTextFromSettingsData();
	void SetAndValidateInputText(const class FText& InText);
	void ResetSettingsValue();
	void PreConstruct(bool IsDesignTime);
	void OverrideWidgetStyleFromConfig();
	void OnTextInputCommitted(const class FText& Text, ETextCommit CommitMethod);
	void OnTextInputChanged(const class FText& Text);
	void OnSetupTextInput();
	void OnSetHighlightEffect(EWidgetStyleState Param_HighlightState, bool bPlaySound);
	void OnPressedSelect(const struct FKeyEvent& KeyEvent);
	void OnOptionChanged__DelegateSignature(const class FText& NewText, class UWBP_TextInputBase_C* TextInput);
	void OnCustomApplyMethod__DelegateSignature(class UWBP_TextInputBase_C* Text_Input);
	void OnButtonHovered();
	void OnButtonClicked();
	void GetSettingsValue();
	void ExecuteUbergraph_WBP_TextInputBase(int32 EntryPoint);
	void Construct();
	void ApplyWidgetStyleNormal();
	void ApplyWidgetStyleHighlighted();
	void ApplyWidgetStyleDisabled();
	void ApplyWidgetStyleActive();
	void ApplySettingsValue();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TextInputBase_C">();
	}
	static class UWBP_TextInputBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TextInputBase_C>();
	}
};
static_assert(alignof(UWBP_TextInputBase_C) == 0x000008, "Wrong alignment on UWBP_TextInputBase_C");
static_assert(sizeof(UWBP_TextInputBase_C) == 0x000748, "Wrong size on UWBP_TextInputBase_C");
static_assert(offsetof(UWBP_TextInputBase_C, UberGraphFrame_WBP_TextInputBase_C) == 0x000480, "Member 'UWBP_TextInputBase_C::UberGraphFrame_WBP_TextInputBase_C' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, OnOptionChanged) == 0x000488, "Member 'UWBP_TextInputBase_C::OnOptionChanged' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, bInEditMode) == 0x000498, "Member 'UWBP_TextInputBase_C::bInEditMode' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextTemp) == 0x0004A0, "Member 'UWBP_TextInputBase_C::TextTemp' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, DefaultText) == 0x0004B8, "Member 'UWBP_TextInputBase_C::DefaultText' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, LeftBackgroundColor) == 0x0004D0, "Member 'UWBP_TextInputBase_C::LeftBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, RightBackgroundColor) == 0x0004E0, "Member 'UWBP_TextInputBase_C::RightBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, LeftHighlightColor) == 0x0004F0, "Member 'UWBP_TextInputBase_C::LeftHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, MaximumCharacters) == 0x000500, "Member 'UWBP_TextInputBase_C::MaximumCharacters' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, bOnlyNumeric) == 0x000504, "Member 'UWBP_TextInputBase_C::bOnlyNumeric' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, RightHighlightColor) == 0x000508, "Member 'UWBP_TextInputBase_C::RightHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, LeftActiveColor) == 0x000518, "Member 'UWBP_TextInputBase_C::LeftActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, RightActiveColor) == 0x000528, "Member 'UWBP_TextInputBase_C::RightActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, LeftDisabledColor) == 0x000538, "Member 'UWBP_TextInputBase_C::LeftDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, RightDisabledColor) == 0x000548, "Member 'UWBP_TextInputBase_C::RightDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextColor) == 0x000558, "Member 'UWBP_TextInputBase_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextHighlightColor) == 0x000568, "Member 'UWBP_TextInputBase_C::TextHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextActiveColor) == 0x000578, "Member 'UWBP_TextInputBase_C::TextActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextDisabledColor) == 0x000588, "Member 'UWBP_TextInputBase_C::TextDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, InnerTextColor) == 0x000598, "Member 'UWBP_TextInputBase_C::InnerTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, InnerTextHighlightColor) == 0x0005A8, "Member 'UWBP_TextInputBase_C::InnerTextHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, InnerTextActiveColor) == 0x0005B8, "Member 'UWBP_TextInputBase_C::InnerTextActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, InnerTextDisabledColor) == 0x0005C8, "Member 'UWBP_TextInputBase_C::InnerTextDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, HoverButtonRef) == 0x0005D8, "Member 'UWBP_TextInputBase_C::HoverButtonRef' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, LeftBorderRef) == 0x0005E0, "Member 'UWBP_TextInputBase_C::LeftBorderRef' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, OuterBorderRef) == 0x0005E8, "Member 'UWBP_TextInputBase_C::OuterBorderRef' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, RightBorderRef) == 0x0005F0, "Member 'UWBP_TextInputBase_C::RightBorderRef' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextInputBoxRef) == 0x0005F8, "Member 'UWBP_TextInputBase_C::TextInputBoxRef' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, OptionNameTextRef) == 0x000600, "Member 'UWBP_TextInputBase_C::OptionNameTextRef' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, LoadedValue) == 0x000608, "Member 'UWBP_TextInputBase_C::LoadedValue' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, OnCustomApplyMethod) == 0x000620, "Member 'UWBP_TextInputBase_C::OnCustomApplyMethod' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, SizeBoxRef) == 0x000630, "Member 'UWBP_TextInputBase_C::SizeBoxRef' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextFontStyle) == 0x000638, "Member 'UWBP_TextInputBase_C::TextFontStyle' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, TextValueFontStyle) == 0x0006B8, "Member 'UWBP_TextInputBase_C::TextValueFontStyle' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, StyleData) == 0x000738, "Member 'UWBP_TextInputBase_C::StyleData' has a wrong offset!");
static_assert(offsetof(UWBP_TextInputBase_C, HoverBlockerButtonRef) == 0x000740, "Member 'UWBP_TextInputBase_C::HoverBlockerButtonRef' has a wrong offset!");

}

