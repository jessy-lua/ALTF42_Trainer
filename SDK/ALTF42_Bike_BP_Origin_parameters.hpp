#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALTF42_Bike_BP_Origin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.BikeEndArea_Event
// 0x0020 (0x0020 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_BikeEndArea_Event final
{
public:
	bool                                          Param_Crash_;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38ED[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SpawnLocation;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_BikeEndArea_Event) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_BikeEndArea_Event");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_BikeEndArea_Event) == 0x000020, "Wrong size on ALTF42_Bike_BP_Origin_C_BikeEndArea_Event");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BikeEndArea_Event, Param_Crash_) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_BikeEndArea_Event::Param_Crash_' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BikeEndArea_Event, SpawnLocation) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_BikeEndArea_Event::SpawnLocation' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_BndEvt__ALTF4_2_Bike_BP_Interactive_CheckOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.CalculateSuspMoveValues
// 0x0390 (0x0390 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues final
{
public:
	struct FVector                                HitLocationAccumulate;                             // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitPerWheel;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EF[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Sockets;                                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	double                                        RayAngle;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F0[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F1[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F2[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F3[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F4[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F5[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x00C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F6[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0110(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F7[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F8[0x1];                                     // 0x029B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F9[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FA[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast;        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues) == 0x000390, "Wrong size on ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, HitLocationAccumulate) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::HitLocationAccumulate' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, HitPerWheel) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::HitPerWheel' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Sockets) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Sockets' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, RayAngle) == 0x000030, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::RayAngle' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_bool_Variable) == 0x000038, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_int_Variable) == 0x00003C, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_bool_Variable_1) == 0x000048, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_int_Variable_1) == 0x00004C, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_IsWalking_ReturnValue) == 0x000054, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_int_Variable_2) == 0x000060, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_int_Variable_3) == 0x000064, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_GetSocketLocation_ReturnValue) == 0x000068, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_VSize_ReturnValue) == 0x0000A0, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A8, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_real_Variable) == 0x0000C0, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, K2Node_MakeArray_Array) == 0x0000C8, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_object_Variable) == 0x0000D8, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Divide_VectorInt_ReturnValue) == 0x0000E8, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Add_IntInt_ReturnValue_3) == 0x000104, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000108, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, Temp_real_Variable_1) == 0x000110, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Subtract_IntInt_ReturnValue) == 0x000118, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00011C, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_GetRightVector_ReturnValue) == 0x000120, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_GetUpVector_ReturnValue) == 0x000138, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000150, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000168, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_RotateAngleAxis_ReturnValue) == 0x000180, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000198, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_LineTraceSingle_OutHit) == 0x0001B0, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_LineTraceSingle_ReturnValue) == 0x000298, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_bBlockingHit) == 0x000299, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_bInitialOverlap) == 0x00029A, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_Time) == 0x00029C, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_Distance) == 0x0002A0, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_Location) == 0x0002A8, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C0, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_Normal) == 0x0002D8, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_ImpactNormal) == 0x0002F0, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_PhysMat) == 0x000308, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_HitActor) == 0x000310, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_HitComponent) == 0x000318, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_HitBoneName) == 0x000320, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_BoneName) == 0x000328, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_HitItem) == 0x000330, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_ElementIndex) == 0x000334, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_FaceIndex) == 0x000338, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_TraceStart) == 0x000340, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_BreakHitResult_TraceEnd) == 0x000358, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_Add_VectorVector_ReturnValue) == 0x000370, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_SetMorphTarget_Value_ImplicitCast) == 0x000388, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_SetMorphTarget_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x00038C, "Member 'ALTF42_Bike_BP_Origin_C_CalculateSuspMoveValues::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.CustomPhysics
// 0x0838 (0x0838 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_CustomPhysics final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FD[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue_1;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FE[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_WheelTrace_HitLocation;                   // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_WheelTrace_HitLocation_1;                 // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FF[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3900[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x01C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x02B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_2;     // 0x03E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_3;     // 0x04E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3901[0x7];                                     // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3902[0x7];                                     // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0658(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0740(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast_1;       // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_CustomPhysics) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_CustomPhysics");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_CustomPhysics) == 0x000838, "Wrong size on ALTF42_Bike_BP_Origin_C_CustomPhysics");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, Temp_bool_Variable) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_FindLookAtRotation_ReturnValue) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_X) == 0x000030, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_Y) == 0x000038, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_Z) == 0x000040, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000048, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_IsWalking_ReturnValue) == 0x000050, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, Temp_bool_Variable_1) == 0x000051, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_X_1) == 0x000058, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_Y_1) == 0x000060, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_Z_1) == 0x000068, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_IsWalking_ReturnValue_1) == 0x000070, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_IsWalking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_IsFalling_ReturnValue) == 0x000071, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_GetSocketLocation_ReturnValue) == 0x000078, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_WheelTrace_HitLocation) == 0x000090, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_WheelTrace_HitLocation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0000A8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_WheelTrace_HitLocation_1) == 0x0000C0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_WheelTrace_HitLocation_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000D8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Roll_1) == 0x0000F0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Pitch_1) == 0x0000F4, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Yaw_1) == 0x0000F8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000100, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_ReturnValue) == 0x000118, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Roll_2) == 0x000130, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Pitch_2) == 0x000134, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakRotator_Yaw_2) == 0x000138, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_ReturnValue_1) == 0x000140, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_ReturnValue_2) == 0x000158, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_ReturnValue_3) == 0x000170, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000188, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000190, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_RInterpTo_ReturnValue) == 0x000198, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_RInterpTo_ReturnValue_1) == 0x0001B0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0001C8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0002B0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_ReturnValue_4) == 0x000398, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_SelectFloat_ReturnValue) == 0x0003B0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_ComposeRotators_ReturnValue) == 0x0003B8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_ReturnValue_5) == 0x0003D0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_SetWorldRotation_SweepHitResult_2) == 0x0003E8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_SetWorldRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_ComposeRotators_ReturnValue_1) == 0x0004D0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_SetWorldRotation_SweepHitResult_3) == 0x0004E8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_SetWorldRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_Not_PreBool_ReturnValue) == 0x0005D0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_X_2) == 0x0005D8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_Y_2) == 0x0005E0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_BreakVector_Z_2) == 0x0005E8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0005F0, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, K2Node_Select_Default) == 0x0005F8, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, K2Node_Select_Default_1) == 0x000600, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000608, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MapRangeClamped_ReturnValue) == 0x000610, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000618, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_FInterpTo_ReturnValue) == 0x000620, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeVector_ReturnValue) == 0x000628, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeVector_ReturnValue_1) == 0x000640, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000658, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000740, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000828, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_RInterpTo_DeltaTime_ImplicitCast_1) == 0x00082C, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_RInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000830, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_CustomPhysics, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000834, "Member 'ALTF42_Bike_BP_Origin_C_CustomPhysics::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.ExecuteUbergraph_ALTF42_Bike_BP_Origin
// 0x1780 (0x1780 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3903[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3904[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3905[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3906[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3907[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3908[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3909[0x5];                                     // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue_1;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390A[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue_1;     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390B[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue_2;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390C[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390D[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF42_InGame_PC_Loco_C*               K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco;       // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390E[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390F[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3910[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3911[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_2;          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3912[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInputAxisValue_ReturnValue_3;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_4;          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3913[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3914[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_5;           // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3915[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue_2;                      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3916[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3917[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_5;          // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3918[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3919[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391A[0x3];                                     // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0378(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0470(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391B[0x4];                                     // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391C[0x7];                                     // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_1;              // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391D[0x3];                                     // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Select_Projectile_Value;        // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Char_Health;                    // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Char_Costume_Integer;           // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_GetSave_;                       // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391E[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Get_Save_Location;              // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Crash__1;                       // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391F[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x04F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3920[0x3];                                     // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3921[0x6];                                     // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0588(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3922[0x2];                                     // 0x0672(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3923[0x4];                                     // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x06F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3924[0x4];                                     // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3925[0x7];                                     // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_WaterZ;                         // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_WaterOverlapLocation;           // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0798(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3926[0x6];                                     // 0x07AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3927[0x4];                                     // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3928[0x7];                                     // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3929[0x7];                                     // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_3;                      // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue_3;                  // 0x0821(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0822(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392A[0x5];                                     // 0x0823(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392B[0x7];                                     // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_F_Char_GIraffe_Costume_Costume_Spawn_Location; // 0x0858(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_GIraffe_Costume_Giraffe_Scale;     // 0x0870(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_GIraffe_Costume_Giraffe_Location;  // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_GIraffe_Costume_Giraffe_Rotation;  // 0x08A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392C[0x8];                                     // 0x08B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x08C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392D[0x7];                                     // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392E[0x7];                                     // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACostume_Giraffe_BP_C*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Flamingo_Costume_Costume_Spawn_Location; // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Flamingo_Costume_Flamingo_Scale;   // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Flamingo_Costume_Flamingo_Location; // 0x0970(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Flamingo_Costume_Flamingo_Rotation; // 0x0988(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x09A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0A30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392F[0x7];                                     // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACostume_Flamingo_BP_C*                 CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0A50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Unicorn_Costume_Costume_Spawn_Location; // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Unicorn_Costume_Unicorn_Scale;     // 0x0A70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Unicorn_Costume_Unicorn_Location;  // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Unicorn_Costume_Unicorn_Rotation;  // 0x0AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_F_Char_Unicorn_Costume_Unicorn_Tail_Location; // 0x0AB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Unicorn_Costume_Unicorn_Tail_Rotation; // 0x0AD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3930[0x8];                                     // 0x0AE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0AF0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Horse_Costume_Costume_Spawn_Location; // 0x0B58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Horse_Costume_Costume_Scale;       // 0x0B70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Horse_Costume_Horse_Location;      // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Horse_Costume_Horse_Rotation;      // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3931[0x8];                                     // 0x0BB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0BC0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x0C20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACostume_Horse_BP_C*                    CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACostume_Unicorn_BP_C*                  CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0C30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Cannabis_Costume_Costume_Spawn_Location; // 0x0C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Cannabis_Costume_Costume_Scale;    // 0x0C50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Cannabis_Costume_Cannabis_Location; // 0x0C68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Cannabis_Costume_Cannabis_Rotation; // 0x0C80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3932[0x8];                                     // 0x0C98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0CA0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x0D00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACostume_Cannabis_BP_C*                 CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Feather_ON_;                    // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Head_Opacity_;                  // 0x0D12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3933[0x5];                                     // 0x0D13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_F_Char_Moai_Costume_Costume_Spawn_Location; // 0x0D18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Moai_Costume_Moai_Scale;           // 0x0D30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Moai_Costume_Moai_Location;        // 0x0D48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Moai_Costume_Moai_Rotation;        // 0x0D60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3934[0x8];                                     // 0x0D78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0D80(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x0DE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACostume_Moai_BP_C*                     CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x0DE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Crash_;                         // 0x0DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3935[0x7];                                     // 0x0DF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_SpawnLocation;                  // 0x0DF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0E10(0x0018)(HasGetValueTypeHash)
	TArray<class ATeleportTarget_BP_C*>           CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0E28(0x0010)(ReferenceParm)
	class ATeleportTarget_BP_C*                   CallFunc_Array_Get_Item;                           // 0x0E38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0E40(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0EA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0EB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0ED0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3936[0x8];                                     // 0x0EE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0EF0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x0F50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_Bike_BP_Origin_C*               CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x0F58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0F60(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Bikini_Costume_Costume_Spawn_Location; // 0x0F78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Bikini_Costume_Costume_Scale;      // 0x0F90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Bikini_Costume_Top_Location;       // 0x0FA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Bikini_Costume_Top_Rotation;       // 0x0FC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_F_Char_Bikini_Costume_Bot_Location;       // 0x0FD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Bikini_Costume_BotRotator;         // 0x0FF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3937[0x8];                                     // 0x1008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x1010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x1070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Santa_Costume_Costume_Spawn_Location; // 0x1078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Santa_Costume_Costume_Scale;       // 0x1090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Santa_Costume_SantaHat_Location;   // 0x10A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Santa_Costume_SantaHat_Rotation;   // 0x10C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_F_Char_Santa_Costume_SantaBag_Location;   // 0x10D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Santa_Costume_SantaBag_Rotation;   // 0x10F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3938[0x8];                                     // 0x1108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x1110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x1170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACostume_Santa_BP_C*                    CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x1178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACostume_Bikini_BP_C*                   CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x1180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x1188(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Rocket_Costume_Costume_Spawn_Location; // 0x11A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Rocket_Costume_Costume_Scale;      // 0x11B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_Char_Rocket_Costume_RocektHat_Location; // 0x11D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Rocket_Costume_RocektHat_Rotation; // 0x11E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_F_Char_Rocket_Costume_RocektBag_Location; // 0x1200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_Char_Rocket_Costume_RocektBag_Rotation; // 0x1218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x1230(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3939[0x7];                                     // 0x1291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10; // 0x1298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x12A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACostume_Rocket_BP_C*                   CallFunc_FinishSpawningActor_ReturnValue_10;       // 0x12A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x12B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x12B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x12C0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x12E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x12E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x12E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x12F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x12F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x1300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393A[0x7];                                     // 0x1301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x1308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x1310(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x13F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x13FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x1400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x1404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x1405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393B[0x2];                                     // 0x1406(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x1408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x1410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x1418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x1420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x1428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x1430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x1438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x1440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x1448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x1450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x1458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue_1;                 // 0x1460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x1468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x1480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x1498(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x1580(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_22;     // 0x1668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_23;     // 0x1670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_24;     // 0x1678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_25;     // 0x1680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x1688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393C[0x7];                                     // 0x1689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x1690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x1698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393D[0x7];                                     // 0x1699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_26;     // 0x16A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x16A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x16B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x16B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393E[0x6];                                     // 0x16B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x16B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x16C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x16C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast; // 0x16D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x16D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x16D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x16E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x16E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x16F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x16F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x1700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4;   // 0x1708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5;   // 0x1710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6;   // 0x1718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x1720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1; // 0x1728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast_2; // 0x172C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x1730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast; // 0x1738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x173C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1; // 0x1740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast_1; // 0x1744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x1748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x174C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x1750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x1758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x175C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x1760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast_1; // 0x1764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x1768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast_1; // 0x176C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x1770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin) == 0x000010, "Wrong alignment on ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin) == 0x001780, "Wrong size on ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, EntryPoint) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputAxisEvent_AxisValue_3) == 0x000004, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_IsClosed_Variable) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000019, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputAxisEvent_AxisValue_4) == 0x00001C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_IsFalling_ReturnValue) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000028, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputAxisEvent_AxisValue_5) == 0x000048, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Square_ReturnValue) == 0x000060, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_Event_DeltaSeconds) == 0x000068, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_IsWalking_ReturnValue) == 0x000080, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetRightVector_ReturnValue) == 0x000098, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetForwardVector_ReturnValue) == 0x0000B0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000C8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000E0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakVector_X) == 0x0000E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakVector_Y) == 0x0000F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FInterpTo_ReturnValue) == 0x000100, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000108, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000109, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BooleanOR_ReturnValue) == 0x00010A, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000110, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_IsWalking_ReturnValue_1) == 0x000118, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_IsWalking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetCurrentAcceleration_ReturnValue_1) == 0x000120, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetCurrentAcceleration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_VSize_ReturnValue_1) == 0x000138, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MapRangeClamped_ReturnValue) == 0x000140, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000148, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Subtract_IntInt_ReturnValue) == 0x000150, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000158, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000160, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Character) == 0x000168, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_PrevMovementMode) == 0x000170, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_PreviousCustomMode) == 0x000171, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000172, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000173, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_IsWalking_ReturnValue_2) == 0x000174, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_IsWalking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_SetTimer_ReturnValue) == 0x000178, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetPlayerController_ReturnValue) == 0x000180, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Has_Been_Initd_Variable) == 0x000188, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco) == 0x000190, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetForwardVector_ReturnValue_2) == 0x0001A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetForwardVector_ReturnValue_3) == 0x0001B8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetForwardVector_ReturnValue_4) == 0x0001D0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0001F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FTrunc_ReturnValue) == 0x0001F4, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Not_PreBool_ReturnValue) == 0x0001F9, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BooleanAND_ReturnValue) == 0x0001FA, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001FB, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BooleanOR_ReturnValue_1) == 0x0001FC, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue) == 0x000200, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetInputAxisValue_ReturnValue) == 0x000208, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00020C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue_1) == 0x000210, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x000218, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetInputAxisValue_ReturnValue_2) == 0x00021C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetInputAxisValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000220, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetInputAxisValue_ReturnValue_3) == 0x00022C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetInputAxisValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FClamp_ReturnValue_1) == 0x000230, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetInputAxisValue_ReturnValue_4) == 0x000238, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetInputAxisValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000240, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000248, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000250, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Lerp_ReturnValue) == 0x000258, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue_2) == 0x000260, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FClamp_ReturnValue_2) == 0x000268, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetForwardVector_ReturnValue_5) == 0x000270, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetVelocity_ReturnValue) == 0x000288, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0002A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x0002A8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_VSize_ReturnValue_2) == 0x0002B0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue_3) == 0x0002B8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0002C0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0002C8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FClamp_ReturnValue_3) == 0x0002D0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0002D8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Roll) == 0x0002E0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Pitch) == 0x0002E4, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Yaw) == 0x0002E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue_4) == 0x0002F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue_5) == 0x0002F8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000300, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000308, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000310, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000318, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Has_Been_Initd_Variable_1) == 0x000320, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000328, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000330, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetInputAxisValue_ReturnValue_5) == 0x000338, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetInputAxisValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_IsClosed_Variable_1) == 0x00033C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000340, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FInterpTo_ReturnValue_1) == 0x000348, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Has_Been_Initd_Variable_2) == 0x000350, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000358, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000360, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000368, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000370, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_bFromSweep) == 0x000374, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_SweepResult) == 0x000378, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000460, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OtherActor) == 0x000468, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OtherComp) == 0x000470, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000478, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000480, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_DynamicCast_bSuccess_1) == 0x000488, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_DynamicCast_AsALTF4_Loco_BP_1) == 0x000490, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_DynamicCast_AsALTF4_Loco_BP_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_DynamicCast_bSuccess_2) == 0x000498, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Select_Projectile_Value) == 0x00049C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Select_Projectile_Value' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Char_Health) == 0x0004A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Char_Health' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Char_Costume_Integer) == 0x0004A4, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Char_Costume_Integer' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_GetSave_) == 0x0004A8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_GetSave_' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Get_Save_Location) == 0x0004B0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Get_Save_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Crash__1) == 0x0004C8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Crash__1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0004D0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetPlayerController_ReturnValue_1) == 0x0004E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue) == 0x0004F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000550, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue) == 0x000558, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputAxisEvent_AxisValue_2) == 0x000560, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputAxisEvent_AxisValue_1) == 0x000564, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000568, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_IsClosed_Variable_2) == 0x000570, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Roll_1) == 0x000574, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Pitch_1) == 0x000578, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Yaw_1) == 0x00057C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_IsClosed_Variable_3) == 0x000580, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Has_Been_Initd_Variable_3) == 0x000581, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_Event_Hit) == 0x000588, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_bBlockingHit) == 0x000670, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_bInitialOverlap) == 0x000671, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_Time) == 0x000674, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_Distance) == 0x000678, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_Location) == 0x000680, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_ImpactPoint) == 0x000698, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_Normal) == 0x0006B0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_ImpactNormal) == 0x0006C8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_PhysMat) == 0x0006E0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_HitActor) == 0x0006E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_HitComponent) == 0x0006F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_HitBoneName) == 0x0006F8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_BoneName) == 0x000700, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_HitItem) == 0x000708, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_ElementIndex) == 0x00070C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_FaceIndex) == 0x000710, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_TraceStart) == 0x000718, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakHitResult_TraceEnd) == 0x000730, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetVelocity_ReturnValue_1) == 0x000748, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000760, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000768, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_IsValid_ReturnValue) == 0x000770, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_WaterZ) == 0x000778, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_WaterZ' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_WaterOverlapLocation) == 0x000780, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_WaterOverlapLocation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CreateDelegate_OutputDelegate) == 0x000798, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_IsClosed_Variable_4) == 0x0007A8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0007A9, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue_6) == 0x0007B0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputAxisEvent_AxisValue) == 0x0007B8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x0007C0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0007C8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Lerp_ReturnValue_1) == 0x0007D0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FClamp_ReturnValue_4) == 0x0007D8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_IsFalling_ReturnValue_1) == 0x0007E0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetComponentVelocity_ReturnValue) == 0x0007E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000800, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_VSize_ReturnValue_3) == 0x000818, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000820, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_IsWalking_ReturnValue_3) == 0x000821, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_IsWalking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BooleanAND_ReturnValue_1) == 0x000822, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SelectFloat_ReturnValue_7) == 0x000828, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000830, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000838, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000840, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000848, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_SwitchInteger_CmpSuccess) == 0x000850, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_GIraffe_Costume_Costume_Spawn_Location) == 0x000858, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_GIraffe_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_GIraffe_Costume_Giraffe_Scale) == 0x000870, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_GIraffe_Costume_Giraffe_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_GIraffe_Costume_Giraffe_Location) == 0x000888, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_GIraffe_Costume_Giraffe_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_GIraffe_Costume_Giraffe_Rotation) == 0x0008A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_GIraffe_Costume_Giraffe_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_1) == 0x0008C0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000920, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000928, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BooleanAND_ReturnValue_2) == 0x000930, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000938, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Flamingo_Costume_Costume_Spawn_Location) == 0x000940, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Flamingo_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Flamingo_Costume_Flamingo_Scale) == 0x000958, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Flamingo_Costume_Flamingo_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Flamingo_Costume_Flamingo_Location) == 0x000970, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Flamingo_Costume_Flamingo_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Flamingo_Costume_Flamingo_Rotation) == 0x000988, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Flamingo_Costume_Flamingo_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_2) == 0x0009A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000A00, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x000A08, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000A10, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_ReturnValue) == 0x000A18, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_ReturnValue_1) == 0x000A30, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000A48, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000A50, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Unicorn_Costume_Costume_Spawn_Location) == 0x000A58, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Unicorn_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Unicorn_Costume_Unicorn_Scale) == 0x000A70, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Unicorn_Costume_Unicorn_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Unicorn_Costume_Unicorn_Location) == 0x000A88, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Unicorn_Costume_Unicorn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Unicorn_Costume_Unicorn_Rotation) == 0x000AA0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Unicorn_Costume_Unicorn_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Unicorn_Costume_Unicorn_Tail_Location) == 0x000AB8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Unicorn_Costume_Unicorn_Tail_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Unicorn_Costume_Unicorn_Tail_Rotation) == 0x000AD0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Unicorn_Costume_Unicorn_Tail_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_3) == 0x000AF0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000B50, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Horse_Costume_Costume_Spawn_Location) == 0x000B58, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Horse_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Horse_Costume_Costume_Scale) == 0x000B70, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Horse_Costume_Costume_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Horse_Costume_Horse_Location) == 0x000B88, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Horse_Costume_Horse_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Horse_Costume_Horse_Rotation) == 0x000BA0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Horse_Costume_Horse_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_4) == 0x000BC0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x000C20, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000C28, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000C30, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Cannabis_Costume_Costume_Spawn_Location) == 0x000C38, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Cannabis_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Cannabis_Costume_Costume_Scale) == 0x000C50, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Cannabis_Costume_Costume_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Cannabis_Costume_Cannabis_Location) == 0x000C68, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Cannabis_Costume_Cannabis_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Cannabis_Costume_Cannabis_Rotation) == 0x000C80, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Cannabis_Costume_Cannabis_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_5) == 0x000CA0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x000D00, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000D08, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_SwitchInteger_CmpSuccess_1) == 0x000D10, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Feather_ON_) == 0x000D11, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Feather_ON_' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Head_Opacity_) == 0x000D12, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Head_Opacity_' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Moai_Costume_Costume_Spawn_Location) == 0x000D18, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Moai_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Moai_Costume_Moai_Scale) == 0x000D30, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Moai_Costume_Moai_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Moai_Costume_Moai_Location) == 0x000D48, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Moai_Costume_Moai_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Moai_Costume_Moai_Rotation) == 0x000D60, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Moai_Costume_Moai_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_6) == 0x000D80, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x000DE0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x000DE8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_Crash_) == 0x000DF0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_Crash_' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_CustomEvent_SpawnLocation) == 0x000DF8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_CustomEvent_SpawnLocation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_struct_Variable) == 0x000E10, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000E28, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Array_Get_Item) == 0x000E38, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000E40, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakTransform_Location) == 0x000EA0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakTransform_Rotation) == 0x000EB8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakTransform_Scale) == 0x000ED0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_7) == 0x000EF0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x000F50, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x000F58, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputActionEvent_Key) == 0x000F60, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Bikini_Costume_Costume_Spawn_Location) == 0x000F78, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Bikini_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Bikini_Costume_Costume_Scale) == 0x000F90, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Bikini_Costume_Costume_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Bikini_Costume_Top_Location) == 0x000FA8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Bikini_Costume_Top_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Bikini_Costume_Top_Rotation) == 0x000FC0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Bikini_Costume_Top_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Bikini_Costume_Bot_Location) == 0x000FD8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Bikini_Costume_Bot_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Bikini_Costume_BotRotator) == 0x000FF0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Bikini_Costume_BotRotator' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_8) == 0x001010, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x001070, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Santa_Costume_Costume_Spawn_Location) == 0x001078, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Santa_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Santa_Costume_Costume_Scale) == 0x001090, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Santa_Costume_Costume_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Santa_Costume_SantaHat_Location) == 0x0010A8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Santa_Costume_SantaHat_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Santa_Costume_SantaHat_Rotation) == 0x0010C0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Santa_Costume_SantaHat_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Santa_Costume_SantaBag_Location) == 0x0010D8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Santa_Costume_SantaBag_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Santa_Costume_SantaBag_Rotation) == 0x0010F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Santa_Costume_SantaBag_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_9) == 0x001110, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x001170, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x001178, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x001180, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_InputActionEvent_Key_1) == 0x001188, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Rocket_Costume_Costume_Spawn_Location) == 0x0011A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Rocket_Costume_Costume_Spawn_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Rocket_Costume_Costume_Scale) == 0x0011B8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Rocket_Costume_Costume_Scale' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Rocket_Costume_RocektHat_Location) == 0x0011D0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Rocket_Costume_RocektHat_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Rocket_Costume_RocektHat_Rotation) == 0x0011E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Rocket_Costume_RocektHat_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Rocket_Costume_RocektBag_Location) == 0x001200, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Rocket_Costume_RocektBag_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_F_Char_Rocket_Costume_RocektBag_Rotation) == 0x001218, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_F_Char_Rocket_Costume_RocektBag_Rotation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeTransform_ReturnValue_10) == 0x001230, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Variable) == 0x001290, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10) == 0x001298, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_real_Variable) == 0x0012A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FinishSpawningActor_ReturnValue_10) == 0x0012A8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FinishSpawningActor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_real_Variable_1) == 0x0012B0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_object_Variable) == 0x0012B8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_EnhancedInputActionEvent_ActionValue) == 0x0012C0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0012E0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0012E4, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_EnhancedInputActionEvent_SourceAction) == 0x0012E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_real_Variable_1_0) == 0x0012F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_real_Variable_0) == 0x0012F8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x001300, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, K2Node_Event_NewController) == 0x001308, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x001310, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Roll_2) == 0x0013F8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Pitch_2) == 0x0013FC, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_BreakRotator_Yaw_2) == 0x001400, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Has_Been_Initd_Variable_4) == 0x001404, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Has_Been_Initd_Variable_5) == 0x001405, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetController_ReturnValue) == 0x001408, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetController_ReturnValue_1) == 0x001410, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetComponentByClass_ReturnValue) == 0x001418, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_GetComponentByClass_ReturnValue_1) == 0x001420, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x001428, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x001430, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x001438, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x001440, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x001448, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x001450, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_ClampAngle_ReturnValue) == 0x001458, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_ClampAngle_ReturnValue_1) == 0x001460, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_ReturnValue_2) == 0x001468, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_ReturnValue_3) == 0x001480, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x001498, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x001580, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_22) == 0x001668, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_23) == 0x001670, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_24) == 0x001678, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_25) == 0x001680, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_IsClosed_Variable_5) == 0x001688, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x001690, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x001698, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_ReturnValue_26) == 0x0016A0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FClamp_ReturnValue_5) == 0x0016A8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_Has_Been_Initd_Variable_6) == 0x0016B0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, Temp_bool_IsClosed_Variable_6) == 0x0016B1, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0016B8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0016C0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0016C8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_AddMovementInput_ScaleValue_ImplicitCast) == 0x0016D0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_AddMovementInput_ScaleValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0016D4, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0016D8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x0016E0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0016E8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_FClamp_Value_ImplicitCast) == 0x0016F0, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0016F8, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x001700, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4) == 0x001708, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5) == 0x001710, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6) == 0x001718, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x001720, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1) == 0x001728, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_AddMovementInput_ScaleValue_ImplicitCast_2) == 0x00172C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_AddMovementInput_ScaleValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x001730, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast) == 0x001738, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x00173C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1) == 0x001740, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast_1) == 0x001744, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x001748, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x00174C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x001750, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x001758, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x00175C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x001760, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_AddControllerPitchInput_Val_ImplicitCast_1) == 0x001764, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_AddControllerPitchInput_Val_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x001768, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_AddControllerYawInput_Val_ImplicitCast_1) == 0x00176C, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_AddControllerYawInput_Val_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin, CallFunc_Delay_Duration_ImplicitCast) == 0x001770, "Member 'ALTF42_Bike_BP_Origin_C_ExecuteUbergraph_ALTF42_Bike_BP_Origin::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.F_Feather_OnOff
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_F_Feather_OnOff final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_F_Feather_OnOff) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_F_Feather_OnOff");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_F_Feather_OnOff) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_F_Feather_OnOff");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_F_Feather_OnOff, ParameterValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_F_Feather_OnOff::ParameterValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.F_Head_OnOff
// 0x0008 (0x0008 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_F_Head_OnOff final
{
public:
	float                                         ParameterValue_01;                                 // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParameterValue_02;                                 // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_F_Head_OnOff) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_F_Head_OnOff");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_F_Head_OnOff) == 0x000008, "Wrong size on ALTF42_Bike_BP_Origin_C_F_Head_OnOff");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_F_Head_OnOff, ParameterValue_01) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_F_Head_OnOff::ParameterValue_01' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_F_Head_OnOff, ParameterValue_02) == 0x000004, "Member 'ALTF42_Bike_BP_Origin_C_F_Head_OnOff::ParameterValue_02' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.FearterAndHeadOpacity
// 0x0002 (0x0002 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity final
{
public:
	bool                                          Feather_ON_;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Head_Opacity_;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity) == 0x000001, "Wrong alignment on ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity) == 0x000002, "Wrong size on ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity, Feather_ON_) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity::Feather_ON_' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity, Head_Opacity_) == 0x000001, "Member 'ALTF42_Bike_BP_Origin_C_FearterAndHeadOpacity::Head_Opacity_' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.Get Arms IK
// 0x00C8 (0x00C8 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_Get_Arms_IK final
{
public:
	struct FVector                                L_Arm;                                             // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                R_Arm;                                             // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Leg;                                             // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                R_Leg;                                             // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393F[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_Get_Arms_IK");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK) == 0x0000C8, "Wrong size on ALTF42_Bike_BP_Origin_C_Get_Arms_IK");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, L_Arm) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::L_Arm' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, R_Arm) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::R_Arm' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, L_Leg) == 0x000030, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::L_Leg' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, R_Leg) == 0x000048, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::R_Leg' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, CallFunc_GetSocketLocation_ReturnValue) == 0x000068, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000080, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000098, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Get_Arms_IK, CallFunc_GetSocketLocation_ReturnValue_3) == 0x0000B0, "Member 'ALTF42_Bike_BP_Origin_C_Get_Arms_IK::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'ALTF42_Bike_BP_Origin_C_InpActEvt_IA_Suicide_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpActEvt_Jump_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpActEvt_Jump_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpActEvt_Jump_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_40
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40, AxisValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40::AxisValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53, AxisValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53::AxisValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79, AxisValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79::AxisValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90, AxisValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90::AxisValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_47
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47, AxisValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47::AxisValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38, AxisValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38::AxisValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.MovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_MovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_MovementModeChanged) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_MovementModeChanged");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_MovementModeChanged) == 0x000010, "Wrong size on ALTF42_Bike_BP_Origin_C_MovementModeChanged");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_MovementModeChanged, Character) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_MovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_MovementModeChanged, PrevMovementMode) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_MovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_MovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'ALTF42_Bike_BP_Origin_C_MovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.OnLanded
// 0x00E8 (0x00E8 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_OnLanded) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_OnLanded");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_OnLanded) == 0x0000E8, "Wrong size on ALTF42_Bike_BP_Origin_C_OnLanded");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_OnLanded, Hit) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_OnLanded::Hit' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_ReceivePossessed) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_ReceivePossessed");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_ReceivePossessed) == 0x000008, "Wrong size on ALTF42_Bike_BP_Origin_C_ReceivePossessed");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ReceivePossessed, NewController) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_ReceivePossessed::NewController' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_ReceiveTick) == 0x000004, "Wrong alignment on ALTF42_Bike_BP_Origin_C_ReceiveTick");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_ReceiveTick) == 0x000004, "Wrong size on ALTF42_Bike_BP_Origin_C_ReceiveTick");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.Ride_BikeEvent
// 0x0028 (0x0028 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_Ride_BikeEvent final
{
public:
	int32                                         Select_Projectile_Value;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Char_Health;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Char_Costume_Integer;                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GetSave_;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3940[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Param_Get_Save_Location;                           // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_Ride_BikeEvent) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_Ride_BikeEvent");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_Ride_BikeEvent) == 0x000028, "Wrong size on ALTF42_Bike_BP_Origin_C_Ride_BikeEvent");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Ride_BikeEvent, Select_Projectile_Value) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_Ride_BikeEvent::Select_Projectile_Value' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Ride_BikeEvent, Param_Char_Health) == 0x000004, "Member 'ALTF42_Bike_BP_Origin_C_Ride_BikeEvent::Param_Char_Health' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Ride_BikeEvent, Param_Char_Costume_Integer) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_Ride_BikeEvent::Param_Char_Costume_Integer' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Ride_BikeEvent, GetSave_) == 0x00000C, "Member 'ALTF42_Bike_BP_Origin_C_Ride_BikeEvent::GetSave_' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Ride_BikeEvent, Param_Get_Save_Location) == 0x000010, "Member 'ALTF42_Bike_BP_Origin_C_Ride_BikeEvent::Param_Get_Save_Location' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.Show Loading Widget
// 0x0028 (0x0028 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_Show_Loading_Widget final
{
public:
	class ABP_MenuSystemActor_C*                  CallFunc_GetMenuSystemProActorFromLibrary_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_As_________;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3941[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_Show_Loading_Widget) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_Show_Loading_Widget");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_Show_Loading_Widget) == 0x000028, "Wrong size on ALTF42_Bike_BP_Origin_C_Show_Loading_Widget");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Show_Loading_Widget, CallFunc_GetMenuSystemProActorFromLibrary_ReturnValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_Show_Loading_Widget::CallFunc_GetMenuSystemProActorFromLibrary_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Show_Loading_Widget, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_Show_Loading_Widget::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Show_Loading_Widget, K2Node_DynamicCast_As_________) == 0x000010, "Member 'ALTF42_Bike_BP_Origin_C_Show_Loading_Widget::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Show_Loading_Widget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_Show_Loading_Widget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_Show_Loading_Widget, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_Show_Loading_Widget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.ShowStory_EndStageWidget
// 0x0028 (0x0028 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget final
{
public:
	class ABP_MenuSystemActor_C*                  CallFunc_GetMenuSystemProActorFromLibrary_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_As_________;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3942[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget) == 0x000028, "Wrong size on ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget, CallFunc_GetMenuSystemProActorFromLibrary_ReturnValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget::CallFunc_GetMenuSystemProActorFromLibrary_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget, K2Node_DynamicCast_As_________) == 0x000010, "Member 'ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_ShowStory_EndStageWidget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.UnRide_BikeEvent
// 0x0001 (0x0001 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_UnRide_BikeEvent final
{
public:
	bool                                          Param_Crash_;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_UnRide_BikeEvent) == 0x000001, "Wrong alignment on ALTF42_Bike_BP_Origin_C_UnRide_BikeEvent");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_UnRide_BikeEvent) == 0x000001, "Wrong size on ALTF42_Bike_BP_Origin_C_UnRide_BikeEvent");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UnRide_BikeEvent, Param_Crash_) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_UnRide_BikeEvent::Param_Crash_' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.UpdateSpeed
// 0x0060 (0x0060 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_UpdateSpeed final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3943[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3944[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3945[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3946[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3947[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_UpdateSpeed) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_UpdateSpeed");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_UpdateSpeed) == 0x000060, "Wrong size on ALTF42_Bike_BP_Origin_C_UpdateSpeed");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_IsWalking_ReturnValue) == 0x000010, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000021, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_GetVelocity_ReturnValue) == 0x000028, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_UpdateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'ALTF42_Bike_BP_Origin_C_UpdateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.WaterDie_Event
// 0x0020 (0x0020 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_WaterDie_Event final
{
public:
	double                                        WaterZ;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WaterOverlapLocation;                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_WaterDie_Event) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_WaterDie_Event");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_WaterDie_Event) == 0x000020, "Wrong size on ALTF42_Bike_BP_Origin_C_WaterDie_Event");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WaterDie_Event, WaterZ) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_WaterDie_Event::WaterZ' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WaterDie_Event, WaterOverlapLocation) == 0x000008, "Member 'ALTF42_Bike_BP_Origin_C_WaterDie_Event::WaterOverlapLocation' has a wrong offset!");

// Function ALTF42_Bike_BP_Origin.ALTF42_Bike_BP_Origin_C.WheelTrace
// 0x02B8 (0x02B8 - 0x0000)
struct ALTF42_Bike_BP_Origin_C_WheelTrace final
{
public:
	struct FVector                                SocketLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3948[0x1];                                     // 0x01E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3949[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394A[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALTF42_Bike_BP_Origin_C_WheelTrace) == 0x000008, "Wrong alignment on ALTF42_Bike_BP_Origin_C_WheelTrace");
static_assert(sizeof(ALTF42_Bike_BP_Origin_C_WheelTrace) == 0x0002B8, "Wrong size on ALTF42_Bike_BP_Origin_C_WheelTrace");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, SocketLocation) == 0x000000, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::SocketLocation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, HitLocation) == 0x000018, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::HitLocation' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakVector_X) == 0x000030, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakVector_Y) == 0x000038, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakVector_Z) == 0x000040, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_GetUpVector_ReturnValue) == 0x000050, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A0, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, Temp_object_Variable) == 0x0000E8, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_LineTraceSingle_OutHit) == 0x0000F8, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x0001E0, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x0001E1, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001E2, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_Time) == 0x0001E4, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_Distance) == 0x0001E8, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_Location) == 0x0001F0, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000208, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_Normal) == 0x000220, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000238, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_PhysMat) == 0x000250, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_HitActor) == 0x000258, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_HitComponent) == 0x000260, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000268, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_BoneName) == 0x000270, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_HitItem) == 0x000278, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_ElementIndex) == 0x00027C, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000280, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_TraceStart) == 0x000288, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALTF42_Bike_BP_Origin_C_WheelTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0002A0, "Member 'ALTF42_Bike_BP_Origin_C_WheelTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

}

