#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_Mage_NPC_BP

#include "Basic.hpp"

#include "AI_StepTalk_WhoOrWhere_structs.hpp"
#include "ALS_ComponentAndTransform_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MantleType_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "Mantle_Asset_structs.hpp"


namespace SDK::Params
{

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.AttachToHand
// 0x0148 (0x0148 - 0x0000)
struct AI_Mage_NPC_BP_C_AttachToHand final
{
public:
	class UStaticMesh*                            NewStaticMesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          NewSkeletalMesh;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewAnimClass;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LeftHand;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7C[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7D[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_Select_Default;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_AttachToHand) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_AttachToHand");
static_assert(sizeof(AI_Mage_NPC_BP_C_AttachToHand) == 0x000148, "Wrong size on AI_Mage_NPC_BP_C_AttachToHand");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, NewStaticMesh) == 0x000000, "Member 'AI_Mage_NPC_BP_C_AttachToHand::NewStaticMesh' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, NewSkeletalMesh) == 0x000008, "Member 'AI_Mage_NPC_BP_C_AttachToHand::NewSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, NewAnimClass) == 0x000010, "Member 'AI_Mage_NPC_BP_C_AttachToHand::NewAnimClass' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, LeftHand) == 0x000018, "Member 'AI_Mage_NPC_BP_C_AttachToHand::LeftHand' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, Offset) == 0x000020, "Member 'AI_Mage_NPC_BP_C_AttachToHand::Offset' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'AI_Mage_NPC_BP_C_AttachToHand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'AI_Mage_NPC_BP_C_AttachToHand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, Temp_bool_Variable) == 0x00003A, "Member 'AI_Mage_NPC_BP_C_AttachToHand::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, Temp_name_Variable) == 0x00003C, "Member 'AI_Mage_NPC_BP_C_AttachToHand::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, Temp_name_Variable_1) == 0x000044, "Member 'AI_Mage_NPC_BP_C_AttachToHand::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, CallFunc_IsValidClass_ReturnValue) == 0x00004C, "Member 'AI_Mage_NPC_BP_C_AttachToHand::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, CallFunc_SetStaticMesh_ReturnValue) == 0x00004D, "Member 'AI_Mage_NPC_BP_C_AttachToHand::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000050, "Member 'AI_Mage_NPC_BP_C_AttachToHand::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, K2Node_Select_Default) == 0x000138, "Member 'AI_Mage_NPC_BP_C_AttachToHand::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_AttachToHand, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000140, "Member 'AI_Mage_NPC_BP_C_AttachToHand::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_Mage_NPC_BP_Char_TalkOverlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Foot_Block_SM_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Detect_Coillsion_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'AI_Mage_NPC_BP_C_BndEvt__AI_MH_Default_Char_Hit_Head_Coillsion_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.ClearHeldObject
// 0x0001 (0x0001 - 0x0000)
struct AI_Mage_NPC_BP_C_ClearHeldObject final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_ClearHeldObject) == 0x000001, "Wrong alignment on AI_Mage_NPC_BP_C_ClearHeldObject");
static_assert(sizeof(AI_Mage_NPC_BP_C_ClearHeldObject) == 0x000001, "Wrong size on AI_Mage_NPC_BP_C_ClearHeldObject");
static_assert(offsetof(AI_Mage_NPC_BP_C_ClearHeldObject, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'AI_Mage_NPC_BP_C_ClearHeldObject::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.ExecuteUbergraph_AI_Mage_NPC_BP
// 0x0620 (0x0620 - 0x0000)
struct AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7F[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A80[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A81[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A82[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_InGame_PC_Loco_C*               K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A83[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NPC_ActionMode;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Loop_Active;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A84[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_2;         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_2;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_2;                  // 0x0098(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_1;         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_1;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_1;                  // 0x01B0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A85[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x02D0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_ActorHasTag_ReturnValue_2;                // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A86[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 K2Node_DynamicCast_AsALTF42_Game_Instance;         // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A87[0x7];                                     // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue;                 // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A88[0x4];                                     // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF42_AI_Controller_C*                K2Node_DynamicCast_AsALTF42_AI_Controller;         // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A89[0x6];                                     // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8A[0x3];                                     // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0428(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue_1;               // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8B[0x7];                                     // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_AI_Controller_C*                K2Node_DynamicCast_AsALTF42_AI_Controller_1;       // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8C[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_InGame_PC_Loco_C*               K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco_1;     // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8D[0x3];                                     // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_1;              // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8E[0x7];                                     // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_2;        // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_4;          // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8F[0x7];                                     // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_2;              // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_5;          // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A90[0x6];                                     // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_3;              // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A91[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_4;              // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A92[0x5];                                     // 0x05CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_5;         // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_5;              // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A93[0x7];                                     // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_6;         // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_6;              // 0x05F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A94[0x7];                                     // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_7;         // 0x0600(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_7;              // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A95[0x6];                                     // 0x0612(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP");
static_assert(sizeof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP) == 0x000620, "Wrong size on AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, EntryPoint) == 0x000000, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, Temp_bool_IsClosed_Variable_1) == 0x000005, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000019, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000025, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x000028, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000038, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x000039, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerController_ReturnValue_1) == 0x000048, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco) == 0x000050, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_Event_DeltaSeconds) == 0x00005C, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_CustomEvent_NPC_ActionMode) == 0x000060, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_CustomEvent_NPC_ActionMode' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_CustomEvent_Loop_Active) == 0x000061, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_CustomEvent_Loop_Active' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000062, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_HitComponent_2) == 0x000068, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_HitComponent_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000070, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000078, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_NormalImpulse_2) == 0x000080, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_NormalImpulse_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_Hit_2) == 0x000098, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_Hit_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_HitComponent_1) == 0x000180, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000188, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000190, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_NormalImpulse_1) == 0x000198, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_NormalImpulse_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_Hit_1) == 0x0001B0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_ActorHasTag_ReturnValue) == 0x000298, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_ActorHasTag_ReturnValue_1) == 0x000299, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_HitComponent) == 0x0002A0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0002A8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0002B0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0002B8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_Hit) == 0x0002D0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_ActorHasTag_ReturnValue_2) == 0x0003B8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_ActorHasTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetGameInstance_ReturnValue) == 0x0003C0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF42_Game_Instance) == 0x0003C8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF42_Game_Instance' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_1) == 0x0003D0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0003D8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPawnOwner_ReturnValue) == 0x0003E0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetAIController_ReturnValue) == 0x0003E8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetDistanceTo_ReturnValue) == 0x0003F0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF42_AI_Controller) == 0x0003F8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF42_AI_Controller' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_2) == 0x000400, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000401, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000408, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000410, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000418, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000420, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000424, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000428, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPawnOwner_ReturnValue_1) == 0x000510, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000518, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_3) == 0x000520, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetAIController_ReturnValue_1) == 0x000528, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF42_AI_Controller_1) == 0x000530, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF42_AI_Controller_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_4) == 0x000538, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerController_ReturnValue_2) == 0x000540, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco_1) == 0x000548, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_5) == 0x000550, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_Montage_Play_ReturnValue) == 0x000554, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000558, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_1) == 0x000560, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_6) == 0x000568, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetCurrentLevelName_ReturnValue_2) == 0x000570, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetCurrentLevelName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000580, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_EqualEqual_StrStr_ReturnValue_4) == 0x000588, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_EqualEqual_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_2) == 0x000590, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_2' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_7) == 0x000598, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_EqualEqual_StrStr_ReturnValue_5) == 0x000599, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_EqualEqual_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x0005A0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_3) == 0x0005A8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_3' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_8) == 0x0005B0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x0005B8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_4) == 0x0005C0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_4' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_9) == 0x0005C8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x0005C9, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_SwitchInteger_CmpSuccess) == 0x0005CA, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue_5) == 0x0005D0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_5) == 0x0005D8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_5' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_10) == 0x0005E0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue_6) == 0x0005E8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_6) == 0x0005F0, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_6' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_11) == 0x0005F8, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_GetPlayerCharacter_ReturnValue_7) == 0x000600, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_GetPlayerCharacter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_7) == 0x000608, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_7' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_DynamicCast_bSuccess_12) == 0x000610, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, K2Node_SwitchInteger_CmpSuccess_1) == 0x000611, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000618, "Member 'AI_Mage_NPC_BP_C_ExecuteUbergraph_AI_Mage_NPC_BP::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.NPC_Acting_Event
// 0x0002 (0x0002 - 0x0000)
struct AI_Mage_NPC_BP_C_NPC_Acting_Event final
{
public:
	bool                                          Param_NPC_ActionMode;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Loop_Active;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_NPC_Acting_Event) == 0x000001, "Wrong alignment on AI_Mage_NPC_BP_C_NPC_Acting_Event");
static_assert(sizeof(AI_Mage_NPC_BP_C_NPC_Acting_Event) == 0x000002, "Wrong size on AI_Mage_NPC_BP_C_NPC_Acting_Event");
static_assert(offsetof(AI_Mage_NPC_BP_C_NPC_Acting_Event, Param_NPC_ActionMode) == 0x000000, "Member 'AI_Mage_NPC_BP_C_NPC_Acting_Event::Param_NPC_ActionMode' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_NPC_Acting_Event, Param_Loop_Active) == 0x000001, "Member 'AI_Mage_NPC_BP_C_NPC_Acting_Event::Param_Loop_Active' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.UpdateHeldObject
// 0x0001 (0x0001 - 0x0000)
struct AI_Mage_NPC_BP_C_UpdateHeldObject final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_UpdateHeldObject) == 0x000001, "Wrong alignment on AI_Mage_NPC_BP_C_UpdateHeldObject");
static_assert(sizeof(AI_Mage_NPC_BP_C_UpdateHeldObject) == 0x000001, "Wrong size on AI_Mage_NPC_BP_C_UpdateHeldObject");
static_assert(offsetof(AI_Mage_NPC_BP_C_UpdateHeldObject, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'AI_Mage_NPC_BP_C_UpdateHeldObject::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.UpdateHeldObjectAnimations
// 0x0028 (0x0028 - 0x0000)
struct AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations final
{
public:
	double                                        CallFunc_GetAnimCurveValue_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A96[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBow_AnimBP_C*                          K2Node_DynamicCast_AsBow_Anim_BP;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations");
static_assert(sizeof(AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations) == 0x000028, "Wrong size on AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations");
static_assert(offsetof(AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations, CallFunc_GetAnimCurveValue_ReturnValue) == 0x000000, "Member 'AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations::CallFunc_GetAnimCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations, K2Node_DynamicCast_AsBow_Anim_BP) == 0x000018, "Member 'AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations::K2Node_DynamicCast_AsBow_Anim_BP' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AI_Mage_NPC_BP_C_UpdateHeldObjectAnimations::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BPI_Get_3P_PivotTarget
// 0x0130 (0x0130 - 0x0000)
struct AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetVectorArrayAverage_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget) == 0x000010, "Wrong alignment on AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget");
static_assert(sizeof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget) == 0x000130, "Wrong size on AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget, ReturnValue) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000060, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x000078, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000090, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget, K2Node_MakeArray_Array) == 0x0000A8, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget, CallFunc_GetVectorArrayAverage_ReturnValue) == 0x0000B8, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget::CallFunc_GetVectorArrayAverage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_PivotTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BPI_Get_3P_TraceParams
// 0x0058 (0x0058 - 0x0000)
struct AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams final
{
public:
	struct FVector                                TraceOrigin;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceRadius;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A97[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams");
static_assert(sizeof(AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams) == 0x000058, "Wrong size on AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams, TraceOrigin) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams::TraceOrigin' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams, TraceRadius) == 0x000018, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams::TraceRadius' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams, TraceChannel) == 0x000020, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams::TraceChannel' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000040, "Member 'AI_Mage_NPC_BP_C_BPI_Get_3P_TraceParams::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BPI_Get_FP_CameraTarget
// 0x0030 (0x0030 - 0x0000)
struct AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget");
static_assert(sizeof(AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget) == 0x000030, "Wrong size on AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget, ReturnValue) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'AI_Mage_NPC_BP_C_BPI_Get_FP_CameraTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.BPI_GetAI_NPC_ActionMode
// 0x0020 (0x0020 - 0x0000)
struct AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode final
{
public:
	bool                                          Param_NPC_ActionMode;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A98[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ActionStartTime;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      NPC_ActionAnim;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopActive;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAI_StepTalk_WhoOrWhere                       Param_Who_NPC;                                     // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Hit_;                                        // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode");
static_assert(sizeof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode) == 0x000020, "Wrong size on AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode, Param_NPC_ActionMode) == 0x000000, "Member 'AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode::Param_NPC_ActionMode' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode, ActionStartTime) == 0x000008, "Member 'AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode::ActionStartTime' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode, NPC_ActionAnim) == 0x000010, "Member 'AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode::NPC_ActionAnim' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode, LoopActive) == 0x000018, "Member 'AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode::LoopActive' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode, Param_Who_NPC) == 0x000019, "Member 'AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode::Param_Who_NPC' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode, Param_Hit_) == 0x00001A, "Member 'AI_Mage_NPC_BP_C_BPI_GetAI_NPC_ActionMode::Param_Hit_' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.GetGetUpAnimation
// 0x0018 (0x0018 - 0x0000)
struct AI_Mage_NPC_BP_C_GetGetUpAnimation final
{
public:
	bool                                          Param_RagdollFaceUp;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A99[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_GetGetUpAnimation) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_GetGetUpAnimation");
static_assert(sizeof(AI_Mage_NPC_BP_C_GetGetUpAnimation) == 0x000018, "Wrong size on AI_Mage_NPC_BP_C_GetGetUpAnimation");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetGetUpAnimation, Param_RagdollFaceUp) == 0x000000, "Member 'AI_Mage_NPC_BP_C_GetGetUpAnimation::Param_RagdollFaceUp' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetGetUpAnimation, ReturnValue) == 0x000008, "Member 'AI_Mage_NPC_BP_C_GetGetUpAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetGetUpAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'AI_Mage_NPC_BP_C_GetGetUpAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetGetUpAnimation, K2Node_SwitchEnum_CmpSuccess_1) == 0x000011, "Member 'AI_Mage_NPC_BP_C_GetGetUpAnimation::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.GetMantleAsset
// 0x0050 (0x0050 - 0x0000)
struct AI_Mage_NPC_BP_C_GetMantleAsset final
{
public:
	EMantleType                                   MantleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantle_Asset                          ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_GetMantleAsset) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_GetMantleAsset");
static_assert(sizeof(AI_Mage_NPC_BP_C_GetMantleAsset) == 0x000050, "Wrong size on AI_Mage_NPC_BP_C_GetMantleAsset");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetMantleAsset, MantleType) == 0x000000, "Member 'AI_Mage_NPC_BP_C_GetMantleAsset::MantleType' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetMantleAsset, ReturnValue) == 0x000008, "Member 'AI_Mage_NPC_BP_C_GetMantleAsset::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetMantleAsset, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'AI_Mage_NPC_BP_C_GetMantleAsset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetMantleAsset, K2Node_SwitchEnum_CmpSuccess_1) == 0x000049, "Member 'AI_Mage_NPC_BP_C_GetMantleAsset::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.GetRollAnimation
// 0x0010 (0x0010 - 0x0000)
struct AI_Mage_NPC_BP_C_GetRollAnimation final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_GetRollAnimation) == 0x000008, "Wrong alignment on AI_Mage_NPC_BP_C_GetRollAnimation");
static_assert(sizeof(AI_Mage_NPC_BP_C_GetRollAnimation) == 0x000010, "Wrong size on AI_Mage_NPC_BP_C_GetRollAnimation");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetRollAnimation, ReturnValue) == 0x000000, "Member 'AI_Mage_NPC_BP_C_GetRollAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_GetRollAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'AI_Mage_NPC_BP_C_GetRollAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.MantleStart
// 0x0090 (0x0090 - 0x0000)
struct AI_Mage_NPC_BP_C_MantleStart final
{
public:
	double                                        MantleHeight;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9B[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             MantleLedgeWS;                                     // 0x0010(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EMantleType                                   MantleType;                                        // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_MantleStart) == 0x000010, "Wrong alignment on AI_Mage_NPC_BP_C_MantleStart");
static_assert(sizeof(AI_Mage_NPC_BP_C_MantleStart) == 0x000090, "Wrong size on AI_Mage_NPC_BP_C_MantleStart");
static_assert(offsetof(AI_Mage_NPC_BP_C_MantleStart, MantleHeight) == 0x000000, "Member 'AI_Mage_NPC_BP_C_MantleStart::MantleHeight' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_MantleStart, MantleLedgeWS) == 0x000010, "Member 'AI_Mage_NPC_BP_C_MantleStart::MantleLedgeWS' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_MantleStart, MantleType) == 0x000080, "Member 'AI_Mage_NPC_BP_C_MantleStart::MantleType' has a wrong offset!");
static_assert(offsetof(AI_Mage_NPC_BP_C_MantleStart, K2Node_SwitchEnum_CmpSuccess) == 0x000081, "Member 'AI_Mage_NPC_BP_C_MantleStart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.OnOverlayStateChanged
// 0x0001 (0x0001 - 0x0000)
struct AI_Mage_NPC_BP_C_OnOverlayStateChanged final
{
public:
	EALS_OverlayState                             NewOverlayState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_OnOverlayStateChanged) == 0x000001, "Wrong alignment on AI_Mage_NPC_BP_C_OnOverlayStateChanged");
static_assert(sizeof(AI_Mage_NPC_BP_C_OnOverlayStateChanged) == 0x000001, "Wrong size on AI_Mage_NPC_BP_C_OnOverlayStateChanged");
static_assert(offsetof(AI_Mage_NPC_BP_C_OnOverlayStateChanged, NewOverlayState) == 0x000000, "Member 'AI_Mage_NPC_BP_C_OnOverlayStateChanged::NewOverlayState' has a wrong offset!");

// Function AI_Mage_NPC_BP.AI_Mage_NPC_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AI_Mage_NPC_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_Mage_NPC_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on AI_Mage_NPC_BP_C_ReceiveTick");
static_assert(sizeof(AI_Mage_NPC_BP_C_ReceiveTick) == 0x000004, "Wrong size on AI_Mage_NPC_BP_C_ReceiveTick");
static_assert(offsetof(AI_Mage_NPC_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AI_Mage_NPC_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

