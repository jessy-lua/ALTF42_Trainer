#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlsGamepadBindingsWidgetBP

#include "Basic.hpp"


namespace SDK::Params
{

// Function ControlsGamepadBindingsWidgetBP.ControlsGamepadBindingsWidgetBP_C.ExecuteUbergraph_ControlsGamepadBindingsWidgetBP
// 0x0028 (0x0028 - 0x0000)
struct ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateToMenu;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu_1;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGamepadBeingUsed;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3320[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerIndex;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP) == 0x000008, "Wrong alignment on ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP");
static_assert(sizeof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP) == 0x000028, "Wrong size on ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP, EntryPoint) == 0x000000, "Member 'ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP, K2Node_Event_NavigateToMenu) == 0x000008, "Member 'ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP::K2Node_Event_NavigateToMenu' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP, K2Node_Event_NavigateFromMenu_1) == 0x000010, "Member 'ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP::K2Node_Event_NavigateFromMenu_1' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP, K2Node_Event_NavigateFromMenu) == 0x000018, "Member 'ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP::K2Node_Event_NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP, K2Node_Event_bIsGamepadBeingUsed) == 0x000020, "Member 'ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP::K2Node_Event_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP, K2Node_Event_PlayerIndex) == 0x000024, "Member 'ControlsGamepadBindingsWidgetBP_C_ExecuteUbergraph_ControlsGamepadBindingsWidgetBP::K2Node_Event_PlayerIndex' has a wrong offset!");

// Function ControlsGamepadBindingsWidgetBP.ControlsGamepadBindingsWidgetBP_C.LeaveEditMode
// 0x0030 (0x0030 - 0x0000)
struct ControlsGamepadBindingsWidgetBP_C_LeaveEditMode final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableUserWidget_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3321[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionsActionBinder_C*                 K2Node_DynamicCast_AsOptions_Action_Binder;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode) == 0x000008, "Wrong alignment on ControlsGamepadBindingsWidgetBP_C_LeaveEditMode");
static_assert(sizeof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode) == 0x000030, "Wrong size on ControlsGamepadBindingsWidgetBP_C_LeaveEditMode");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, CallFunc_Array_Get_Item) == 0x000010, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, K2Node_DynamicCast_AsOptions_Action_Binder) == 0x000020, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::K2Node_DynamicCast_AsOptions_Action_Binder' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_LeaveEditMode, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ControlsGamepadBindingsWidgetBP_C_LeaveEditMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ControlsGamepadBindingsWidgetBP.ControlsGamepadBindingsWidgetBP_C.UpdateBindingsInVisualization
// 0x0038 (0x0038 - 0x0000)
struct ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization final
{
public:
	bool                                          GamepadBoundKeys;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3322[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3323[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableUserWidget_C*              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3324[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionsActionBinder_C*                 K2Node_DynamicCast_AsOptions_Action_Binder;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization) == 0x000008, "Wrong alignment on ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization");
static_assert(sizeof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization) == 0x000038, "Wrong size on ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, GamepadBoundKeys) == 0x000000, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::GamepadBoundKeys' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, CallFunc_Array_Get_Item) == 0x000018, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, K2Node_DynamicCast_AsOptions_Action_Binder) == 0x000028, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::K2Node_DynamicCast_AsOptions_Action_Binder' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateBindingsInVisualization::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ControlsGamepadBindingsWidgetBP.ControlsGamepadBindingsWidgetBP_C.UpdateDescription
// 0x0008 (0x0008 - 0x0000)
struct ControlsGamepadBindingsWidgetBP_C_UpdateDescription final
{
public:
	class UInteractableUserWidget_C*              InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsGamepadBindingsWidgetBP_C_UpdateDescription) == 0x000008, "Wrong alignment on ControlsGamepadBindingsWidgetBP_C_UpdateDescription");
static_assert(sizeof(ControlsGamepadBindingsWidgetBP_C_UpdateDescription) == 0x000008, "Wrong size on ControlsGamepadBindingsWidgetBP_C_UpdateDescription");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_UpdateDescription, InWidget) == 0x000000, "Member 'ControlsGamepadBindingsWidgetBP_C_UpdateDescription::InWidget' has a wrong offset!");

// Function ControlsGamepadBindingsWidgetBP.ControlsGamepadBindingsWidgetBP_C.OnNavigationEnter
// 0x0010 (0x0010 - 0x0000)
struct ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bIsGamepadBeingUsed;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3325[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_PlayerIndex;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter) == 0x000008, "Wrong alignment on ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter");
static_assert(sizeof(ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter) == 0x000010, "Wrong size on ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter, NavigateFromMenu) == 0x000000, "Member 'ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter::NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter, Param_bIsGamepadBeingUsed) == 0x000008, "Member 'ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter::Param_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter, Param_PlayerIndex) == 0x00000C, "Member 'ControlsGamepadBindingsWidgetBP_C_OnNavigationEnter::Param_PlayerIndex' has a wrong offset!");

// Function ControlsGamepadBindingsWidgetBP.ControlsGamepadBindingsWidgetBP_C.OnNavigationExit
// 0x0010 (0x0010 - 0x0000)
struct ControlsGamepadBindingsWidgetBP_C_OnNavigationExit final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateToMenu;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsGamepadBindingsWidgetBP_C_OnNavigationExit) == 0x000008, "Wrong alignment on ControlsGamepadBindingsWidgetBP_C_OnNavigationExit");
static_assert(sizeof(ControlsGamepadBindingsWidgetBP_C_OnNavigationExit) == 0x000010, "Wrong size on ControlsGamepadBindingsWidgetBP_C_OnNavigationExit");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_OnNavigationExit, NavigateToMenu) == 0x000000, "Member 'ControlsGamepadBindingsWidgetBP_C_OnNavigationExit::NavigateToMenu' has a wrong offset!");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_OnNavigationExit, NavigateFromMenu) == 0x000008, "Member 'ControlsGamepadBindingsWidgetBP_C_OnNavigationExit::NavigateFromMenu' has a wrong offset!");

// Function ControlsGamepadBindingsWidgetBP.ControlsGamepadBindingsWidgetBP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ControlsGamepadBindingsWidgetBP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsGamepadBindingsWidgetBP_C_PreConstruct) == 0x000001, "Wrong alignment on ControlsGamepadBindingsWidgetBP_C_PreConstruct");
static_assert(sizeof(ControlsGamepadBindingsWidgetBP_C_PreConstruct) == 0x000001, "Wrong size on ControlsGamepadBindingsWidgetBP_C_PreConstruct");
static_assert(offsetof(ControlsGamepadBindingsWidgetBP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ControlsGamepadBindingsWidgetBP_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

