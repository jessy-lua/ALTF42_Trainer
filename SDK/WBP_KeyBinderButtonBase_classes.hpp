#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyBinderButtonBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FKeyBinderButtonData_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "EWidgetStyleState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C
// 0x00C0 (0x0380 - 0x02C0)
class UWBP_KeyBinderButtonBase_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FFKeyBinderButtonData                  BinderButtonData;                                  // 0x02C8(0x0020)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWBP_KeyBinderBase_C*                   KeyBinder;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnKeyBinderButtonSelect;                           // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UButton*                                KeybinderButtonRef;                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                OuterBorderRef;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ActiveColor;                                       // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisabledColor;                                     // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnKeyBinderButtonHighlighted;                      // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnKeyBinderButtonUnhighlighted;                    // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_InputIcon_C*                       InputIconRef;                                      // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UThrobber*                              WaitingForInputThrobberRef;                        // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void SetWidgetState(EWidgetStyleState WidgetState);
	void SetKeyTextOrIcon(bool bIsWaitingForInput);
	void RefreshKeyBinderButton();
	void RebindKeyOrButton(const struct FInputChord& NewKey, bool bClearKey);
	void PreConstruct(bool IsDesignTime);
	void OverrideWidgetStyleFromConfig();
	void OnParentMenuSetupComplete();
	void OnKeyBinderButtonUnhighlighted__DelegateSignature(class UWBP_KeyBinderButtonBase_C* KeyBinderButtonBase);
	void OnKeyBinderButtonSelect__DelegateSignature(class UWBP_KeyBinderButtonBase_C* KeyBinderButton);
	void OnKeyBinderButtonHighlighted__DelegateSignature(class UWBP_KeyBinderButtonBase_C* KeyBinderButtonBase);
	void OnButtonUnhighlighted();
	void OnButtonPressed();
	void OnButtonHighlighted();
	void GetKeyOrButtonFromInputSubsystem(struct FKey* Key);
	void ExecuteUbergraph_WBP_KeyBinderButtonBase(int32 EntryPoint);
	void Construct();
	void ClearBindingOnButton();
	void ApplyWidgetStyleNormal();
	void ApplyWidgetStyleHighlighted();
	void ApplyWidgetStyleDisabled();
	void ApplyWidgetStyleActive();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_KeyBinderButtonBase_C">();
	}
	static class UWBP_KeyBinderButtonBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_KeyBinderButtonBase_C>();
	}
};
static_assert(alignof(UWBP_KeyBinderButtonBase_C) == 0x000008, "Wrong alignment on UWBP_KeyBinderButtonBase_C");
static_assert(sizeof(UWBP_KeyBinderButtonBase_C) == 0x000380, "Wrong size on UWBP_KeyBinderButtonBase_C");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_KeyBinderButtonBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, BinderButtonData) == 0x0002C8, "Member 'UWBP_KeyBinderButtonBase_C::BinderButtonData' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, KeyBinder) == 0x0002E8, "Member 'UWBP_KeyBinderButtonBase_C::KeyBinder' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, OnKeyBinderButtonSelect) == 0x0002F0, "Member 'UWBP_KeyBinderButtonBase_C::OnKeyBinderButtonSelect' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, KeybinderButtonRef) == 0x000300, "Member 'UWBP_KeyBinderButtonBase_C::KeybinderButtonRef' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, OuterBorderRef) == 0x000308, "Member 'UWBP_KeyBinderButtonBase_C::OuterBorderRef' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, BackgroundColor) == 0x000310, "Member 'UWBP_KeyBinderButtonBase_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, HighlightColor) == 0x000320, "Member 'UWBP_KeyBinderButtonBase_C::HighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, ActiveColor) == 0x000330, "Member 'UWBP_KeyBinderButtonBase_C::ActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, DisabledColor) == 0x000340, "Member 'UWBP_KeyBinderButtonBase_C::DisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, OnKeyBinderButtonHighlighted) == 0x000350, "Member 'UWBP_KeyBinderButtonBase_C::OnKeyBinderButtonHighlighted' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, OnKeyBinderButtonUnhighlighted) == 0x000360, "Member 'UWBP_KeyBinderButtonBase_C::OnKeyBinderButtonUnhighlighted' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, InputIconRef) == 0x000370, "Member 'UWBP_KeyBinderButtonBase_C::InputIconRef' has a wrong offset!");
static_assert(offsetof(UWBP_KeyBinderButtonBase_C, WaitingForInputThrobberRef) == 0x000378, "Member 'UWBP_KeyBinderButtonBase_C::WaitingForInputThrobberRef' has a wrong offset!");

}

