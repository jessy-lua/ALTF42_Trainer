#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sign_EndArea_Talk_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AI_StepTalk_WhoOrWhere_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Sign_EndArea_Talk_BP.Sign_EndArea_Talk_BP_C
// 0x0080 (0x0318 - 0x0298)
class ASign_EndArea_Talk_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Overlap_Check;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL__Direction_EEF2151E4849381D87213CB7793DEF61;    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D9[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL;                                                // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       ALTF42_Char;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Talk_Npc_Name;                                     // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UObject*                                Talk_NPC_Image;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   Talk_Speak_Text_;                                  // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Talk_Integer;                                      // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_TalkStart_;                                    // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TextJumpPossible;                                  // 0x0305(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DA[0x2];                                     // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxTalk;                                           // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAI_StepTalk_WhoOrWhere                       Who_NPC;                                           // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DB[0x3];                                     // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEndEarlyAccess_Widget_C*               EA_End_Widget;                                     // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Sign_EndArea_Talk_BP_Overlap_Check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_Sign_EndArea_Talk_BP(int32 EntryPoint);
	void NextTalk();
	void ReturnGame();
	void Talk_End_Event();
	void TL__FinishedFunc();
	void TL__JumpDont_Event__EventFunc();
	void TL__JumpPossible_Event__EventFunc();
	void TL__NextTalk_Event__EventFunc();
	void TL__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Sign_EndArea_Talk_BP_C">();
	}
	static class ASign_EndArea_Talk_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASign_EndArea_Talk_BP_C>();
	}
};
static_assert(alignof(ASign_EndArea_Talk_BP_C) == 0x000008, "Wrong alignment on ASign_EndArea_Talk_BP_C");
static_assert(sizeof(ASign_EndArea_Talk_BP_C) == 0x000318, "Wrong size on ASign_EndArea_Talk_BP_C");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, UberGraphFrame) == 0x000298, "Member 'ASign_EndArea_Talk_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, Overlap_Check) == 0x0002A0, "Member 'ASign_EndArea_Talk_BP_C::Overlap_Check' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, DefaultSceneRoot) == 0x0002A8, "Member 'ASign_EndArea_Talk_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, TL__Direction_EEF2151E4849381D87213CB7793DEF61) == 0x0002B0, "Member 'ASign_EndArea_Talk_BP_C::TL__Direction_EEF2151E4849381D87213CB7793DEF61' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, TL) == 0x0002B8, "Member 'ASign_EndArea_Talk_BP_C::TL' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, ALTF42_Char) == 0x0002C0, "Member 'ASign_EndArea_Talk_BP_C::ALTF42_Char' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, Talk_Npc_Name) == 0x0002C8, "Member 'ASign_EndArea_Talk_BP_C::Talk_Npc_Name' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, Talk_NPC_Image) == 0x0002E0, "Member 'ASign_EndArea_Talk_BP_C::Talk_NPC_Image' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, Talk_Speak_Text_) == 0x0002E8, "Member 'ASign_EndArea_Talk_BP_C::Talk_Speak_Text_' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, Talk_Integer) == 0x000300, "Member 'ASign_EndArea_Talk_BP_C::Talk_Integer' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, NPC_TalkStart_) == 0x000304, "Member 'ASign_EndArea_Talk_BP_C::NPC_TalkStart_' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, TextJumpPossible) == 0x000305, "Member 'ASign_EndArea_Talk_BP_C::TextJumpPossible' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, MaxTalk) == 0x000308, "Member 'ASign_EndArea_Talk_BP_C::MaxTalk' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, Who_NPC) == 0x00030C, "Member 'ASign_EndArea_Talk_BP_C::Who_NPC' has a wrong offset!");
static_assert(offsetof(ASign_EndArea_Talk_BP_C, EA_End_Widget) == 0x000310, "Member 'ASign_EndArea_Talk_BP_C::EA_End_Widget' has a wrong offset!");

}

