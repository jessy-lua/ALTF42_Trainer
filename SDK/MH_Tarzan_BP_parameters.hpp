#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MH_Tarzan_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.EnableMasterPose
// 0x0018 (0x0018 - 0x0000)
struct MH_Tarzan_BP_C_EnableMasterPose final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_EnableMasterPose) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_EnableMasterPose");
static_assert(sizeof(MH_Tarzan_BP_C_EnableMasterPose) == 0x000018, "Wrong size on MH_Tarzan_BP_C_EnableMasterPose");
static_assert(offsetof(MH_Tarzan_BP_C_EnableMasterPose, SkeletalMeshComponent) == 0x000000, "Member 'MH_Tarzan_BP_C_EnableMasterPose::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_EnableMasterPose, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000008, "Member 'MH_Tarzan_BP_C_EnableMasterPose::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_EnableMasterPose, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MH_Tarzan_BP_C_EnableMasterPose::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_EnableMasterPose, CallFunc_IsValidClass_ReturnValue) == 0x000011, "Member 'MH_Tarzan_BP_C_EnableMasterPose::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_EnableMasterPose, CallFunc_IsValidClass_ReturnValue_1) == 0x000012, "Member 'MH_Tarzan_BP_C_EnableMasterPose::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_EnableMasterPose, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'MH_Tarzan_BP_C_EnableMasterPose::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.ExecuteUbergraph_MH_Tarzan_BP
// 0x0450 (0x0450 - 0x0000)
struct MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_7;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_6;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EA[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_5;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EB[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_4;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EC[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37ED[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EE[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_2;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EF[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F0[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F1[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_3;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F2[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 K2Node_DynamicCast_AsALTF42_Game_Instance;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F3[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_NavLinkLocation;                      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_JumpDuration;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Gravity;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATarzan_NextMoveTarget_BP_C*            K2Node_CustomEvent_NextTarget;                     // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F4[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_1;    // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F5[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0198(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_3;        // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABandPawn_BP_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x02A0(0x0010)(ReferenceParm)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_2;    // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABandPawn_BP_C*                         CallFunc_Array_Get_Item;                           // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F6[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F7[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_4;        // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_3;    // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F8[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1; // 0x0358(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        K2Node_VariableSet_PoseEnd_ImplicitCast;           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LookAlpha_ImplicitCast;         // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP");
static_assert(sizeof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP) == 0x000450, "Wrong size on MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, EntryPoint) == 0x000000, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult_7) == 0x000004, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult_7' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult_6) == 0x000018, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult_6' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, Temp_byte_Variable) == 0x00002C, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult_5) == 0x00002D, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult_5' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult_4) == 0x000040, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult_4' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, Temp_byte_Variable_1) == 0x000054, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate_4) == 0x000058, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult_3) == 0x000068, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult_2) == 0x000069, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate_5) == 0x00006C, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, Temp_byte_Variable_2) == 0x00007C, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, Temp_int_Variable) == 0x000080, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult_1) == 0x000088, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate_6) == 0x00008C, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_MovementResult) == 0x00009C, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000A0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, Temp_byte_Variable_3) == 0x0000B0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_GetGameInstance_ReturnValue) == 0x0000B8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_DynamicCast_AsALTF42_Game_Instance) == 0x0000C0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_DynamicCast_AsALTF42_Game_Instance' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_Event_NavLinkLocation) == 0x0000D0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_Event_NavLinkLocation' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_Event_JumpDuration) == 0x0000E8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_Event_JumpDuration' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_Event_Gravity) == 0x0000F0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_Event_Gravity' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000F8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000100, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_NextTarget) == 0x000118, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_NextTarget' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_CustomEvent_Duration) == 0x000120, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000128, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000140, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000148, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000150, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_CreateMoveToProxyObject_ReturnValue_1) == 0x000168, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_CreateMoveToProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_IsValid_ReturnValue_1) == 0x000171, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x000178, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000180, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000198, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetRootComponent_ReturnValue_3) == 0x000280, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetRootComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000288, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_GetAllActorsOfClass_OutActors) == 0x0002A0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_CreateMoveToProxyObject_ReturnValue_2) == 0x0002B0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_CreateMoveToProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Array_Get_Item) == 0x0002B8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_IsValid_ReturnValue_2) == 0x0002C0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Array_Length_ReturnValue) == 0x0002C4, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0002C8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0002D0, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Conv_VectorToString_ReturnValue) == 0x0002E8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Concat_StrStr_ReturnValue) == 0x0002F8, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetRootComponent_ReturnValue_4) == 0x000308, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetRootComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x000310, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000328, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_CreateMoveToProxyObject_ReturnValue_3) == 0x000338, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_CreateMoveToProxyObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000340, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_IsValid_ReturnValue_3) == 0x000350, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1) == 0x000358, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_VariableSet_PoseEnd_ImplicitCast) == 0x000440, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_VariableSet_PoseEnd_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP, K2Node_VariableSet_LookAlpha_ImplicitCast) == 0x000448, "Member 'MH_Tarzan_BP_C_ExecuteUbergraph_MH_Tarzan_BP::K2Node_VariableSet_LookAlpha_ImplicitCast' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.ModifyBoolValue
// 0x000C (0x000C - 0x0000)
struct MH_Tarzan_BP_C_ModifyBoolValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewValue;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_ModifyBoolValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_ModifyBoolValue");
static_assert(sizeof(MH_Tarzan_BP_C_ModifyBoolValue) == 0x00000C, "Wrong size on MH_Tarzan_BP_C_ModifyBoolValue");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyBoolValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_ModifyBoolValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyBoolValue, bNewValue) == 0x000008, "Member 'MH_Tarzan_BP_C_ModifyBoolValue::bNewValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyBoolValue, ReturnValue) == 0x000009, "Member 'MH_Tarzan_BP_C_ModifyBoolValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.ModifyFloatValue
// 0x0014 (0x0014 - 0x0000)
struct MH_Tarzan_BP_C_ModifyFloatValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDelta;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F9[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_ModifyFloatValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_ModifyFloatValue");
static_assert(sizeof(MH_Tarzan_BP_C_ModifyFloatValue) == 0x000014, "Wrong size on MH_Tarzan_BP_C_ModifyFloatValue");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyFloatValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_ModifyFloatValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyFloatValue, bDelta) == 0x000008, "Member 'MH_Tarzan_BP_C_ModifyFloatValue::bDelta' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyFloatValue, Value) == 0x00000C, "Member 'MH_Tarzan_BP_C_ModifyFloatValue::Value' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyFloatValue, ReturnValue) == 0x000010, "Member 'MH_Tarzan_BP_C_ModifyFloatValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.ModifyIntValue
// 0x0014 (0x0014 - 0x0000)
struct MH_Tarzan_BP_C_ModifyIntValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDelta;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37FA[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_ModifyIntValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_ModifyIntValue");
static_assert(sizeof(MH_Tarzan_BP_C_ModifyIntValue) == 0x000014, "Wrong size on MH_Tarzan_BP_C_ModifyIntValue");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyIntValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_ModifyIntValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyIntValue, bDelta) == 0x000008, "Member 'MH_Tarzan_BP_C_ModifyIntValue::bDelta' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyIntValue, Value) == 0x00000C, "Member 'MH_Tarzan_BP_C_ModifyIntValue::Value' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyIntValue, ReturnValue) == 0x000010, "Member 'MH_Tarzan_BP_C_ModifyIntValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.ModifyNameValue
// 0x0014 (0x0014 - 0x0000)
struct MH_Tarzan_BP_C_ModifyNameValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NameValue;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_ModifyNameValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_ModifyNameValue");
static_assert(sizeof(MH_Tarzan_BP_C_ModifyNameValue) == 0x000014, "Wrong size on MH_Tarzan_BP_C_ModifyNameValue");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyNameValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_ModifyNameValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyNameValue, NameValue) == 0x000008, "Member 'MH_Tarzan_BP_C_ModifyNameValue::NameValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_ModifyNameValue, ReturnValue) == 0x000010, "Member 'MH_Tarzan_BP_C_ModifyNameValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.NavLinkRange
// 0x0028 (0x0028 - 0x0000)
struct MH_Tarzan_BP_C_NavLinkRange final
{
public:
	struct FVector                                NavLinkLocation;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_JumpDuration;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Gravity;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_NavLinkRange) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_NavLinkRange");
static_assert(sizeof(MH_Tarzan_BP_C_NavLinkRange) == 0x000028, "Wrong size on MH_Tarzan_BP_C_NavLinkRange");
static_assert(offsetof(MH_Tarzan_BP_C_NavLinkRange, NavLinkLocation) == 0x000000, "Member 'MH_Tarzan_BP_C_NavLinkRange::NavLinkLocation' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_NavLinkRange, Param_JumpDuration) == 0x000018, "Member 'MH_Tarzan_BP_C_NavLinkRange::Param_JumpDuration' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_NavLinkRange, Param_Gravity) == 0x000020, "Member 'MH_Tarzan_BP_C_NavLinkRange::Param_Gravity' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnDialogueEvent
// 0x0018 (0x0018 - 0x0000)
struct MH_Tarzan_BP_C_OnDialogueEvent final
{
public:
	class UDlgContext*                            Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   EventName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnDialogueEvent) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_OnDialogueEvent");
static_assert(sizeof(MH_Tarzan_BP_C_OnDialogueEvent) == 0x000018, "Wrong size on MH_Tarzan_BP_C_OnDialogueEvent");
static_assert(offsetof(MH_Tarzan_BP_C_OnDialogueEvent, Context) == 0x000000, "Member 'MH_Tarzan_BP_C_OnDialogueEvent::Context' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_OnDialogueEvent, EventName) == 0x000008, "Member 'MH_Tarzan_BP_C_OnDialogueEvent::EventName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_OnDialogueEvent, ReturnValue) == 0x000010, "Member 'MH_Tarzan_BP_C_OnDialogueEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_OnDialogueEvent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000011, "Member 'MH_Tarzan_BP_C_OnDialogueEvent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_OnDialogueEvent, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000012, "Member 'MH_Tarzan_BP_C_OnDialogueEvent::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnFail_9F9889734633CB3D7FF46F88797ABE32
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnFail_9F9889734633CB3D7FF46F88797ABE32 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnFail_9F9889734633CB3D7FF46F88797ABE32) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnFail_9F9889734633CB3D7FF46F88797ABE32");
static_assert(sizeof(MH_Tarzan_BP_C_OnFail_9F9889734633CB3D7FF46F88797ABE32) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnFail_9F9889734633CB3D7FF46F88797ABE32");
static_assert(offsetof(MH_Tarzan_BP_C_OnFail_9F9889734633CB3D7FF46F88797ABE32, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnFail_9F9889734633CB3D7FF46F88797ABE32::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnFail_AD4A13794227AB2B068941B6B620E99A
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnFail_AD4A13794227AB2B068941B6B620E99A final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnFail_AD4A13794227AB2B068941B6B620E99A) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnFail_AD4A13794227AB2B068941B6B620E99A");
static_assert(sizeof(MH_Tarzan_BP_C_OnFail_AD4A13794227AB2B068941B6B620E99A) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnFail_AD4A13794227AB2B068941B6B620E99A");
static_assert(offsetof(MH_Tarzan_BP_C_OnFail_AD4A13794227AB2B068941B6B620E99A, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnFail_AD4A13794227AB2B068941B6B620E99A::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnFail_B55D578B4C831DE513363EA75CFE9E23
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnFail_B55D578B4C831DE513363EA75CFE9E23 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnFail_B55D578B4C831DE513363EA75CFE9E23) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnFail_B55D578B4C831DE513363EA75CFE9E23");
static_assert(sizeof(MH_Tarzan_BP_C_OnFail_B55D578B4C831DE513363EA75CFE9E23) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnFail_B55D578B4C831DE513363EA75CFE9E23");
static_assert(offsetof(MH_Tarzan_BP_C_OnFail_B55D578B4C831DE513363EA75CFE9E23, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnFail_B55D578B4C831DE513363EA75CFE9E23::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnFail_ED42318C43AC34BBB6C8C6A7E0062416
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnFail_ED42318C43AC34BBB6C8C6A7E0062416 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnFail_ED42318C43AC34BBB6C8C6A7E0062416) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnFail_ED42318C43AC34BBB6C8C6A7E0062416");
static_assert(sizeof(MH_Tarzan_BP_C_OnFail_ED42318C43AC34BBB6C8C6A7E0062416) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnFail_ED42318C43AC34BBB6C8C6A7E0062416");
static_assert(offsetof(MH_Tarzan_BP_C_OnFail_ED42318C43AC34BBB6C8C6A7E0062416, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnFail_ED42318C43AC34BBB6C8C6A7E0062416::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnSuccess_9F9889734633CB3D7FF46F88797ABE32
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnSuccess_9F9889734633CB3D7FF46F88797ABE32 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnSuccess_9F9889734633CB3D7FF46F88797ABE32) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnSuccess_9F9889734633CB3D7FF46F88797ABE32");
static_assert(sizeof(MH_Tarzan_BP_C_OnSuccess_9F9889734633CB3D7FF46F88797ABE32) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnSuccess_9F9889734633CB3D7FF46F88797ABE32");
static_assert(offsetof(MH_Tarzan_BP_C_OnSuccess_9F9889734633CB3D7FF46F88797ABE32, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnSuccess_9F9889734633CB3D7FF46F88797ABE32::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnSuccess_AD4A13794227AB2B068941B6B620E99A
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnSuccess_AD4A13794227AB2B068941B6B620E99A final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnSuccess_AD4A13794227AB2B068941B6B620E99A) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnSuccess_AD4A13794227AB2B068941B6B620E99A");
static_assert(sizeof(MH_Tarzan_BP_C_OnSuccess_AD4A13794227AB2B068941B6B620E99A) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnSuccess_AD4A13794227AB2B068941B6B620E99A");
static_assert(offsetof(MH_Tarzan_BP_C_OnSuccess_AD4A13794227AB2B068941B6B620E99A, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnSuccess_AD4A13794227AB2B068941B6B620E99A::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnSuccess_B55D578B4C831DE513363EA75CFE9E23
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnSuccess_B55D578B4C831DE513363EA75CFE9E23 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnSuccess_B55D578B4C831DE513363EA75CFE9E23) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnSuccess_B55D578B4C831DE513363EA75CFE9E23");
static_assert(sizeof(MH_Tarzan_BP_C_OnSuccess_B55D578B4C831DE513363EA75CFE9E23) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnSuccess_B55D578B4C831DE513363EA75CFE9E23");
static_assert(offsetof(MH_Tarzan_BP_C_OnSuccess_B55D578B4C831DE513363EA75CFE9E23, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnSuccess_B55D578B4C831DE513363EA75CFE9E23::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416");
static_assert(sizeof(MH_Tarzan_BP_C_OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416) == 0x000001, "Wrong size on MH_Tarzan_BP_C_OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416");
static_assert(offsetof(MH_Tarzan_BP_C_OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416, MovementResult) == 0x000000, "Member 'MH_Tarzan_BP_C_OnSuccess_ED42318C43AC34BBB6C8C6A7E0062416::MovementResult' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.RetargetSetup
// 0x0004 (0x0004 - 0x0000)
struct MH_Tarzan_BP_C_RetargetSetup final
{
public:
	EAnimationMode                                CallFunc_GetAnimationMode_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_RetargetSetup) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_RetargetSetup");
static_assert(sizeof(MH_Tarzan_BP_C_RetargetSetup) == 0x000004, "Wrong size on MH_Tarzan_BP_C_RetargetSetup");
static_assert(offsetof(MH_Tarzan_BP_C_RetargetSetup, CallFunc_GetAnimationMode_ReturnValue) == 0x000000, "Member 'MH_Tarzan_BP_C_RetargetSetup::CallFunc_GetAnimationMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_RetargetSetup, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000001, "Member 'MH_Tarzan_BP_C_RetargetSetup::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_RetargetSetup, CallFunc_IsValidClass_ReturnValue) == 0x000002, "Member 'MH_Tarzan_BP_C_RetargetSetup::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_RetargetSetup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'MH_Tarzan_BP_C_RetargetSetup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.Tarzan_Next_Move
// 0x0010 (0x0010 - 0x0000)
struct MH_Tarzan_BP_C_Tarzan_Next_Move final
{
public:
	class ATarzan_NextMoveTarget_BP_C*            NextTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_Tarzan_Next_Move) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_Tarzan_Next_Move");
static_assert(sizeof(MH_Tarzan_BP_C_Tarzan_Next_Move) == 0x000010, "Wrong size on MH_Tarzan_BP_C_Tarzan_Next_Move");
static_assert(offsetof(MH_Tarzan_BP_C_Tarzan_Next_Move, NextTarget) == 0x000000, "Member 'MH_Tarzan_BP_C_Tarzan_Next_Move::NextTarget' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_Tarzan_Next_Move, Duration) == 0x000008, "Member 'MH_Tarzan_BP_C_Tarzan_Next_Move::Duration' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.CheckCondition
// 0x0018 (0x0018 - 0x0000)
struct MH_Tarzan_BP_C_CheckCondition final
{
public:
	const class UDlgContext*                      Context;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ConditionName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_CheckCondition) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_CheckCondition");
static_assert(sizeof(MH_Tarzan_BP_C_CheckCondition) == 0x000018, "Wrong size on MH_Tarzan_BP_C_CheckCondition");
static_assert(offsetof(MH_Tarzan_BP_C_CheckCondition, Context) == 0x000000, "Member 'MH_Tarzan_BP_C_CheckCondition::Context' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_CheckCondition, ConditionName) == 0x000008, "Member 'MH_Tarzan_BP_C_CheckCondition::ConditionName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_CheckCondition, ReturnValue) == 0x000010, "Member 'MH_Tarzan_BP_C_CheckCondition::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetBoolValue
// 0x000C (0x000C - 0x0000)
struct MH_Tarzan_BP_C_GetBoolValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_GetBoolValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_GetBoolValue");
static_assert(sizeof(MH_Tarzan_BP_C_GetBoolValue) == 0x00000C, "Wrong size on MH_Tarzan_BP_C_GetBoolValue");
static_assert(offsetof(MH_Tarzan_BP_C_GetBoolValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_GetBoolValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_GetBoolValue, ReturnValue) == 0x000008, "Member 'MH_Tarzan_BP_C_GetBoolValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetFloatValue
// 0x000C (0x000C - 0x0000)
struct MH_Tarzan_BP_C_GetFloatValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_GetFloatValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_GetFloatValue");
static_assert(sizeof(MH_Tarzan_BP_C_GetFloatValue) == 0x00000C, "Wrong size on MH_Tarzan_BP_C_GetFloatValue");
static_assert(offsetof(MH_Tarzan_BP_C_GetFloatValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_GetFloatValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_GetFloatValue, ReturnValue) == 0x000008, "Member 'MH_Tarzan_BP_C_GetFloatValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetIntValue
// 0x000C (0x000C - 0x0000)
struct MH_Tarzan_BP_C_GetIntValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_GetIntValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_GetIntValue");
static_assert(sizeof(MH_Tarzan_BP_C_GetIntValue) == 0x00000C, "Wrong size on MH_Tarzan_BP_C_GetIntValue");
static_assert(offsetof(MH_Tarzan_BP_C_GetIntValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_GetIntValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_GetIntValue, ReturnValue) == 0x000008, "Member 'MH_Tarzan_BP_C_GetIntValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetNameValue
// 0x0010 (0x0010 - 0x0000)
struct MH_Tarzan_BP_C_GetNameValue final
{
public:
	class FName                                   ValueName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_GetNameValue) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_GetNameValue");
static_assert(sizeof(MH_Tarzan_BP_C_GetNameValue) == 0x000010, "Wrong size on MH_Tarzan_BP_C_GetNameValue");
static_assert(offsetof(MH_Tarzan_BP_C_GetNameValue, ValueName) == 0x000000, "Member 'MH_Tarzan_BP_C_GetNameValue::ValueName' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_GetNameValue, ReturnValue) == 0x000008, "Member 'MH_Tarzan_BP_C_GetNameValue::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetParticipantDisplayName
// 0x0020 (0x0020 - 0x0000)
struct MH_Tarzan_BP_C_GetParticipantDisplayName final
{
public:
	class FName                                   ActiveSpeaker;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(MH_Tarzan_BP_C_GetParticipantDisplayName) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_GetParticipantDisplayName");
static_assert(sizeof(MH_Tarzan_BP_C_GetParticipantDisplayName) == 0x000020, "Wrong size on MH_Tarzan_BP_C_GetParticipantDisplayName");
static_assert(offsetof(MH_Tarzan_BP_C_GetParticipantDisplayName, ActiveSpeaker) == 0x000000, "Member 'MH_Tarzan_BP_C_GetParticipantDisplayName::ActiveSpeaker' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_GetParticipantDisplayName, ReturnValue) == 0x000008, "Member 'MH_Tarzan_BP_C_GetParticipantDisplayName::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetParticipantGender
// 0x0001 (0x0001 - 0x0000)
struct MH_Tarzan_BP_C_GetParticipantGender final
{
public:
	ETextGender                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_GetParticipantGender) == 0x000001, "Wrong alignment on MH_Tarzan_BP_C_GetParticipantGender");
static_assert(sizeof(MH_Tarzan_BP_C_GetParticipantGender) == 0x000001, "Wrong size on MH_Tarzan_BP_C_GetParticipantGender");
static_assert(offsetof(MH_Tarzan_BP_C_GetParticipantGender, ReturnValue) == 0x000000, "Member 'MH_Tarzan_BP_C_GetParticipantGender::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetParticipantIcon
// 0x0018 (0x0018 - 0x0000)
struct MH_Tarzan_BP_C_GetParticipantIcon final
{
public:
	class FName                                   ActiveSpeaker;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActiveSpeakerState;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_GetParticipantIcon) == 0x000008, "Wrong alignment on MH_Tarzan_BP_C_GetParticipantIcon");
static_assert(sizeof(MH_Tarzan_BP_C_GetParticipantIcon) == 0x000018, "Wrong size on MH_Tarzan_BP_C_GetParticipantIcon");
static_assert(offsetof(MH_Tarzan_BP_C_GetParticipantIcon, ActiveSpeaker) == 0x000000, "Member 'MH_Tarzan_BP_C_GetParticipantIcon::ActiveSpeaker' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_GetParticipantIcon, ActiveSpeakerState) == 0x000008, "Member 'MH_Tarzan_BP_C_GetParticipantIcon::ActiveSpeakerState' has a wrong offset!");
static_assert(offsetof(MH_Tarzan_BP_C_GetParticipantIcon, ReturnValue) == 0x000010, "Member 'MH_Tarzan_BP_C_GetParticipantIcon::ReturnValue' has a wrong offset!");

// Function MH_Tarzan_BP.MH_Tarzan_BP_C.GetParticipantName
// 0x0008 (0x0008 - 0x0000)
struct MH_Tarzan_BP_C_GetParticipantName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MH_Tarzan_BP_C_GetParticipantName) == 0x000004, "Wrong alignment on MH_Tarzan_BP_C_GetParticipantName");
static_assert(sizeof(MH_Tarzan_BP_C_GetParticipantName) == 0x000008, "Wrong size on MH_Tarzan_BP_C_GetParticipantName");
static_assert(offsetof(MH_Tarzan_BP_C_GetParticipantName, ReturnValue) == 0x000000, "Member 'MH_Tarzan_BP_C_GetParticipantName::ReturnValue' has a wrong offset!");

}

