#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlsOverviewWidgetBP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ControlsOverviewWidgetBP_C_BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong alignment on ControlsOverviewWidgetBP_C_BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature");
static_assert(sizeof(ControlsOverviewWidgetBP_C_BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong size on ControlsOverviewWidgetBP_C_BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature");
static_assert(offsetof(ControlsOverviewWidgetBP_C_BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature, ActiveIndex) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_BndEvt__InvertXOptionsPicker_K2Node_ComponentBoundEvent_1_OnOptionChanged__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ControlsOverviewWidgetBP_C_BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong alignment on ControlsOverviewWidgetBP_C_BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature");
static_assert(sizeof(ControlsOverviewWidgetBP_C_BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong size on ControlsOverviewWidgetBP_C_BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature");
static_assert(offsetof(ControlsOverviewWidgetBP_C_BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature, ActiveIndex) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_BndEvt__InvertYOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ControlsOverviewWidgetBP_C_BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong alignment on ControlsOverviewWidgetBP_C_BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature");
static_assert(sizeof(ControlsOverviewWidgetBP_C_BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong size on ControlsOverviewWidgetBP_C_BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature");
static_assert(offsetof(ControlsOverviewWidgetBP_C_BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature, ActiveIndex) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_BndEvt__RumbleOptionsPicker_K2Node_ComponentBoundEvent_17_OnOptionChanged__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.ExecuteUbergraph_ControlsOverviewWidgetBP
// 0x0038 (0x0038 - 0x0000)
struct ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex_2;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateToMenu;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu_1;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGamepadBeingUsed;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D4[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerIndex;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D5[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP) == 0x000008, "Wrong alignment on ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP");
static_assert(sizeof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP) == 0x000038, "Wrong size on ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, EntryPoint) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_ComponentBoundEvent_ActiveIndex_2) == 0x000004, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_ComponentBoundEvent_ActiveIndex_2' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_Event_NavigateToMenu) == 0x000008, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_Event_NavigateToMenu' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_Event_NavigateFromMenu_1) == 0x000010, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_Event_NavigateFromMenu_1' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_Event_NavigateFromMenu) == 0x000018, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_Event_NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_Event_bIsGamepadBeingUsed) == 0x000020, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_Event_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_Event_PlayerIndex) == 0x000024, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_Event_PlayerIndex' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, CallFunc_IsValid_ReturnValue_2) == 0x00002A, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, CallFunc_IsValid_ReturnValue_3) == 0x00002B, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_ComponentBoundEvent_ActiveIndex_1) == 0x000030, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_ComponentBoundEvent_ActiveIndex_1' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP, K2Node_ComponentBoundEvent_ActiveIndex) == 0x000034, "Member 'ControlsOverviewWidgetBP_C_ExecuteUbergraph_ControlsOverviewWidgetBP::K2Node_ComponentBoundEvent_ActiveIndex' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.InfomationImage_Pad?
// 0x01B0 (0x01B0 - 0x0000)
struct ControlsOverviewWidgetBP_C_InfomationImage_Pad_ final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	class UObject*                                Image;                                             // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D6[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00E0(0x00D0)()
};
static_assert(alignof(ControlsOverviewWidgetBP_C_InfomationImage_Pad_) == 0x000010, "Wrong alignment on ControlsOverviewWidgetBP_C_InfomationImage_Pad_");
static_assert(sizeof(ControlsOverviewWidgetBP_C_InfomationImage_Pad_) == 0x0001B0, "Wrong size on ControlsOverviewWidgetBP_C_InfomationImage_Pad_");
static_assert(offsetof(ControlsOverviewWidgetBP_C_InfomationImage_Pad_, ReturnValue) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_InfomationImage_Pad_::ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_InfomationImage_Pad_, Image) == 0x0000D0, "Member 'ControlsOverviewWidgetBP_C_InfomationImage_Pad_::Image' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_InfomationImage_Pad_, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed) == 0x0000D8, "Member 'ControlsOverviewWidgetBP_C_InfomationImage_Pad_::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_InfomationImage_Pad_, K2Node_MakeStruct_SlateBrush) == 0x0000E0, "Member 'ControlsOverviewWidgetBP_C_InfomationImage_Pad_::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.RumbleOptionChanged
// 0x0001 (0x0001 - 0x0000)
struct ControlsOverviewWidgetBP_C_RumbleOptionChanged final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_RumbleOptionChanged) == 0x000001, "Wrong alignment on ControlsOverviewWidgetBP_C_RumbleOptionChanged");
static_assert(sizeof(ControlsOverviewWidgetBP_C_RumbleOptionChanged) == 0x000001, "Wrong size on ControlsOverviewWidgetBP_C_RumbleOptionChanged");
static_assert(offsetof(ControlsOverviewWidgetBP_C_RumbleOptionChanged, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_RumbleOptionChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.RumblePreview
// 0x0018 (0x0018 - 0x0000)
struct ControlsOverviewWidgetBP_C_RumblePreview final
{
public:
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_RumblePreview) == 0x000008, "Wrong alignment on ControlsOverviewWidgetBP_C_RumblePreview");
static_assert(sizeof(ControlsOverviewWidgetBP_C_RumblePreview) == 0x000018, "Wrong size on ControlsOverviewWidgetBP_C_RumblePreview");
static_assert(offsetof(ControlsOverviewWidgetBP_C_RumblePreview, CallFunc_IsGamePaused_ReturnValue) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_RumblePreview::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_RumblePreview, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'ControlsOverviewWidgetBP_C_RumblePreview::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_RumblePreview, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'ControlsOverviewWidgetBP_C_RumblePreview::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_RumblePreview, CallFunc_Conv_IntToBool_ReturnValue) == 0x000011, "Member 'ControlsOverviewWidgetBP_C_RumblePreview::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_RumblePreview, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'ControlsOverviewWidgetBP_C_RumblePreview::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.ShowDecisionDialog
// 0x0010 (0x0010 - 0x0000)
struct ControlsOverviewWidgetBP_C_ShowDecisionDialog final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_ShowDecisionDialog) == 0x000008, "Wrong alignment on ControlsOverviewWidgetBP_C_ShowDecisionDialog");
static_assert(sizeof(ControlsOverviewWidgetBP_C_ShowDecisionDialog) == 0x000010, "Wrong size on ControlsOverviewWidgetBP_C_ShowDecisionDialog");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ShowDecisionDialog, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_ShowDecisionDialog::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_ShowDecisionDialog, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed) == 0x000008, "Member 'ControlsOverviewWidgetBP_C_ShowDecisionDialog::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.UpdateDescription
// 0x0008 (0x0008 - 0x0000)
struct ControlsOverviewWidgetBP_C_UpdateDescription final
{
public:
	class UInteractableUserWidget_C*              InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_UpdateDescription) == 0x000008, "Wrong alignment on ControlsOverviewWidgetBP_C_UpdateDescription");
static_assert(sizeof(ControlsOverviewWidgetBP_C_UpdateDescription) == 0x000008, "Wrong size on ControlsOverviewWidgetBP_C_UpdateDescription");
static_assert(offsetof(ControlsOverviewWidgetBP_C_UpdateDescription, InWidget) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_UpdateDescription::InWidget' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.OnNavigationEnter
// 0x0010 (0x0010 - 0x0000)
struct ControlsOverviewWidgetBP_C_OnNavigationEnter final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bIsGamepadBeingUsed;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D8[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_PlayerIndex;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_OnNavigationEnter) == 0x000008, "Wrong alignment on ControlsOverviewWidgetBP_C_OnNavigationEnter");
static_assert(sizeof(ControlsOverviewWidgetBP_C_OnNavigationEnter) == 0x000010, "Wrong size on ControlsOverviewWidgetBP_C_OnNavigationEnter");
static_assert(offsetof(ControlsOverviewWidgetBP_C_OnNavigationEnter, NavigateFromMenu) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_OnNavigationEnter::NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_OnNavigationEnter, Param_bIsGamepadBeingUsed) == 0x000008, "Member 'ControlsOverviewWidgetBP_C_OnNavigationEnter::Param_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_OnNavigationEnter, Param_PlayerIndex) == 0x00000C, "Member 'ControlsOverviewWidgetBP_C_OnNavigationEnter::Param_PlayerIndex' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.OnNavigationExit
// 0x0010 (0x0010 - 0x0000)
struct ControlsOverviewWidgetBP_C_OnNavigationExit final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateToMenu;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_OnNavigationExit) == 0x000008, "Wrong alignment on ControlsOverviewWidgetBP_C_OnNavigationExit");
static_assert(sizeof(ControlsOverviewWidgetBP_C_OnNavigationExit) == 0x000010, "Wrong size on ControlsOverviewWidgetBP_C_OnNavigationExit");
static_assert(offsetof(ControlsOverviewWidgetBP_C_OnNavigationExit, NavigateToMenu) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_OnNavigationExit::NavigateToMenu' has a wrong offset!");
static_assert(offsetof(ControlsOverviewWidgetBP_C_OnNavigationExit, NavigateFromMenu) == 0x000008, "Member 'ControlsOverviewWidgetBP_C_OnNavigationExit::NavigateFromMenu' has a wrong offset!");

// Function ControlsOverviewWidgetBP.ControlsOverviewWidgetBP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ControlsOverviewWidgetBP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlsOverviewWidgetBP_C_PreConstruct) == 0x000001, "Wrong alignment on ControlsOverviewWidgetBP_C_PreConstruct");
static_assert(sizeof(ControlsOverviewWidgetBP_C_PreConstruct) == 0x000001, "Wrong size on ControlsOverviewWidgetBP_C_PreConstruct");
static_assert(offsetof(ControlsOverviewWidgetBP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ControlsOverviewWidgetBP_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

