#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RocketGet_SpotLight

#include "Basic.hpp"


namespace SDK::Params
{

// Function RocketGet_SpotLight.RocketGet_SpotLight_C.ExecuteUbergraph_RocketGet_SpotLight
// 0x0020 (0x0020 - 0x0000)
struct RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewVisibility;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4181[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 K2Node_DynamicCast_AsALTF42_Game_Instance;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight) == 0x000008, "Wrong alignment on RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight");
static_assert(sizeof(RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight) == 0x000020, "Wrong size on RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight");
static_assert(offsetof(RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight, EntryPoint) == 0x000000, "Member 'RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight, K2Node_CustomEvent_bNewVisibility) == 0x000004, "Member 'RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight::K2Node_CustomEvent_bNewVisibility' has a wrong offset!");
static_assert(offsetof(RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight, K2Node_DynamicCast_AsALTF42_Game_Instance) == 0x000010, "Member 'RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight::K2Node_DynamicCast_AsALTF42_Game_Instance' has a wrong offset!");
static_assert(offsetof(RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RocketGet_SpotLight_C_ExecuteUbergraph_RocketGet_SpotLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RocketGet_SpotLight.RocketGet_SpotLight_C.RocketRight_Visible
// 0x0001 (0x0001 - 0x0000)
struct RocketGet_SpotLight_C_RocketRight_Visible final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RocketGet_SpotLight_C_RocketRight_Visible) == 0x000001, "Wrong alignment on RocketGet_SpotLight_C_RocketRight_Visible");
static_assert(sizeof(RocketGet_SpotLight_C_RocketRight_Visible) == 0x000001, "Wrong size on RocketGet_SpotLight_C_RocketRight_Visible");
static_assert(offsetof(RocketGet_SpotLight_C_RocketRight_Visible, bNewVisibility) == 0x000000, "Member 'RocketGet_SpotLight_C_RocketRight_Visible::bNewVisibility' has a wrong offset!");

}

