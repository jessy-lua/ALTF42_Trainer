#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_EnemyRespawn_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Base_EnemyRespawn_BP.Base_EnemyRespawn_BP_C.Base_EnemyRespawn_Event
// 0x0001 (0x0001 - 0x0000)
struct Base_EnemyRespawn_BP_C_Base_EnemyRespawn_Event final
{
public:
	bool                                          Param_Range_;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_EnemyRespawn_BP_C_Base_EnemyRespawn_Event) == 0x000001, "Wrong alignment on Base_EnemyRespawn_BP_C_Base_EnemyRespawn_Event");
static_assert(sizeof(Base_EnemyRespawn_BP_C_Base_EnemyRespawn_Event) == 0x000001, "Wrong size on Base_EnemyRespawn_BP_C_Base_EnemyRespawn_Event");
static_assert(offsetof(Base_EnemyRespawn_BP_C_Base_EnemyRespawn_Event, Param_Range_) == 0x000000, "Member 'Base_EnemyRespawn_BP_C_Base_EnemyRespawn_Event::Param_Range_' has a wrong offset!");

// Function Base_EnemyRespawn_BP.Base_EnemyRespawn_BP_C.Enemy_Die_SettingEvent
// 0x0001 (0x0001 - 0x0000)
struct Base_EnemyRespawn_BP_C_Enemy_Die_SettingEvent final
{
public:
	bool                                          Param_Char_Die;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_EnemyRespawn_BP_C_Enemy_Die_SettingEvent) == 0x000001, "Wrong alignment on Base_EnemyRespawn_BP_C_Enemy_Die_SettingEvent");
static_assert(sizeof(Base_EnemyRespawn_BP_C_Enemy_Die_SettingEvent) == 0x000001, "Wrong size on Base_EnemyRespawn_BP_C_Enemy_Die_SettingEvent");
static_assert(offsetof(Base_EnemyRespawn_BP_C_Enemy_Die_SettingEvent, Param_Char_Die) == 0x000000, "Member 'Base_EnemyRespawn_BP_C_Enemy_Die_SettingEvent::Param_Char_Die' has a wrong offset!");

// Function Base_EnemyRespawn_BP.Base_EnemyRespawn_BP_C.ExecuteUbergraph_Base_EnemyRespawn_BP
// 0x0140 (0x0140 - 0x0000)
struct Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Char_Die;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Range_;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363C[0xA];                                     // 0x0006(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363D[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAI_FieldDefault_Enemy_BP_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP) == 0x000010, "Wrong alignment on Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP");
static_assert(sizeof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP) == 0x000140, "Wrong size on Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, EntryPoint) == 0x000000, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, K2Node_CustomEvent_Char_Die) == 0x000004, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::K2Node_CustomEvent_Char_Die' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, K2Node_CustomEvent_Range_) == 0x000005, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::K2Node_CustomEvent_Range_' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_BreakTransform_Location) == 0x000070, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000120, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000128, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000130, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP, CallFunc_IsOverlappingActor_ReturnValue) == 0x000138, "Member 'Base_EnemyRespawn_BP_C_ExecuteUbergraph_Base_EnemyRespawn_BP::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");

}

