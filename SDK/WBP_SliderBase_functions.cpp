#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SliderBase

#include "Basic.hpp"

#include "WBP_SliderBase_classes.hpp"
#include "WBP_SliderBase_parameters.hpp"


namespace SDK
{

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderValue
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOptionChangeIgnore                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::UpdateSliderValue(double InValue, bool bPlaySound, bool bOptionChangeIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "UpdateSliderValue");

	Params::WBP_SliderBase_C_UpdateSliderValue Parms{};

	Parms.InValue = InValue;
	Parms.bPlaySound = bPlaySound;
	Parms.bOptionChangeIgnore = bOptionChangeIgnore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderProgressBarAndSliderHandle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ValueNormalized                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::UpdateSliderProgressBarAndSliderHandle(float Value, double ValueNormalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "UpdateSliderProgressBarAndSliderHandle");

	Params::WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle Parms{};

	Parms.Value = Value;
	Parms.ValueNormalized = ValueNormalized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderInterpolationSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::UpdateSliderInterpolationSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "UpdateSliderInterpolationSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderFromMouse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::UpdateSliderFromMouse(double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "UpdateSliderFromMouse");

	Params::WBP_SliderBase_C_UpdateSliderFromMouse Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderAndIncrementRampUpSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::UpdateSliderAndIncrementRampUpSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "UpdateSliderAndIncrementRampUpSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSlider
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::UpdateSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "UpdateSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.UpdateIsHoldingKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKeyEvent                        Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_SliderBase_C::UpdateIsHoldingKey(const struct FKeyEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "UpdateIsHoldingKey");

	Params::WBP_SliderBase_C_UpdateIsHoldingKey Parms{};

	Parms.Event = std::move(Event);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.SetWidgetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWidgetStyleState                       Param_WidgetState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::SetWidgetState(EWidgetStyleState Param_WidgetState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "SetWidgetState");

	Params::WBP_SliderBase_C_SetWidgetState Parms{};

	Parms.Param_WidgetState = Param_WidgetState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.SetValueTextFromNumber
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::SetValueTextFromNumber(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "SetValueTextFromNumber");

	Params::WBP_SliderBase_C_SetValueTextFromNumber Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.SetupSliderInitial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::SetupSliderInitial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "SetupSliderInitial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.SetupOptionNameText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::SetupOptionNameText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "SetupOptionNameText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.SetSliderHandleValue
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::SetSliderHandleValue(double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "SetSliderHandleValue");

	Params::WBP_SliderBase_C_SetSliderHandleValue Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.SetSliderBackgroundColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     SpecifiedColor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::SetSliderBackgroundColor(const struct FLinearColor& SpecifiedColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "SetSliderBackgroundColor");

	Params::WBP_SliderBase_C_SetSliderBackgroundColor Parms{};

	Parms.SpecifiedColor = std::move(SpecifiedColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.SetSettingsValue
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::SetSettingsValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "SetSettingsValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ResetSpeedOnTargetReached
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::ResetSpeedOnTargetReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ResetSpeedOnTargetReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ResetSettingsValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::ResetSettingsValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ResetSettingsValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "PreConstruct");

	Params::WBP_SliderBase_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OverrideWidgetStyleFromConfig
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OverrideWidgetStyleFromConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OverrideWidgetStyleFromConfig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnUpdateSlider
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnUpdateSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnUpdateSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnStartChangeCooldown
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnStartChangeCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnStartChangeCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnSliderValueInputCooldown
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnSliderValueInputCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnSliderValueInputCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnSliderValueEditTextCommited
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::OnSliderValueEditTextCommited(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnSliderValueEditTextCommited");

	Params::WBP_SliderBase_C_OnSliderValueEditTextCommited Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnSliderValueEditTextChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_SliderBase_C::OnSliderValueEditTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnSliderValueEditTextChanged");

	Params::WBP_SliderBase_C_OnSliderValueEditTextChanged Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnSetupSlider
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnSetupSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnSetupSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnSetSettingsValueQueue
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnSetSettingsValueQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnSetSettingsValueQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnSetHighlightEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWidgetStyleState                       Param_HighlightState                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlaySound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::OnSetHighlightEffect(EWidgetStyleState Param_HighlightState, bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnSetHighlightEffect");

	Params::WBP_SliderBase_C_OnSetHighlightEffect Parms{};

	Parms.Param_HighlightState = Param_HighlightState;
	Parms.bPlaySound = bPlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_SliderBase_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnRemovedFromFocusPath");

	Params::WBP_SliderBase_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnOptionChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_CurrentValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_SliderBase_C*                OptionsSlider                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::OnOptionChanged__DelegateSignature(double Param_CurrentValue, class UWBP_SliderBase_C* OptionsSlider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnOptionChanged__DelegateSignature");

	Params::WBP_SliderBase_C_OnOptionChanged__DelegateSignature Parms{};

	Parms.Param_CurrentValue = Param_CurrentValue;
	Parms.OptionsSlider = OptionsSlider;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnMouseCaptureEndSlider
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnMouseCaptureEndSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnMouseCaptureEndSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnMouseCaptureBeginSlider
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnMouseCaptureBeginSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnMouseCaptureBeginSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_SliderBase_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnKeyUp");

	Params::WBP_SliderBase_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_SliderBase_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnKeyDown");

	Params::WBP_SliderBase_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnDelayedSetSettingsValue
// (BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::OnDelayedSetSettingsValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnDelayedSetSettingsValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.OnCustomApplyMethod__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_SliderBase_C*                OptionSliderBase                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::OnCustomApplyMethod__DelegateSignature(class UWBP_SliderBase_C* OptionSliderBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "OnCustomApplyMethod__DelegateSignature");

	Params::WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature Parms{};

	Parms.OptionSliderBase = OptionSliderBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.IncrementWithRampUpSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::IncrementWithRampUpSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "IncrementWithRampUpSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.IncrementSlider
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InIncrementValue                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::IncrementSlider(double InIncrementValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "IncrementSlider");

	Params::WBP_SliderBase_C_IncrementSlider Parms{};

	Parms.InIncrementValue = InIncrementValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.IncrementSingleStep
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::IncrementSingleStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "IncrementSingleStep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.IncreaseSliderRampUpSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::IncreaseSliderRampUpSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "IncreaseSliderRampUpSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.GetSettingsValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::GetSettingsValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "GetSettingsValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.GetScaledValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnlyByMaxValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::GetScaledValue(double InValue, double* OnlyByMaxValue, double* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "GetScaledValue");

	Params::WBP_SliderBase_C_GetScaledValue Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (OnlyByMaxValue != nullptr)
		*OnlyByMaxValue = Parms.OnlyByMaxValue;

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function WBP_SliderBase.WBP_SliderBase_C.GetDefaultValueNormalized
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UWBP_SliderBase_C::GetDefaultValueNormalized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "GetDefaultValueNormalized");

	Params::WBP_SliderBase_C_GetDefaultValueNormalized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SliderBase.WBP_SliderBase_C.ExecuteUbergraph_WBP_SliderBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SliderBase_C::ExecuteUbergraph_WBP_SliderBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ExecuteUbergraph_WBP_SliderBase");

	Params::WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ConvertInputToNumeric
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ModifiedText                                           (Parm, OutParm)

void UWBP_SliderBase_C::ConvertInputToNumeric(const class FText& InText, class FText* ModifiedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ConvertInputToNumeric");

	Params::WBP_SliderBase_C_ConvertInputToNumeric Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);

	if (ModifiedText != nullptr)
		*ModifiedText = std::move(Parms.ModifiedText);
}


// Function WBP_SliderBase.WBP_SliderBase_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_SliderBase_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleNormal
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::ApplyWidgetStyleNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ApplyWidgetStyleNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleHighlighted
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::ApplyWidgetStyleHighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ApplyWidgetStyleHighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::ApplyWidgetStyleDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ApplyWidgetStyleDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleActive
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::ApplyWidgetStyleActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ApplyWidgetStyleActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SliderBase.WBP_SliderBase_C.ApplySettingsValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_SliderBase_C::ApplySettingsValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SliderBase_C", "ApplySettingsValue");

	UObject::ProcessEvent(Func, nullptr);
}

}

