#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReturnVillage_Talk_Event_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ReturnVillage_Talk_Event_BP.ReturnVillage_Talk_Event_BP_C
// 0x0118 (0x03B0 - 0x0298)
class AReturnVillage_Talk_Event_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MoveTarget;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TalkEventStart_Overlap;                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                In_Box_Extent;                                     // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   NPC_Name;                                          // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UObject*                                NPC_Image;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   Talk_Text;                                         // 0x02F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ACameraActor*                           LastTalk_Camera;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Talk_Npc_Name;                                     // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UObject*                                Talk_NPC_Image;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   Talk_Speak_Text;                                   // 0x0330(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AALTF4_Loco_BP_C*                       ALTF42_Char;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Talk_Integer;                                      // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTalk;                                           // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TextJumpPossible;                                  // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3470[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           FormChange_Camera;                                 // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AAI_Fairy_NPC_BP_C*                     FairyNPC;                                          // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AAI_MH_Tuto_C*                          Tuto;                                              // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AAI_MH_Dulcinea_BP_C*                   Dulcinea;                                          // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AAI_MH_Nicholas_C*                      Nicholas;                                          // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AAI_MH_Merchant_C*                      Merchant;                                          // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AAmbientSound*                          Sound_01;                                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AAmbientSound*                          Sound_02;                                          // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AAmbientSound*                          Sound_03;                                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AAmbientSound*                          Sound_04;                                          // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__ReturnVillage_Talk_Event_BP_TalkEventStart_Overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_ReturnVillage_Talk_Event_BP(int32 EntryPoint);
	void Mage_ReturnTalk_Event();
	void NextTalk();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ReturnVillage_Talk_Event_BP_C">();
	}
	static class AReturnVillage_Talk_Event_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReturnVillage_Talk_Event_BP_C>();
	}
};
static_assert(alignof(AReturnVillage_Talk_Event_BP_C) == 0x000008, "Wrong alignment on AReturnVillage_Talk_Event_BP_C");
static_assert(sizeof(AReturnVillage_Talk_Event_BP_C) == 0x0003B0, "Wrong size on AReturnVillage_Talk_Event_BP_C");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, UberGraphFrame) == 0x000298, "Member 'AReturnVillage_Talk_Event_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, MoveTarget) == 0x0002A0, "Member 'AReturnVillage_Talk_Event_BP_C::MoveTarget' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, TalkEventStart_Overlap) == 0x0002A8, "Member 'AReturnVillage_Talk_Event_BP_C::TalkEventStart_Overlap' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, DefaultSceneRoot) == 0x0002B0, "Member 'AReturnVillage_Talk_Event_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, In_Box_Extent) == 0x0002B8, "Member 'AReturnVillage_Talk_Event_BP_C::In_Box_Extent' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, NPC_Name) == 0x0002D0, "Member 'AReturnVillage_Talk_Event_BP_C::NPC_Name' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, NPC_Image) == 0x0002E8, "Member 'AReturnVillage_Talk_Event_BP_C::NPC_Image' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Talk_Text) == 0x0002F0, "Member 'AReturnVillage_Talk_Event_BP_C::Talk_Text' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, LastTalk_Camera) == 0x000308, "Member 'AReturnVillage_Talk_Event_BP_C::LastTalk_Camera' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Talk_Npc_Name) == 0x000310, "Member 'AReturnVillage_Talk_Event_BP_C::Talk_Npc_Name' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Talk_NPC_Image) == 0x000328, "Member 'AReturnVillage_Talk_Event_BP_C::Talk_NPC_Image' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Talk_Speak_Text) == 0x000330, "Member 'AReturnVillage_Talk_Event_BP_C::Talk_Speak_Text' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, ALTF42_Char) == 0x000348, "Member 'AReturnVillage_Talk_Event_BP_C::ALTF42_Char' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Talk_Integer) == 0x000350, "Member 'AReturnVillage_Talk_Event_BP_C::Talk_Integer' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, MaxTalk) == 0x000354, "Member 'AReturnVillage_Talk_Event_BP_C::MaxTalk' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, TextJumpPossible) == 0x000358, "Member 'AReturnVillage_Talk_Event_BP_C::TextJumpPossible' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, FormChange_Camera) == 0x000360, "Member 'AReturnVillage_Talk_Event_BP_C::FormChange_Camera' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, FairyNPC) == 0x000368, "Member 'AReturnVillage_Talk_Event_BP_C::FairyNPC' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Tuto) == 0x000370, "Member 'AReturnVillage_Talk_Event_BP_C::Tuto' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Dulcinea) == 0x000378, "Member 'AReturnVillage_Talk_Event_BP_C::Dulcinea' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Nicholas) == 0x000380, "Member 'AReturnVillage_Talk_Event_BP_C::Nicholas' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Merchant) == 0x000388, "Member 'AReturnVillage_Talk_Event_BP_C::Merchant' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Sound_01) == 0x000390, "Member 'AReturnVillage_Talk_Event_BP_C::Sound_01' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Sound_02) == 0x000398, "Member 'AReturnVillage_Talk_Event_BP_C::Sound_02' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Sound_03) == 0x0003A0, "Member 'AReturnVillage_Talk_Event_BP_C::Sound_03' has a wrong offset!");
static_assert(offsetof(AReturnVillage_Talk_Event_BP_C, Sound_04) == 0x0003A8, "Member 'AReturnVillage_Talk_Event_BP_C::Sound_04' has a wrong offset!");

}

