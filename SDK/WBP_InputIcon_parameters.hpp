#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputIcon

#include "Basic.hpp"

#include "EInputDeviceType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FInputActionDataElement_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_InputIcon.WBP_InputIcon_C.ActiveInputDeviceChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_InputIcon_C_ActiveInputDeviceChanged final
{
public:
	EInputDeviceType                              InputDeviceType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_ActiveInputDeviceChanged) == 0x000001, "Wrong alignment on WBP_InputIcon_C_ActiveInputDeviceChanged");
static_assert(sizeof(WBP_InputIcon_C_ActiveInputDeviceChanged) == 0x000004, "Wrong size on WBP_InputIcon_C_ActiveInputDeviceChanged");
static_assert(offsetof(WBP_InputIcon_C_ActiveInputDeviceChanged, InputDeviceType) == 0x000000, "Member 'WBP_InputIcon_C_ActiveInputDeviceChanged::InputDeviceType' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ActiveInputDeviceChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_InputIcon_C_ActiveInputDeviceChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ActiveInputDeviceChanged, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000002, "Member 'WBP_InputIcon_C_ActiveInputDeviceChanged::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ActiveInputDeviceChanged, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x000003, "Member 'WBP_InputIcon_C_ActiveInputDeviceChanged::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.ChangeMappedKey
// 0x0020 (0x0020 - 0x0000)
struct WBP_InputIcon_C_ChangeMappedKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_ChangeMappedKey) == 0x000008, "Wrong alignment on WBP_InputIcon_C_ChangeMappedKey");
static_assert(sizeof(WBP_InputIcon_C_ChangeMappedKey) == 0x000020, "Wrong size on WBP_InputIcon_C_ChangeMappedKey");
static_assert(offsetof(WBP_InputIcon_C_ChangeMappedKey, NewKey) == 0x000000, "Member 'WBP_InputIcon_C_ChangeMappedKey::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ChangeMappedKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000018, "Member 'WBP_InputIcon_C_ChangeMappedKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.DisplayKeyBackgroundAndInnerIcon
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_InputIcon_C_DisplayKeyBackgroundAndInnerIcon final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InputIcon_C_DisplayKeyBackgroundAndInnerIcon) == 0x000010, "Wrong alignment on WBP_InputIcon_C_DisplayKeyBackgroundAndInnerIcon");
static_assert(sizeof(WBP_InputIcon_C_DisplayKeyBackgroundAndInnerIcon) == 0x0000D0, "Wrong size on WBP_InputIcon_C_DisplayKeyBackgroundAndInnerIcon");
static_assert(offsetof(WBP_InputIcon_C_DisplayKeyBackgroundAndInnerIcon, Brush) == 0x000000, "Member 'WBP_InputIcon_C_DisplayKeyBackgroundAndInnerIcon::Brush' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.DisplayKeyBackgroundAndText
// 0x0120 (0x0120 - 0x0000)
struct WBP_InputIcon_C_DisplayKeyBackgroundAndText final
{
public:
	class FName                                   InText;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0018)()
	struct FFInputActionDataElement               CallFunc_GetInputActionData_InputNameData;         // 0x0030(0x00E0)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_DisplayKeyBackgroundAndText) == 0x000010, "Wrong alignment on WBP_InputIcon_C_DisplayKeyBackgroundAndText");
static_assert(sizeof(WBP_InputIcon_C_DisplayKeyBackgroundAndText) == 0x000120, "Wrong size on WBP_InputIcon_C_DisplayKeyBackgroundAndText");
static_assert(offsetof(WBP_InputIcon_C_DisplayKeyBackgroundAndText, InText) == 0x000000, "Member 'WBP_InputIcon_C_DisplayKeyBackgroundAndText::InText' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_DisplayKeyBackgroundAndText, CallFunc_MakeLiteralString_ReturnValue) == 0x000008, "Member 'WBP_InputIcon_C_DisplayKeyBackgroundAndText::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_DisplayKeyBackgroundAndText, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'WBP_InputIcon_C_DisplayKeyBackgroundAndText::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_DisplayKeyBackgroundAndText, CallFunc_GetInputActionData_InputNameData) == 0x000030, "Member 'WBP_InputIcon_C_DisplayKeyBackgroundAndText::CallFunc_GetInputActionData_InputNameData' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_DisplayKeyBackgroundAndText, CallFunc_NotEqual_NameName_ReturnValue) == 0x000110, "Member 'WBP_InputIcon_C_DisplayKeyBackgroundAndText::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.DisplayOuterIconOnly
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_InputIcon_C_DisplayOuterIconOnly final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InputIcon_C_DisplayOuterIconOnly) == 0x000010, "Wrong alignment on WBP_InputIcon_C_DisplayOuterIconOnly");
static_assert(sizeof(WBP_InputIcon_C_DisplayOuterIconOnly) == 0x0000D0, "Wrong size on WBP_InputIcon_C_DisplayOuterIconOnly");
static_assert(offsetof(WBP_InputIcon_C_DisplayOuterIconOnly, Brush) == 0x000000, "Member 'WBP_InputIcon_C_DisplayOuterIconOnly::Brush' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.ExecuteUbergraph_WBP_InputIcon
// 0x0020 (0x0020 - 0x0000)
struct WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_ControllerPlatformName;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EInputDeviceType                              K2Node_Event_InputDeviceType;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon) == 0x000008, "Wrong alignment on WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon");
static_assert(sizeof(WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon) == 0x000020, "Wrong size on WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon");
static_assert(offsetof(WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon, EntryPoint) == 0x000000, "Member 'WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon, K2Node_Event_ControllerPlatformName) == 0x000008, "Member 'WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon::K2Node_Event_ControllerPlatformName' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon, K2Node_Event_InputDeviceType) == 0x000018, "Member 'WBP_InputIcon_C_ExecuteUbergraph_WBP_InputIcon::K2Node_Event_InputDeviceType' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.OnControllerPlatformChange
// 0x0010 (0x0010 - 0x0000)
struct WBP_InputIcon_C_OnControllerPlatformChange final
{
public:
	class FString                                 ControllerPlatformName;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_OnControllerPlatformChange) == 0x000008, "Wrong alignment on WBP_InputIcon_C_OnControllerPlatformChange");
static_assert(sizeof(WBP_InputIcon_C_OnControllerPlatformChange) == 0x000010, "Wrong size on WBP_InputIcon_C_OnControllerPlatformChange");
static_assert(offsetof(WBP_InputIcon_C_OnControllerPlatformChange, ControllerPlatformName) == 0x000000, "Member 'WBP_InputIcon_C_OnControllerPlatformChange::ControllerPlatformName' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.OnHoveredKeyboardKey__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputIcon_C_OnHoveredKeyboardKey__DelegateSignature final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_OnHoveredKeyboardKey__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InputIcon_C_OnHoveredKeyboardKey__DelegateSignature");
static_assert(sizeof(WBP_InputIcon_C_OnHoveredKeyboardKey__DelegateSignature) == 0x000018, "Wrong size on WBP_InputIcon_C_OnHoveredKeyboardKey__DelegateSignature");
static_assert(offsetof(WBP_InputIcon_C_OnHoveredKeyboardKey__DelegateSignature, InKey) == 0x000000, "Member 'WBP_InputIcon_C_OnHoveredKeyboardKey__DelegateSignature::InKey' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.OnSwitchBetweenKeyboardAndGamepad
// 0x0001 (0x0001 - 0x0000)
struct WBP_InputIcon_C_OnSwitchBetweenKeyboardAndGamepad final
{
public:
	EInputDeviceType                              InputDeviceType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_OnSwitchBetweenKeyboardAndGamepad) == 0x000001, "Wrong alignment on WBP_InputIcon_C_OnSwitchBetweenKeyboardAndGamepad");
static_assert(sizeof(WBP_InputIcon_C_OnSwitchBetweenKeyboardAndGamepad) == 0x000001, "Wrong size on WBP_InputIcon_C_OnSwitchBetweenKeyboardAndGamepad");
static_assert(offsetof(WBP_InputIcon_C_OnSwitchBetweenKeyboardAndGamepad, InputDeviceType) == 0x000000, "Member 'WBP_InputIcon_C_OnSwitchBetweenKeyboardAndGamepad::InputDeviceType' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_InputIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_InputIcon_C_PreConstruct");
static_assert(sizeof(WBP_InputIcon_C_PreConstruct) == 0x000001, "Wrong size on WBP_InputIcon_C_PreConstruct");
static_assert(offsetof(WBP_InputIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_InputIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.RemoveNumpadPrefix
// 0x0050 (0x0050 - 0x0000)
struct WBP_InputIcon_C_RemoveNumpadPrefix final
{
public:
	class FName                                   InputName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ConvertedName;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFB[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_RemoveNumpadPrefix) == 0x000008, "Wrong alignment on WBP_InputIcon_C_RemoveNumpadPrefix");
static_assert(sizeof(WBP_InputIcon_C_RemoveNumpadPrefix) == 0x000050, "Wrong size on WBP_InputIcon_C_RemoveNumpadPrefix");
static_assert(offsetof(WBP_InputIcon_C_RemoveNumpadPrefix, InputName) == 0x000000, "Member 'WBP_InputIcon_C_RemoveNumpadPrefix::InputName' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_RemoveNumpadPrefix, ConvertedName) == 0x000008, "Member 'WBP_InputIcon_C_RemoveNumpadPrefix::ConvertedName' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_RemoveNumpadPrefix, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'WBP_InputIcon_C_RemoveNumpadPrefix::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_RemoveNumpadPrefix, CallFunc_Split_LeftS) == 0x000020, "Member 'WBP_InputIcon_C_RemoveNumpadPrefix::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_RemoveNumpadPrefix, CallFunc_Split_RightS) == 0x000030, "Member 'WBP_InputIcon_C_RemoveNumpadPrefix::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_RemoveNumpadPrefix, CallFunc_Split_ReturnValue) == 0x000040, "Member 'WBP_InputIcon_C_RemoveNumpadPrefix::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_RemoveNumpadPrefix, CallFunc_Conv_StringToName_ReturnValue) == 0x000044, "Member 'WBP_InputIcon_C_RemoveNumpadPrefix::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.ResetToDefaultSize
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputIcon_C_ResetToDefaultSize final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_ResetToDefaultSize) == 0x000008, "Wrong alignment on WBP_InputIcon_C_ResetToDefaultSize");
static_assert(sizeof(WBP_InputIcon_C_ResetToDefaultSize) == 0x000018, "Wrong size on WBP_InputIcon_C_ResetToDefaultSize");
static_assert(offsetof(WBP_InputIcon_C_ResetToDefaultSize, CallFunc_BreakVector2D_X) == 0x000000, "Member 'WBP_InputIcon_C_ResetToDefaultSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ResetToDefaultSize, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'WBP_InputIcon_C_ResetToDefaultSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ResetToDefaultSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000010, "Member 'WBP_InputIcon_C_ResetToDefaultSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_ResetToDefaultSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000014, "Member 'WBP_InputIcon_C_ResetToDefaultSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_InputIcon.WBP_InputIcon_C.SetIconFromMappedKey
// 0x0160 (0x0160 - 0x0000)
struct WBP_InputIcon_C_SetIconFromMappedKey final
{
public:
	class FString                                 TempControllerPlatformName;                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFC[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFInputActionDataElement               CallFunc_GetInputActionData_InputNameData;         // 0x0020(0x00E0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFD[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_RemoveNumpadPrefix_ConvertedName;         // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFE[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFF[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputIcon_C_SetIconFromMappedKey) == 0x000010, "Wrong alignment on WBP_InputIcon_C_SetIconFromMappedKey");
static_assert(sizeof(WBP_InputIcon_C_SetIconFromMappedKey) == 0x000160, "Wrong size on WBP_InputIcon_C_SetIconFromMappedKey");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, TempControllerPlatformName) == 0x000000, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::TempControllerPlatformName' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000010, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, Temp_bool_Variable) == 0x000012, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, Temp_bool_Variable_1) == 0x000013, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_GetInputActionData_InputNameData) == 0x000020, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_GetInputActionData_InputNameData' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_IsValid_ReturnValue_1) == 0x000101, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_Not_PreBool_ReturnValue_1) == 0x000102, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_RemoveNumpadPrefix_ConvertedName) == 0x000104, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_RemoveNumpadPrefix_ConvertedName' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_Conv_NameToString_ReturnValue) == 0x000110, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, K2Node_Select_Default) == 0x000120, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_Len_ReturnValue) == 0x000128, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_Greater_IntInt_ReturnValue) == 0x00012C, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_BooleanAND_ReturnValue) == 0x00012D, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_BooleanAND_ReturnValue_1) == 0x00012E, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_BooleanOR_ReturnValue) == 0x00012F, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000130, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, K2Node_Select_Default_1) == 0x000138, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_BreakVector2D_X) == 0x000148, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_BreakVector2D_Y) == 0x000150, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000158, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InputIcon_C_SetIconFromMappedKey, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00015C, "Member 'WBP_InputIcon_C_SetIconFromMappedKey::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

}

