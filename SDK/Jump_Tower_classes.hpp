#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Jump_Tower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Jump_Tower.Jump_Tower_C
// 0x0070 (0x06F0 - 0x0680)
class AJump_Tower_C final : public ACharacter
{
public:
	uint8                                         Pad_3543[0x8];                                     // 0x0678(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Wave5_Cue;                                         // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          JumpEnd_Overlap_Zone;                              // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Jumpzone_Detect_Zone;                              // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          JumpStart_Overlap_Zone;                            // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Jar3;                                           // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Jump_TL__Direction_1051A2414E73BD5D173EEFAEB37ED970; // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3544[0x7];                                     // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Jump_TL;                                           // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            JumpZone_TL__Direction_28F2ABEA42E08A397329F19ECCD08E59; // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3545[0x7];                                     // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     JumpZone_TL;                                       // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APENGUIN_BP_C*                          Penguin;                                           // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Giant_Jump_;                                       // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Giant_Zone_;                                       // 0x06E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_Jump_Tower(int32 EntryPoint);
	void Jump_TL__DetectEvent__EventFunc();
	void Jump_TL__FinishedFunc();
	void Jump_TL__UpdateFunc();
	void JumpTower_Reset();
	void JumpZone_TL__DetectEvent__EventFunc();
	void JumpZone_TL__FinishedFunc();
	void JumpZone_TL__UpdateFunc();
	void OnLanded(const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Jump_Tower_C">();
	}
	static class AJump_Tower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AJump_Tower_C>();
	}
};
static_assert(alignof(AJump_Tower_C) == 0x000010, "Wrong alignment on AJump_Tower_C");
static_assert(sizeof(AJump_Tower_C) == 0x0006F0, "Wrong size on AJump_Tower_C");
static_assert(offsetof(AJump_Tower_C, UberGraphFrame) == 0x000680, "Member 'AJump_Tower_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Wave5_Cue) == 0x000688, "Member 'AJump_Tower_C::Wave5_Cue' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, JumpEnd_Overlap_Zone) == 0x000690, "Member 'AJump_Tower_C::JumpEnd_Overlap_Zone' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Jumpzone_Detect_Zone) == 0x000698, "Member 'AJump_Tower_C::Jumpzone_Detect_Zone' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, JumpStart_Overlap_Zone) == 0x0006A0, "Member 'AJump_Tower_C::JumpStart_Overlap_Zone' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Cylinder) == 0x0006A8, "Member 'AJump_Tower_C::Cylinder' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, SM_Jar3) == 0x0006B0, "Member 'AJump_Tower_C::SM_Jar3' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Jump_TL__Direction_1051A2414E73BD5D173EEFAEB37ED970) == 0x0006B8, "Member 'AJump_Tower_C::Jump_TL__Direction_1051A2414E73BD5D173EEFAEB37ED970' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Jump_TL) == 0x0006C0, "Member 'AJump_Tower_C::Jump_TL' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, JumpZone_TL__Direction_28F2ABEA42E08A397329F19ECCD08E59) == 0x0006C8, "Member 'AJump_Tower_C::JumpZone_TL__Direction_28F2ABEA42E08A397329F19ECCD08E59' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, JumpZone_TL) == 0x0006D0, "Member 'AJump_Tower_C::JumpZone_TL' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Penguin) == 0x0006D8, "Member 'AJump_Tower_C::Penguin' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Giant_Jump_) == 0x0006E0, "Member 'AJump_Tower_C::Giant_Jump_' has a wrong offset!");
static_assert(offsetof(AJump_Tower_C, Giant_Zone_) == 0x0006E1, "Member 'AJump_Tower_C::Giant_Zone_' has a wrong offset!");

}

