#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tarzan_AnimBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Tarzan_AnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Tarzan_AnimBP.Tarzan_AnimBP_C
// 0x0C30 (0x0F80 - 0x0350)
class UTarzan_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2F99[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Tarzan_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0014)(HasGetValueTypeHash)
	uint8                                         Pad_2F9A[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0370(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0378(0x0008)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0380(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0420(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0448(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x0490(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x04D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0520(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0540(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0588(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x05D0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0618(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0638(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0680(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x06C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0710(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0730(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0758(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0778(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0840(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0888(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0908(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0950(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0970(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0A60(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0A80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0AA8(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0AD0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0B40(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0B60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0BA8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0BC8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0C90(0x0020)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x0CB0(0x0250)()
	bool                                          __CustomProperty_ShouldDoIKTrace_A4C3EEED4C2E3D2093A7A682AF10CDFD; // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9B[0x7];                                     // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             Character;                                         // 0x0F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            MovementComponent;                                 // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0F18(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GroundSpeed;                                       // 0x0F30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldMove;                                        // 0x0F38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFalling;                                         // 0x0F39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9C[0x2];                                     // 0x0F3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartPose_01;                                      // 0x0F3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartPose_02;                                      // 0x0F40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9D[0x4];                                     // 0x0F44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMH_Tarzan_BP_C*                        As_MH_Tarzan_BP;                                   // 0x0F48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         StartPose;                                         // 0x0F50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         JumpMotion;                                        // 0x0F54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAlpha_Anim;                                    // 0x0F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LockLocation;                                      // 0x0F60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Tarzan_AnimBP_AnimGraphNode_TransitionResult_319983754B07A6B31E5270BA14BD8E5A();
	void ExecuteUbergraph_Tarzan_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tarzan_AnimBP_C">();
	}
	static class UTarzan_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTarzan_AnimBP_C>();
	}
};
static_assert(alignof(UTarzan_AnimBP_C) == 0x000010, "Wrong alignment on UTarzan_AnimBP_C");
static_assert(sizeof(UTarzan_AnimBP_C) == 0x000F80, "Wrong size on UTarzan_AnimBP_C");
static_assert(offsetof(UTarzan_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UTarzan_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, __AnimBlueprintMutables) == 0x000358, "Member 'UTarzan_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000370, "Member 'UTarzan_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimBlueprintExtension_Base) == 0x000378, "Member 'UTarzan_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000380, "Member 'UTarzan_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0003A8, "Member 'UTarzan_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0003D0, "Member 'UTarzan_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0003F8, "Member 'UTarzan_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000420, "Member 'UTarzan_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000448, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_BlendListByInt_2) == 0x000490, "Member 'UTarzan_AnimBP_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0004D8, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateResult_5) == 0x000520, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000540, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000588, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_BlendListByInt_1) == 0x0005D0, "Member 'UTarzan_AnimBP_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000618, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000638, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000680, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x0006C8, "Member 'UTarzan_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000710, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x000730, "Member 'UTarzan_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000758, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x000778, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_Slot) == 0x000840, "Member 'UTarzan_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x000888, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000908, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000950, "Member 'UTarzan_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000970, "Member 'UTarzan_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000A60, "Member 'UTarzan_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000A80, "Member 'UTarzan_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000AA8, "Member 'UTarzan_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000AD0, "Member 'UTarzan_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000B40, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x000B60, "Member 'UTarzan_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateResult) == 0x000BA8, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_StateMachine) == 0x000BC8, "Member 'UTarzan_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_Root) == 0x000C90, "Member 'UTarzan_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, AnimGraphNode_LookAt) == 0x000CB0, "Member 'UTarzan_AnimBP_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, __CustomProperty_ShouldDoIKTrace_A4C3EEED4C2E3D2093A7A682AF10CDFD) == 0x000F00, "Member 'UTarzan_AnimBP_C::__CustomProperty_ShouldDoIKTrace_A4C3EEED4C2E3D2093A7A682AF10CDFD' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, Character) == 0x000F08, "Member 'UTarzan_AnimBP_C::Character' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, MovementComponent) == 0x000F10, "Member 'UTarzan_AnimBP_C::MovementComponent' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, Velocity) == 0x000F18, "Member 'UTarzan_AnimBP_C::Velocity' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, GroundSpeed) == 0x000F30, "Member 'UTarzan_AnimBP_C::GroundSpeed' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, ShouldMove) == 0x000F38, "Member 'UTarzan_AnimBP_C::ShouldMove' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, IsFalling) == 0x000F39, "Member 'UTarzan_AnimBP_C::IsFalling' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, StartPose_01) == 0x000F3C, "Member 'UTarzan_AnimBP_C::StartPose_01' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, StartPose_02) == 0x000F40, "Member 'UTarzan_AnimBP_C::StartPose_02' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, As_MH_Tarzan_BP) == 0x000F48, "Member 'UTarzan_AnimBP_C::As_MH_Tarzan_BP' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, StartPose) == 0x000F50, "Member 'UTarzan_AnimBP_C::StartPose' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, JumpMotion) == 0x000F54, "Member 'UTarzan_AnimBP_C::JumpMotion' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, LookAlpha_Anim) == 0x000F58, "Member 'UTarzan_AnimBP_C::LookAlpha_Anim' has a wrong offset!");
static_assert(offsetof(UTarzan_AnimBP_C, LockLocation) == 0x000F60, "Member 'UTarzan_AnimBP_C::LockLocation' has a wrong offset!");

}

