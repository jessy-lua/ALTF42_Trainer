#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SaveGameManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SaveGameManager.BP_SaveGameManager_C.AnySaveGameExists
// 0x0048 (0x0048 - 0x0000)
struct BP_SaveGameManager_C_AnySaveGameExists final
{
public:
	class FString                                 SlotPrefix;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSaveGameExists;                                   // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F83[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F84[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_AnySaveGameExists) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_AnySaveGameExists");
static_assert(sizeof(BP_SaveGameManager_C_AnySaveGameExists) == 0x000048, "Wrong size on BP_SaveGameManager_C_AnySaveGameExists");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, SlotPrefix) == 0x000000, "Member 'BP_SaveGameManager_C_AnySaveGameExists::SlotPrefix' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, Amount) == 0x000010, "Member 'BP_SaveGameManager_C_AnySaveGameExists::Amount' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, UserIndex) == 0x000014, "Member 'BP_SaveGameManager_C_AnySaveGameExists::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, bSaveGameExists) == 0x000018, "Member 'BP_SaveGameManager_C_AnySaveGameExists::bSaveGameExists' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, Temp_int_Variable) == 0x00001C, "Member 'BP_SaveGameManager_C_AnySaveGameExists::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_SaveGameManager_C_AnySaveGameExists::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_SaveGameManager_C_AnySaveGameExists::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_SaveGameManager_C_AnySaveGameExists::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000041, "Member 'BP_SaveGameManager_C_AnySaveGameExists::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_AnySaveGameExists, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_SaveGameManager_C_AnySaveGameExists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.CreateNewGame
// 0x0030 (0x0030 - 0x0000)
struct BP_SaveGameManager_C_CreateNewGame final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LevelName;                                         // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F85[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGame_SaveGameObject;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_CreateNewGame) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_CreateNewGame");
static_assert(sizeof(BP_SaveGameManager_C_CreateNewGame) == 0x000030, "Wrong size on BP_SaveGameManager_C_CreateNewGame");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, SlotName) == 0x000000, "Member 'BP_SaveGameManager_C_CreateNewGame::SlotName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, UserIndex) == 0x000010, "Member 'BP_SaveGameManager_C_CreateNewGame::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, LevelName) == 0x000014, "Member 'BP_SaveGameManager_C_CreateNewGame::LevelName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, bSuccess) == 0x00001C, "Member 'BP_SaveGameManager_C_CreateNewGame::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, CallFunc_SaveGameToSlot_ReturnValue) == 0x00001D, "Member 'BP_SaveGameManager_C_CreateNewGame::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, CallFunc_LoadGame_SaveGameObject) == 0x000020, "Member 'BP_SaveGameManager_C_CreateNewGame::CallFunc_LoadGame_SaveGameObject' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, CallFunc_DeleteGameInSlot_ReturnValue) == 0x000028, "Member 'BP_SaveGameManager_C_CreateNewGame::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_CreateNewGame, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000029, "Member 'BP_SaveGameManager_C_CreateNewGame::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.GetLatestSaveGame
// 0x0098 (0x0098 - 0x0000)
struct BP_SaveGameManager_C_GetLatestSaveGame final
{
public:
	class FString                                 SlotPrefix;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F86[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotName;                                          // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LatestSaveSlot;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              LatestSaveTimestamp;                               // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F87[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F88[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadSaveMetaData_SaveGameObject;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F89[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomSaveGameObject_C*             K2Node_DynamicCast_AsBP_Custom_Save_Game_Object;   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue;     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8A[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_GetLatestSaveGame) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_GetLatestSaveGame");
static_assert(sizeof(BP_SaveGameManager_C_GetLatestSaveGame) == 0x000098, "Wrong size on BP_SaveGameManager_C_GetLatestSaveGame");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, SlotPrefix) == 0x000000, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::SlotPrefix' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, UserIndex) == 0x000010, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, Amount) == 0x000014, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::Amount' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, Success) == 0x000018, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::Success' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, SlotName) == 0x000020, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::SlotName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, LatestSaveSlot) == 0x000030, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::LatestSaveSlot' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, LatestSaveTimestamp) == 0x000040, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::LatestSaveTimestamp' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_IsEmpty_ReturnValue) == 0x000048, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, Temp_int_Variable) == 0x00004C, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_LoadSaveMetaData_SaveGameObject) == 0x000078, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_LoadSaveMetaData_SaveGameObject' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000080, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, K2Node_DynamicCast_AsBP_Custom_Save_Game_Object) == 0x000088, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::K2Node_DynamicCast_AsBP_Custom_Save_Game_Object' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000091, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_Greater_DateTimeDateTime_ReturnValue) == 0x000092, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_Greater_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLatestSaveGame, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_SaveGameManager_C_GetLatestSaveGame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.GetLevelFromCustomSaveGameObject
// 0x0018 (0x0018 - 0x0000)
struct BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CustomSaveGameObject_C*             K2Node_DynamicCast_AsBP_Custom_Save_Game_Object;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject");
static_assert(sizeof(BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject) == 0x000018, "Wrong size on BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject");
static_assert(offsetof(BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject, LevelName) == 0x000000, "Member 'BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject::LevelName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject, K2Node_DynamicCast_AsBP_Custom_Save_Game_Object) == 0x000008, "Member 'BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject::K2Node_DynamicCast_AsBP_Custom_Save_Game_Object' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_SaveGameManager_C_GetLevelFromCustomSaveGameObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.Initialize
// 0x0028 (0x0028 - 0x0000)
struct BP_SaveGameManager_C_Initialize final
{
public:
	class UBP_CustomSaveGameObject_C*             CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_Initialize) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_Initialize");
static_assert(sizeof(BP_SaveGameManager_C_Initialize) == 0x000028, "Wrong size on BP_SaveGameManager_C_Initialize");
static_assert(offsetof(BP_SaveGameManager_C_Initialize, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_SaveGameManager_C_Initialize::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_Initialize, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'BP_SaveGameManager_C_Initialize::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_Initialize, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000010, "Member 'BP_SaveGameManager_C_Initialize::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SaveGameManager_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.LoadGame
// 0x0050 (0x0050 - 0x0000)
struct BP_SaveGameManager_C_LoadGame final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Param_SaveGameObject;                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetLevelFromCustomSaveGameObject_LevelName; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_LoadGame) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_LoadGame");
static_assert(sizeof(BP_SaveGameManager_C_LoadGame) == 0x000050, "Wrong size on BP_SaveGameManager_C_LoadGame");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, SlotName) == 0x000000, "Member 'BP_SaveGameManager_C_LoadGame::SlotName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, UserIndex) == 0x000010, "Member 'BP_SaveGameManager_C_LoadGame::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, Param_SaveGameObject) == 0x000018, "Member 'BP_SaveGameManager_C_LoadGame::Param_SaveGameObject' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'BP_SaveGameManager_C_LoadGame::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, CallFunc_GetLevelFromCustomSaveGameObject_LevelName) == 0x000028, "Member 'BP_SaveGameManager_C_LoadGame::CallFunc_GetLevelFromCustomSaveGameObject_LevelName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, CallFunc_GetOuterObject_ReturnValue) == 0x000030, "Member 'BP_SaveGameManager_C_LoadGame::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000038, "Member 'BP_SaveGameManager_C_LoadGame::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadGame, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SaveGameManager_C_LoadGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.LoadSaveMetaData
// 0x0028 (0x0028 - 0x0000)
struct BP_SaveGameManager_C_LoadSaveMetaData final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Param_SaveGameObject;                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_LoadSaveMetaData) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_LoadSaveMetaData");
static_assert(sizeof(BP_SaveGameManager_C_LoadSaveMetaData) == 0x000028, "Wrong size on BP_SaveGameManager_C_LoadSaveMetaData");
static_assert(offsetof(BP_SaveGameManager_C_LoadSaveMetaData, SlotName) == 0x000000, "Member 'BP_SaveGameManager_C_LoadSaveMetaData::SlotName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadSaveMetaData, UserIndex) == 0x000010, "Member 'BP_SaveGameManager_C_LoadSaveMetaData::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadSaveMetaData, Param_SaveGameObject) == 0x000018, "Member 'BP_SaveGameManager_C_LoadSaveMetaData::Param_SaveGameObject' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_LoadSaveMetaData, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'BP_SaveGameManager_C_LoadSaveMetaData::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.SaveGame
// 0x0018 (0x0018 - 0x0000)
struct BP_SaveGameManager_C_SaveGame final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_SaveGame) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_SaveGame");
static_assert(sizeof(BP_SaveGameManager_C_SaveGame) == 0x000018, "Wrong size on BP_SaveGameManager_C_SaveGame");
static_assert(offsetof(BP_SaveGameManager_C_SaveGame, SlotName) == 0x000000, "Member 'BP_SaveGameManager_C_SaveGame::SlotName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SaveGame, UserIndex) == 0x000010, "Member 'BP_SaveGameManager_C_SaveGame::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SaveGame, bSuccess) == 0x000014, "Member 'BP_SaveGameManager_C_SaveGame::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SaveGame, CallFunc_SaveGameToSlot_ReturnValue) == 0x000015, "Member 'BP_SaveGameManager_C_SaveGame::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.SetCustomSaveGameObject
// 0x0038 (0x0038 - 0x0000)
struct BP_SaveGameManager_C_SetCustomSaveGameObject final
{
public:
	class USaveGame*                              Param_SaveGameObject;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CustomSaveGameObject_C*             K2Node_DynamicCast_AsBP_Custom_Save_Game_Object;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_SetCustomSaveGameObject) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_SetCustomSaveGameObject");
static_assert(sizeof(BP_SaveGameManager_C_SetCustomSaveGameObject) == 0x000038, "Wrong size on BP_SaveGameManager_C_SetCustomSaveGameObject");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObject, Param_SaveGameObject) == 0x000000, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObject::Param_SaveGameObject' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObject, K2Node_DynamicCast_AsBP_Custom_Save_Game_Object) == 0x000008, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObject::K2Node_DynamicCast_AsBP_Custom_Save_Game_Object' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObject, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObject, CallFunc_GetOuterObject_ReturnValue) == 0x000018, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObject::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObject, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000020, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObject::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObject, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.SetCustomSaveGameObjectData
// 0x0070 (0x0070 - 0x0000)
struct BP_SaveGameManager_C_SetCustomSaveGameObjectData final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentPlayTime_PlayTimeInSeconds;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCurrentLevel_CurrentLevelName;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_SetCustomSaveGameObjectData) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_SetCustomSaveGameObjectData");
static_assert(sizeof(BP_SaveGameManager_C_SetCustomSaveGameObjectData) == 0x000070, "Wrong size on BP_SaveGameManager_C_SetCustomSaveGameObjectData");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, Temp_name_Variable) == 0x000000, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, Temp_name_Variable_1) == 0x000008, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, Temp_name_Variable_2) == 0x000010, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000018, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, Temp_name_Variable_3) == 0x00001C, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, Temp_int_Variable) == 0x000024, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, K2Node_Select_Default) == 0x000028, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, CallFunc_Now_ReturnValue) == 0x000030, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, CallFunc_GetOuterObject_ReturnValue) == 0x000038, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000040, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, CallFunc_GetCurrentPlayTime_PlayTimeInSeconds) == 0x000058, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::CallFunc_GetCurrentPlayTime_PlayTimeInSeconds' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, CallFunc_GetCurrentLevel_CurrentLevelName) == 0x000060, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::CallFunc_GetCurrentLevel_CurrentLevelName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetCustomSaveGameObjectData, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_SaveGameManager_C_SetCustomSaveGameObjectData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SaveGameManager.BP_SaveGameManager_C.SetInitialCustomSaveGameObjectData
// 0x0040 (0x0040 - 0x0000)
struct BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData) == 0x000008, "Wrong alignment on BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData");
static_assert(sizeof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData) == 0x000040, "Wrong size on BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, AreaName) == 0x000000, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::AreaName' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, Temp_int_Variable) == 0x000008, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, Temp_name_Variable) == 0x00000C, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, Temp_name_Variable_1) == 0x000014, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, Temp_name_Variable_2) == 0x00001C, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, Temp_name_Variable_3) == 0x000024, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00002C, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, K2Node_Select_Default) == 0x000030, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData, CallFunc_Now_ReturnValue) == 0x000038, "Member 'BP_SaveGameManager_C_SetInitialCustomSaveGameObjectData::CallFunc_Now_ReturnValue' has a wrong offset!");

}

