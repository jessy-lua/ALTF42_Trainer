#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ComboBoxBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FFontStyle_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "WBP_InteractableUserWidget_classes.hpp"
#include "UMG_structs.hpp"
#include "EWidgetStyleState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ComboBoxBase.WBP_ComboBoxBase_C
// 0x0330 (0x07B0 - 0x0480)
class UWBP_ComboBoxBase_C final : public UWBP_InteractableUserWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_ComboBoxBase_C;                 // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class FText>                           OptionsArray;                                      // 0x0488(0x0010)(Edit, BlueprintVisible)
	int32                                         ActiveOptionIndex;                                 // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F30[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnOptionChanged;                                   // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         DefaultOptionIndex;                                // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F31[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UTexture2D>>      OptionsImageArray;                                 // 0x04B8(0x0010)(Edit, BlueprintVisible)
	struct FLinearColor                           LeftBackgroundColor;                               // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightBackgroundColor;                              // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LeftHighlightColor;                                // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightHighlightColor;                               // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LeftActiveColor;                                   // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightActiveColor;                                  // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LeftDisabledColor;                                 // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightDisabledColor;                                // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextHighlightColor;                                // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextActiveColor;                                   // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextDisabledColor;                                 // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerTextColor;                                    // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerTextHighlightColor;                           // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighlightedItemIndex;                              // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadedValue;                                       // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCustomApplyMethod;                               // 0x05B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UComboBoxString*                        ComboBoxStringRef;                                 // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UButton*                                HoverButtonRef;                                    // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                OuterBorderRef;                                    // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                LeftBorderRef;                                     // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                RightBorderRef;                                    // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             OptionNameTextRef;                                 // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxRef;                                        // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_ComboBoxItemBase_C*>        ComboBoxItems;                                     // 0x05F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           InnerTextActiveColor;                              // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerTextDisabledColor;                            // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DownArrowColor;                                    // 0x0628(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DownArrowHighlightColor;                           // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DownArrowActiveColor;                              // 0x0648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DownArrowDisabledColor;                            // 0x0658(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ListSelectedItemColor;                             // 0x0668(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ListItemHighlightColor;                            // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ComboBoxItemClass;                                 // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEditModeActive;                                 // 0x0690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F32[0x3];                                     // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DefaultListItemColor;                              // 0x0694(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F33[0x4];                                     // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFFontStyle                            TextFontStyle;                                     // 0x06A8(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FFFontStyle                            TextValueFontStyle;                                // 0x0728(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UPDA_ComboBoxStyle_C*                   StyleData;                                         // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateComboBoxItemBorderColor(const struct FLinearColor& InBrushColor);
	void SetWidgetState(EWidgetStyleState Param_WidgetState);
	void SetVisibilityOfAllComboBoxItems(ESlateVisibility InVisibility);
	void SetupOptionNameText();
	void SetSettingsValue();
	void SetDefaultOptionIndex();
	void SetCurrentIndex(int32 InIndex, bool bPlaySound);
	void SetCurrentImage(int32 Param_Index);
	void SetChangeOptionsButtonVisibility(bool bIsVisible);
	void SetActiveOption(int32 InIndex, bool bOptionChangedIgnore, bool bPlaySound);
	void ResetSettingsValue();
	void ResetComboBoxItems();
	void PreConstruct(bool IsDesignTime);
	void OverrideWidgetStyleFromConfig();
	void OnSetupComboBox();
	void OnSetHighlightEffect(EWidgetStyleState Param_HighlightState, bool bPlaySound);
	void OnResetFocusPathDoOnce();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnPressedUp(const struct FKeyEvent& KeyEvent);
	void OnPressedSelect(const struct FKeyEvent& KeyEvent);
	void OnPressedDown(const struct FKeyEvent& KeyEvent);
	void OnPressedBack(const struct FKeyEvent& KeyEvent);
	void OnPlayChangeSound();
	void OnOptionChanged__DelegateSignature(int32 ActiveIndex, class UWBP_ComboBoxBase_C* ComboBox);
	void OnHoverButtonClicked();
	void OnHighlightedItemChanged(int32 Param_Index);
	void OnCustomApplyMethod__DelegateSignature(class UWBP_ComboBoxBase_C* ComboBox);
	void OnComboBoxToggle();
	class UWidget* OnComboBoxStringGenerateWidget(const class FString& Item);
	void OnComboBoxSelectionChanged(const class FString& SelectedItem, ESelectInfo SelectInfo);
	void OnComboBoxItemUnhover(class UWBP_ComboBoxItemBase_C* ComboBoxItem);
	void OnComboBoxItemHover(class UWBP_ComboBoxItemBase_C* ComboBoxItem);
	void OnComboBoxItemClicked(class UWBP_ComboBoxItemBase_C* ComboBoxItem);
	void OnComboBoxClose();
	void OnButtonHovered();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	bool IsUserFocusOnSelf();
	bool IsUserFocusOnComboBoxString();
	void IsInOptionsArrayBounds(int32 InIndex, bool* bIsInBounds);
	void GetSettingsValue();
	void ExecuteUbergraph_WBP_ComboBoxBase(int32 EntryPoint);
	void CreateComboBoxItemsFromOptionsArray();
	void CreateComboBoxItems(TArray<class FString>& Array);
	void Construct();
	void ApplyWidgetStyleNormal();
	void ApplyWidgetStyleHighlighted();
	void ApplyWidgetStyleDisabled();
	void ApplyWidgetStyleActive();
	void ApplySettingsValue();
	void ApplyComboBoxStyle(class UComboBoxString* InComboBox, const struct FLinearColor& InDownArrowColor, const struct FLinearColor& InBackgroundColor, const struct FLinearColor& InSelectedListItemColor, const struct FLinearColor& InSelectedListItemHighlightColor, double InBackgroundCornerRadius);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ComboBoxBase_C">();
	}
	static class UWBP_ComboBoxBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ComboBoxBase_C>();
	}
};
static_assert(alignof(UWBP_ComboBoxBase_C) == 0x000008, "Wrong alignment on UWBP_ComboBoxBase_C");
static_assert(sizeof(UWBP_ComboBoxBase_C) == 0x0007B0, "Wrong size on UWBP_ComboBoxBase_C");
static_assert(offsetof(UWBP_ComboBoxBase_C, UberGraphFrame_WBP_ComboBoxBase_C) == 0x000480, "Member 'UWBP_ComboBoxBase_C::UberGraphFrame_WBP_ComboBoxBase_C' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, OptionsArray) == 0x000488, "Member 'UWBP_ComboBoxBase_C::OptionsArray' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, ActiveOptionIndex) == 0x000498, "Member 'UWBP_ComboBoxBase_C::ActiveOptionIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, OnOptionChanged) == 0x0004A0, "Member 'UWBP_ComboBoxBase_C::OnOptionChanged' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, DefaultOptionIndex) == 0x0004B0, "Member 'UWBP_ComboBoxBase_C::DefaultOptionIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, OptionsImageArray) == 0x0004B8, "Member 'UWBP_ComboBoxBase_C::OptionsImageArray' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, LeftBackgroundColor) == 0x0004C8, "Member 'UWBP_ComboBoxBase_C::LeftBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, RightBackgroundColor) == 0x0004D8, "Member 'UWBP_ComboBoxBase_C::RightBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, LeftHighlightColor) == 0x0004E8, "Member 'UWBP_ComboBoxBase_C::LeftHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, RightHighlightColor) == 0x0004F8, "Member 'UWBP_ComboBoxBase_C::RightHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, LeftActiveColor) == 0x000508, "Member 'UWBP_ComboBoxBase_C::LeftActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, RightActiveColor) == 0x000518, "Member 'UWBP_ComboBoxBase_C::RightActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, LeftDisabledColor) == 0x000528, "Member 'UWBP_ComboBoxBase_C::LeftDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, RightDisabledColor) == 0x000538, "Member 'UWBP_ComboBoxBase_C::RightDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, TextColor) == 0x000548, "Member 'UWBP_ComboBoxBase_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, TextHighlightColor) == 0x000558, "Member 'UWBP_ComboBoxBase_C::TextHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, TextActiveColor) == 0x000568, "Member 'UWBP_ComboBoxBase_C::TextActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, TextDisabledColor) == 0x000578, "Member 'UWBP_ComboBoxBase_C::TextDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, InnerTextColor) == 0x000588, "Member 'UWBP_ComboBoxBase_C::InnerTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, InnerTextHighlightColor) == 0x000598, "Member 'UWBP_ComboBoxBase_C::InnerTextHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, HighlightedItemIndex) == 0x0005A8, "Member 'UWBP_ComboBoxBase_C::HighlightedItemIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, LoadedValue) == 0x0005AC, "Member 'UWBP_ComboBoxBase_C::LoadedValue' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, OnCustomApplyMethod) == 0x0005B0, "Member 'UWBP_ComboBoxBase_C::OnCustomApplyMethod' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, ComboBoxStringRef) == 0x0005C0, "Member 'UWBP_ComboBoxBase_C::ComboBoxStringRef' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, HoverButtonRef) == 0x0005C8, "Member 'UWBP_ComboBoxBase_C::HoverButtonRef' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, OuterBorderRef) == 0x0005D0, "Member 'UWBP_ComboBoxBase_C::OuterBorderRef' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, LeftBorderRef) == 0x0005D8, "Member 'UWBP_ComboBoxBase_C::LeftBorderRef' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, RightBorderRef) == 0x0005E0, "Member 'UWBP_ComboBoxBase_C::RightBorderRef' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, OptionNameTextRef) == 0x0005E8, "Member 'UWBP_ComboBoxBase_C::OptionNameTextRef' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, SizeBoxRef) == 0x0005F0, "Member 'UWBP_ComboBoxBase_C::SizeBoxRef' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, ComboBoxItems) == 0x0005F8, "Member 'UWBP_ComboBoxBase_C::ComboBoxItems' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, InnerTextActiveColor) == 0x000608, "Member 'UWBP_ComboBoxBase_C::InnerTextActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, InnerTextDisabledColor) == 0x000618, "Member 'UWBP_ComboBoxBase_C::InnerTextDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, DownArrowColor) == 0x000628, "Member 'UWBP_ComboBoxBase_C::DownArrowColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, DownArrowHighlightColor) == 0x000638, "Member 'UWBP_ComboBoxBase_C::DownArrowHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, DownArrowActiveColor) == 0x000648, "Member 'UWBP_ComboBoxBase_C::DownArrowActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, DownArrowDisabledColor) == 0x000658, "Member 'UWBP_ComboBoxBase_C::DownArrowDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, ListSelectedItemColor) == 0x000668, "Member 'UWBP_ComboBoxBase_C::ListSelectedItemColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, ListItemHighlightColor) == 0x000678, "Member 'UWBP_ComboBoxBase_C::ListItemHighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, ComboBoxItemClass) == 0x000688, "Member 'UWBP_ComboBoxBase_C::ComboBoxItemClass' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, bIsEditModeActive) == 0x000690, "Member 'UWBP_ComboBoxBase_C::bIsEditModeActive' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, DefaultListItemColor) == 0x000694, "Member 'UWBP_ComboBoxBase_C::DefaultListItemColor' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, TextFontStyle) == 0x0006A8, "Member 'UWBP_ComboBoxBase_C::TextFontStyle' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, TextValueFontStyle) == 0x000728, "Member 'UWBP_ComboBoxBase_C::TextValueFontStyle' has a wrong offset!");
static_assert(offsetof(UWBP_ComboBoxBase_C, StyleData) == 0x0007A8, "Member 'UWBP_ComboBoxBase_C::StyleData' has a wrong offset!");

}

