#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Jump_Tower

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Jump_Tower.Jump_Tower_C.BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3642[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Jump_Tower.Jump_Tower_C.BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3643[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Jump_Tower_C_BndEvt__Jump_Tower_JumpEnd_Overlap_Zone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Jump_Tower.Jump_Tower_C.ExecuteUbergraph_Jump_Tower
// 0x0360 (0x0360 - 0x0000)
struct Jump_Tower_C_ExecuteUbergraph_Jump_Tower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3644[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0008(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3645[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0138(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3646[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3647[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3648[0x3];                                     // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0268(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower) == 0x000008, "Wrong alignment on Jump_Tower_C_ExecuteUbergraph_Jump_Tower");
static_assert(sizeof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower) == 0x000360, "Wrong size on Jump_Tower_C_ExecuteUbergraph_Jump_Tower");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, EntryPoint) == 0x000000, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::EntryPoint' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_Event_Hit) == 0x000008, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0000F0, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0000F8, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000100, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000118, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000120, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000128, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000130, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000134, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000138, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000220, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000228, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000230, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000238, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_IsOverlappingActor_ReturnValue) == 0x000241, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_Not_PreBool_ReturnValue) == 0x000242, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_BooleanAND_ReturnValue) == 0x000243, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, Temp_bool_IsClosed_Variable_1) == 0x000244, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000248, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OtherActor) == 0x000250, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OtherComp) == 0x000258, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000260, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_bFromSweep) == 0x000264, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, K2Node_ComponentBoundEvent_SweepResult) == 0x000268, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x000350, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Jump_Tower_C_ExecuteUbergraph_Jump_Tower, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000358, "Member 'Jump_Tower_C_ExecuteUbergraph_Jump_Tower::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function Jump_Tower.Jump_Tower_C.OnLanded
// 0x00E8 (0x00E8 - 0x0000)
struct Jump_Tower_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Jump_Tower_C_OnLanded) == 0x000008, "Wrong alignment on Jump_Tower_C_OnLanded");
static_assert(sizeof(Jump_Tower_C_OnLanded) == 0x0000E8, "Wrong size on Jump_Tower_C_OnLanded");
static_assert(offsetof(Jump_Tower_C_OnLanded, Hit) == 0x000000, "Member 'Jump_Tower_C_OnLanded::Hit' has a wrong offset!");

}

