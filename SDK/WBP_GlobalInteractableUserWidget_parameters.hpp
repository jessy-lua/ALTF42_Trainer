#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GlobalInteractableUserWidget

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "EInputDeviceType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "EMenuInputAction_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "UMG_structs.hpp"
#include "FFontStyle_structs.hpp"


namespace SDK::Params
{

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.ExecuteUbergraph_WBP_GlobalInteractableUserWidget
// 0x02A0 (0x02A0 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3806[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_9;                     // 0x0008(0x0040)()
	bool                                          K2Node_CustomEvent_bAnyKeyReleased;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3807[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_8;                     // 0x0050(0x0040)()
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_7;                     // 0x0090(0x0040)()
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_6;                     // 0x00D0(0x0040)()
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_5;                     // 0x0110(0x0040)()
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_4;                     // 0x0150(0x0040)()
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_3;                     // 0x0190(0x0040)()
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_2;                     // 0x01D0(0x0040)()
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent_1;                     // 0x0210(0x0040)()
	class UPDA_MenuSystemConfig_C*                CallFunc_GetMenuSystemConfigFromLibrary_MenuSystemConfig; // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent;                       // 0x0258(0x0040)()
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget) == 0x0002A0, "Wrong size on WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, EntryPoint) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_Event_IsDesignTime) == 0x000006, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_9) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_9' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_bAnyKeyReleased) == 0x000048, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_bAnyKeyReleased' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, Temp_bool_Has_Been_Initd_Variable_1) == 0x000049, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_8) == 0x000050, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_8' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_7) == 0x000090, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_7' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_6) == 0x0000D0, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_6' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_5) == 0x000110, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_5' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_4) == 0x000150, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_4' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_3) == 0x000190, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_2) == 0x0001D0, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent_1) == 0x000210, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, CallFunc_GetMenuSystemConfigFromLibrary_MenuSystemConfig) == 0x000250, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::CallFunc_GetMenuSystemConfigFromLibrary_MenuSystemConfig' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, K2Node_CustomEvent_KeyEvent) == 0x000258, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::K2Node_CustomEvent_KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000298, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget, Temp_bool_IsClosed_Variable_1) == 0x000299, "Member 'WBP_GlobalInteractableUserWidget_C_ExecuteUbergraph_WBP_GlobalInteractableUserWidget::Temp_bool_IsClosed_Variable_1' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.GetAllowNavigation
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_GetAllowNavigation final
{
public:
	bool                                          Param_bAllowNavigation;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_GetAllowNavigation) == 0x000001, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_GetAllowNavigation");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_GetAllowNavigation) == 0x000001, "Wrong size on WBP_GlobalInteractableUserWidget_C_GetAllowNavigation");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetAllowNavigation, Param_bAllowNavigation) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_GetAllowNavigation::Param_bAllowNavigation' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.GetLastInteractingLocalPlayerIndex
// 0x0010 (0x0010 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex final
{
public:
	int32                                         LocalPlayerControllerIndex;                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3808[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex) == 0x000010, "Wrong size on WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex, LocalPlayerControllerIndex) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex::LocalPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex, CallFunc_GetOwningContainer_OwningContainer) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_GetLastInteractingLocalPlayerIndex::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.GetOwningContainer
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_GetOwningContainer final
{
public:
	class UWBP_MenuContainer_C*                   OwningContainer;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_MenuContainer_C*>           CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3809[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   K2Node_DynamicCast_AsWBP_Menu_Container;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_GetOwningContainer");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_GetOwningContainer");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, OwningContainer) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, K2Node_DynamicCast_AsWBP_Menu_Container) == 0x000020, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::K2Node_DynamicCast_AsWBP_Menu_Container' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000039, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetOwningContainer, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'WBP_GlobalInteractableUserWidget_C_GetOwningContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.GetThisWidgetIsMenu
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_GetThisWidgetIsMenu final
{
public:
	bool                                          bIsMenu;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_GetThisWidgetIsMenu) == 0x000001, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_GetThisWidgetIsMenu");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_GetThisWidgetIsMenu) == 0x000001, "Wrong size on WBP_GlobalInteractableUserWidget_C_GetThisWidgetIsMenu");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_GetThisWidgetIsMenu, bIsMenu) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_GetThisWidgetIsMenu::bIsMenu' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.HideMouseCursor
// 0x0068 (0x0068 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_HideMouseCursor final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380D[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_1;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_HideMouseCursor");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor) == 0x000068, "Wrong size on WBP_GlobalInteractableUserWidget_C_HideMouseCursor");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_GetMousePosition_LocationX) == 0x000034, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_GetMousePosition_LocationY) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_GetMousePosition_ReturnValue) == 0x00003C, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_FTrunc_ReturnValue_1) == 0x000044, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000050, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_FTrunc_A_ImplicitCast) == 0x000058, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_HideMouseCursor, CallFunc_FTrunc_A_ImplicitCast_1) == 0x000060, "Member 'WBP_GlobalInteractableUserWidget_C_HideMouseCursor::CallFunc_FTrunc_A_ImplicitCast_1' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.KeyDown
// 0x07F8 (0x07F8 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_KeyDown final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              KeyEvent;                                          // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bPassBlackListedKeysToOtherMenuLayers;             // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380F[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            ReturnValue;                                       // 0x0080(0x00B8)(Parm, OutParm, ReturnParm)
	EInputDeviceType                              Temp_byte_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDeviceType                              Temp_byte_Variable_1;                              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3810[0x5];                                     // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_1;     // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_2;     // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0158(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDeviceType                              K2Node_Select_Default;                             // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3811[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0178(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue_1;                     // 0x0230(0x0018)(HasGetValueTypeHash)
	EUINavigation                                 CallFunc_KeyToUINavigation_UINavigation;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3812[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_KeyToUINavigation_EnhancedActionKeyMapping; // 0x0250(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_KeyToUINavigation_bIsKeyPressed;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3813[0x5];                                     // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x02A8(0x00B8)()
	int32                                         CallFunc_GetUserIndex_ReturnValue;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3814[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x0368(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0420(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_3;                    // 0x04D8(0x00B8)()
	bool                                          Temp_bool_Variable_2;                              // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3815[0x7];                                     // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0598(0x00B8)()
	class UWBP_InteractableUserWidget_C*          K2Node_DynamicCast_AsWBP_Interactable_User_Widget; // 0x0650(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3816[0x7];                                     // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InteractableMenu_C*                K2Node_DynamicCast_AsWBP_Interactable_Menu;        // 0x0660(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3817[0x7];                                     // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_3;     // 0x0670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_4;     // 0x0678(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PassInputEventToOtherMenuLayer_InputHandled; // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PassInputEventToOtherMenuLayer_InputHandled_1; // 0x0681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3818[0x6];                                     // 0x0682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_Select_Default_1;                           // 0x0688(0x00B8)()
	struct FEventReply                            K2Node_Select_Default_2;                           // 0x0740(0x00B8)()
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_KeyDown) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_KeyDown");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_KeyDown) == 0x0007F8, "Wrong size on WBP_GlobalInteractableUserWidget_C_KeyDown");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, Geometry) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::Geometry' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, KeyEvent) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, bPassBlackListedKeysToOtherMenuLayers) == 0x000078, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::bPassBlackListedKeysToOtherMenuLayers' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, ReturnValue) == 0x000080, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, Temp_byte_Variable) == 0x000138, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, Temp_byte_Variable_1) == 0x000139, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, Temp_bool_Variable) == 0x00013A, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetOwningContainer_OwningContainer) == 0x000140, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetOwningContainer_OwningContainer_1) == 0x000148, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetOwningContainer_OwningContainer_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetOwningContainer_OwningContainer_2) == 0x000150, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetOwningContainer_OwningContainer_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetKey_ReturnValue) == 0x000158, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000170, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_Select_Default) == 0x000171, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_Handled_ReturnValue) == 0x000178, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetKey_ReturnValue_1) == 0x000230, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_KeyToUINavigation_UINavigation) == 0x000248, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_KeyToUINavigation_UINavigation' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_KeyToUINavigation_EnhancedActionKeyMapping) == 0x000250, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_KeyToUINavigation_EnhancedActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_KeyToUINavigation_bIsKeyPressed) == 0x0002A0, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_KeyToUINavigation_bIsKeyPressed' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, Temp_bool_Variable_1) == 0x0002A1, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_SwitchEnum_CmpSuccess) == 0x0002A2, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_Handled_ReturnValue_1) == 0x0002A8, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetUserIndex_ReturnValue) == 0x000360, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetUserIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_Handled_ReturnValue_2) == 0x000368, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_Handled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_Unhandled_ReturnValue) == 0x000420, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_Handled_ReturnValue_3) == 0x0004D8, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_Handled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, Temp_bool_Variable_2) == 0x000590, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_Unhandled_ReturnValue_1) == 0x000598, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_DynamicCast_AsWBP_Interactable_User_Widget) == 0x000650, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_DynamicCast_AsWBP_Interactable_User_Widget' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_DynamicCast_bSuccess) == 0x000658, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_DynamicCast_AsWBP_Interactable_Menu) == 0x000660, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_DynamicCast_AsWBP_Interactable_Menu' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_DynamicCast_bSuccess_1) == 0x000668, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetOwningContainer_OwningContainer_3) == 0x000670, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetOwningContainer_OwningContainer_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_GetOwningContainer_OwningContainer_4) == 0x000678, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_GetOwningContainer_OwningContainer_4' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_PassInputEventToOtherMenuLayer_InputHandled) == 0x000680, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_PassInputEventToOtherMenuLayer_InputHandled' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, CallFunc_PassInputEventToOtherMenuLayer_InputHandled_1) == 0x000681, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::CallFunc_PassInputEventToOtherMenuLayer_InputHandled_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_Select_Default_1) == 0x000688, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyDown, K2Node_Select_Default_2) == 0x000740, "Member 'WBP_GlobalInteractableUserWidget_C_KeyDown::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.KeyUp
// 0x02F8 (0x02F8 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_KeyUp final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              KeyEvent;                                          // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	EInputDeviceType                              Temp_byte_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3819[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0138(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381A[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_1;     // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_2;     // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_3;     // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_4;     // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_5;     // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_6;     // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDeviceType                              Temp_byte_Variable_1;                              // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381B[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_1;                     // 0x0198(0x0018)(HasGetValueTypeHash)
	EMenuInputAction                              CallFunc_KeyToMenuInputAction_MenuInputAction;     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381C[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_KeyToMenuInputAction_EnhancedActionKeyMapping; // 0x01B8(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_KeyToMenuInputAction_bIsKeyPressed;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381D[0x5];                                     // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_7;     // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0218(0x00B8)()
	int32                                         CallFunc_GetUserIndex_ReturnValue;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381E[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_2;                     // 0x02D8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDeviceType                              K2Node_Select_Default;                             // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_KeyUp) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_KeyUp");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_KeyUp) == 0x0002F8, "Wrong size on WBP_GlobalInteractableUserWidget_C_KeyUp");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, Geometry) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::Geometry' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, KeyEvent) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, ReturnValue) == 0x000078, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, Temp_byte_Variable) == 0x000130, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetKey_ReturnValue) == 0x000138, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_Key_IsValid_ReturnValue) == 0x000150, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer) == 0x000158, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer_1) == 0x000160, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer_2) == 0x000168, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer_3) == 0x000170, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer_4) == 0x000178, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer_4' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer_5) == 0x000180, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer_5' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer_6) == 0x000188, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer_6' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_BooleanAND_ReturnValue) == 0x000190, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, Temp_byte_Variable_1) == 0x000191, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetKey_ReturnValue_1) == 0x000198, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_KeyToMenuInputAction_MenuInputAction) == 0x0001B0, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_KeyToMenuInputAction_MenuInputAction' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_KeyToMenuInputAction_EnhancedActionKeyMapping) == 0x0001B8, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_KeyToMenuInputAction_EnhancedActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_KeyToMenuInputAction_bIsKeyPressed) == 0x000208, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_KeyToMenuInputAction_bIsKeyPressed' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, Temp_bool_Variable) == 0x000209, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, K2Node_SwitchEnum_CmpSuccess) == 0x00020A, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetOwningContainer_OwningContainer_7) == 0x000210, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetOwningContainer_OwningContainer_7' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_Handled_ReturnValue) == 0x000218, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetUserIndex_ReturnValue) == 0x0002D0, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetUserIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_GetKey_ReturnValue_2) == 0x0002D8, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_GetKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x0002F0, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_KeyUp, K2Node_Select_Default) == 0x0002F1, "Member 'WBP_GlobalInteractableUserWidget_C_KeyUp::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.MouseButtonDown
// 0x0330 (0x0330 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_MouseButtonDown final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   PressedMouseKey;                                   // 0x0168(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0180(0x0018)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0198(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_PointerEvent_GetUserIndex_ReturnValue;    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381F[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_1;     // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_2;     // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_3;     // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1; // 0x01E0(0x0018)(HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_4;     // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMenuInputAction                              CallFunc_KeyToMenuInputAction_MenuInputAction;     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3820[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_KeyToMenuInputAction_EnhancedActionKeyMapping; // 0x0208(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_KeyToMenuInputAction_bIsKeyPressed;       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3821[0x6];                                     // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0260(0x00B8)()
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_5;     // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_6;     // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer_7;     // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_MouseButtonDown");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown) == 0x000330, "Wrong size on WBP_GlobalInteractableUserWidget_C_MouseButtonDown");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, Geometry) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::Geometry' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, PressedMouseKey) == 0x000168, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::PressedMouseKey' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000180, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, K2Node_MakeStruct_InputChord) == 0x000198, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_PointerEvent_GetUserIndex_ReturnValue) == 0x0001B8, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_PointerEvent_GetUserIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer) == 0x0001C0, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer_1) == 0x0001C8, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer_2) == 0x0001D0, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer_3) == 0x0001D8, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1) == 0x0001E0, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer_4) == 0x0001F8, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer_4' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_KeyToMenuInputAction_MenuInputAction) == 0x000200, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_KeyToMenuInputAction_MenuInputAction' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_KeyToMenuInputAction_EnhancedActionKeyMapping) == 0x000208, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_KeyToMenuInputAction_EnhancedActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_KeyToMenuInputAction_bIsKeyPressed) == 0x000258, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_KeyToMenuInputAction_bIsKeyPressed' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, K2Node_SwitchEnum_CmpSuccess) == 0x000259, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000260, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer_5) == 0x000318, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer_5' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer_6) == 0x000320, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer_6' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MouseButtonDown, CallFunc_GetOwningContainer_OwningContainer_7) == 0x000328, "Member 'WBP_GlobalInteractableUserWidget_C_MouseButtonDown::CallFunc_GetOwningContainer_OwningContainer_7' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.MoveMouseCursorToDefaultPosition
// 0x0030 (0x0030 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3822[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition) == 0x000030, "Wrong size on WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_GetMousePosition_LocationX) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_GetMousePosition_LocationY) == 0x00000C, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_GetMousePosition_ReturnValue) == 0x000010, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition, CallFunc_FTrunc_ReturnValue_1) == 0x00002C, "Member 'WBP_GlobalInteractableUserWidget_C_MoveMouseCursorToDefaultPosition::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnKeyDown
// 0x0228 (0x0228 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKeyEvent                              KeyEvent;                                          // 0x0130(0x0040)(Edit, BlueprintVisible)
	struct FEventReply                            CallFunc_KeyDown_ReturnValue;                      // 0x0170(0x00B8)()
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnKeyDown");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnKeyDown) == 0x000228, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnKeyDown");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyDown, KeyEvent) == 0x000130, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyDown::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyDown, CallFunc_KeyDown_ReturnValue) == 0x000170, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyDown::CallFunc_KeyDown_ReturnValue' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnKeyUp
// 0x0228 (0x0228 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKeyEvent                              KeyEvent;                                          // 0x0130(0x0040)(Edit, BlueprintVisible)
	struct FEventReply                            CallFunc_KeyUp_ReturnValue;                        // 0x0170(0x00B8)()
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnKeyUp) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnKeyUp");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnKeyUp) == 0x000228, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnKeyUp");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyUp, KeyEvent) == 0x000130, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyUp::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnKeyUp, CallFunc_KeyUp_ReturnValue) == 0x000170, "Member 'WBP_GlobalInteractableUserWidget_C_OnKeyUp::CallFunc_KeyUp_ReturnValue' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnMouseButtonDown
// 0x0238 (0x0238 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   PressedMouseKey;                                   // 0x0168(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_MouseButtonDown_ReturnValue;              // 0x0180(0x00B8)()
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown) == 0x000238, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown, PressedMouseKey) == 0x000168, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown::PressedMouseKey' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown, CallFunc_MouseButtonDown_ReturnValue) == 0x000180, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseButtonDown::CallFunc_MouseButtonDown_ReturnValue' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnMouseMove
// 0x0258 (0x0258 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PointerEvent_GetUserIndex_ReturnValue;    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3823[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetCursorDelta_ReturnValue;  // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3824[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x01A0(0x00B8)()
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnMouseMove) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnMouseMove");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnMouseMove) == 0x000258, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnMouseMove");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, CallFunc_GetOwningContainer_OwningContainer) == 0x000168, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, CallFunc_PointerEvent_GetUserIndex_ReturnValue) == 0x000170, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::CallFunc_PointerEvent_GetUserIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, CallFunc_PointerEvent_GetCursorDelta_ReturnValue) == 0x000178, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::CallFunc_PointerEvent_GetCursorDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, CallFunc_VSize2D_ReturnValue) == 0x000188, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, CallFunc_Abs_ReturnValue) == 0x000190, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000198, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnMouseMove, K2Node_MakeStruct_EventReply) == 0x0001A0, "Member 'WBP_GlobalInteractableUserWidget_C_OnMouseMove::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedAnyKey
// 0x0048 (0x0048 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bAnyKeyReleased;                                   // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey) == 0x000048, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey, bAnyKeyReleased) == 0x000040, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedAnyKey::bAnyKeyReleased' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedApply
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedApply final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedApply) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedApply");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedApply) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedApply");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedApply, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedApply::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedBack
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedBack final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedBack) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedBack");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedBack) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedBack");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedBack, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedBack::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedDown
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedDown final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedDown) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedDown");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedDown) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedDown");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedDown, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedDown::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedExtra
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedExtra final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedExtra) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedExtra");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedExtra) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedExtra");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedExtra, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedExtra::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedLeft
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedLeft final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedLeft) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedLeft");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedLeft) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedLeft");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedLeft, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedLeft::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedReset
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedReset final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedReset) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedReset");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedReset) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedReset");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedReset, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedReset::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedRight
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedRight final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedRight) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedRight");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedRight) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedRight");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedRight, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedRight::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedSelect
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedSelect final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedSelect) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedSelect");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedSelect) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedSelect");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedSelect, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedSelect::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.OnPressedUp
// 0x0040 (0x0040 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_OnPressedUp final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_OnPressedUp) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_OnPressedUp");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_OnPressedUp) == 0x000040, "Wrong size on WBP_GlobalInteractableUserWidget_C_OnPressedUp");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_OnPressedUp, KeyEvent) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_OnPressedUp::KeyEvent' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_PreConstruct");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_PreConstruct) == 0x000001, "Wrong size on WBP_GlobalInteractableUserWidget_C_PreConstruct");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetAllowNavigation
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetAllowNavigation final
{
public:
	bool                                          Param_bAllowNavigation;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigation) == 0x000001, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetAllowNavigation");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigation) == 0x000001, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetAllowNavigation");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigation, Param_bAllowNavigation) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigation::Param_bAllowNavigation' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetAllowNavigationForAllWidgetsInMenuAndMenu
// 0x0070 (0x0070 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu final
{
public:
	bool                                          InAllowNavigation;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InDontChangeAllowNavigationOfMenu;                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3825[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3826[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InteractableUserWidget_C*          K2Node_DynamicCast_AsWBP_Interactable_User_Widget; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3827[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InteractableUserWidget_C*          K2Node_DynamicCast_AsWBP_Interactable_User_Widget_1; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3828[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InteractableUserWidget_C*          CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_InteractableMenu_C*                K2Node_DynamicCast_AsWBP_Interactable_Menu;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3829[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InteractableUserWidget_C*          CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu) == 0x000070, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, InAllowNavigation) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::InAllowNavigation' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, InDontChangeAllowNavigationOfMenu) == 0x000001, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::InDontChangeAllowNavigationOfMenu' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, K2Node_DynamicCast_AsWBP_Interactable_User_Widget) == 0x000018, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::K2Node_DynamicCast_AsWBP_Interactable_User_Widget' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, K2Node_DynamicCast_AsWBP_Interactable_User_Widget_1) == 0x000028, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::K2Node_DynamicCast_AsWBP_Interactable_User_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, K2Node_DynamicCast_AsWBP_Interactable_Menu) == 0x000048, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::K2Node_DynamicCast_AsWBP_Interactable_Menu' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowNavigationForAllWidgetsInMenuAndMenu::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetAllowPressBack
// 0x0010 (0x0010 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetAllowPressBack final
{
public:
	bool                                          bAllowPressBack;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetAllowPressBack) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetAllowPressBack");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetAllowPressBack) == 0x000010, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetAllowPressBack");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowPressBack, bAllowPressBack) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowPressBack::bAllowPressBack' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetAllowPressBack, CallFunc_GetOwningContainer_OwningContainer) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetAllowPressBack::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetCurrentInputDevice
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetCurrentInputDevice final
{
public:
	EInputDeviceType                              InputDeviceType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetCurrentInputDevice) == 0x000001, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetCurrentInputDevice");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetCurrentInputDevice) == 0x000001, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetCurrentInputDevice");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetCurrentInputDevice, InputDeviceType) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetCurrentInputDevice::InputDeviceType' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetCustomUserFocus
// 0x0010 (0x0010 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus final
{
public:
	class UWidget*                                FocusWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLocalPlayerControllers_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus) == 0x000010, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus, FocusWidget) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus::FocusWidget' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus, CallFunc_GetNumLocalPlayerControllers_ReturnValue) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus::CallFunc_GetNumLocalPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_GlobalInteractableUserWidget_C_SetCustomUserFocus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetEditableTextStyle
// 0x03D0 (0x03D0 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle final
{
public:
	class UWBP_EditableText_C*                    EditableText;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         Font;                                              // 0x0008(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextTransformPolicy                          TextTransformPolicy;                               // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382B[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0074(0x0014)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382C[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0090(0x0018)()
	class FText                                   CallFunc_TextToLower_ReturnValue;                  // 0x00A8(0x0018)()
	struct FEditableTextStyle                     K2Node_MakeStruct_EditableTextStyle;               // 0x00C0(0x02F0)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x03B0(0x0018)()
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle) == 0x000010, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle) == 0x0003D0, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, EditableText) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::EditableText' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, Font) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::Font' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, Color) == 0x000060, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::Color' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, TextTransformPolicy) == 0x000070, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::TextTransformPolicy' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, K2Node_MakeStruct_SlateColor) == 0x000074, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, CallFunc_GetText_ReturnValue) == 0x000090, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, CallFunc_TextToLower_ReturnValue) == 0x0000A8, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::CallFunc_TextToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, K2Node_MakeStruct_EditableTextStyle) == 0x0000C0, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::K2Node_MakeStruct_EditableTextStyle' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle, CallFunc_TextToUpper_ReturnValue) == 0x0003B0, "Member 'WBP_GlobalInteractableUserWidget_C_SetEditableTextStyle::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetLastInteractingLocalPlayerIndex
// 0x0010 (0x0010 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex final
{
public:
	int32                                         LastInteractingLocalPlayerIndex;                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex) == 0x000010, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex, LastInteractingLocalPlayerIndex) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex::LastInteractingLocalPlayerIndex' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex, CallFunc_GetOwningContainer_OwningContainer) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetLastInteractingLocalPlayerIndex::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetMultiplayerUserFocus
// 0x0118 (0x0118 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus final
{
public:
	class UWidget*                                FocusWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerControllerFromID_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3830[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GlobalInteractableUserWidget_C*    K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3831[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerControllerFromID_ReturnValue_1;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3832[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLocalPlayerControllers_ReturnValue; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLocalPlayerControllers_ReturnValue_1; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0075(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3833[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3834[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerControllerFromID_ReturnValue_2;  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3835[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3836[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue_2;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastInteractingLocalPlayerIndex_LocalPlayerControllerIndex; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3837[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GlobalInteractableUserWidget_C*    K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget_1; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3838[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerControllerFromID_ReturnValue_3;  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3839[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue_3;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GlobalInteractableUserWidget_C*    K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget_2; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383A[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLastInteractingLocalPlayerIndex_LocalPlayerControllerIndex_1; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383B[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLocalPlayerControllers_ReturnValue_2; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383C[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLocalPlayerControllers_ReturnValue_3; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus) == 0x000118, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, FocusWidget) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::FocusWidget' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_int_Variable) == 0x000010, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetPlayerControllerFromID_ReturnValue) == 0x000018, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetPlayerControllerFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget) == 0x000038, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_int_Variable_1) == 0x000044, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetPlayerControllerFromID_ReturnValue_1) == 0x000048, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetPlayerControllerFromID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000058, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetNumLocalPlayerControllers_ReturnValue) == 0x000064, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetNumLocalPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetNumLocalPlayerControllers_ReturnValue_1) == 0x000068, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetNumLocalPlayerControllers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_bool_Variable) == 0x000075, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetPlayerControllerFromID_ReturnValue_2) == 0x000090, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetPlayerControllerFromID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_IsValid_ReturnValue_3) == 0x000098, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0000A8, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetLastInteractingLocalPlayerIndex_LocalPlayerControllerIndex) == 0x0000B0, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetLastInteractingLocalPlayerIndex_LocalPlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget_1) == 0x0000B8, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetPlayerControllerFromID_ReturnValue_3) == 0x0000C8, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetPlayerControllerFromID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Array_Length_ReturnValue_2) == 0x0000D0, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_IsValid_ReturnValue_4) == 0x0000D4, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D5, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetComponentByClass_ReturnValue_3) == 0x0000D8, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget_2) == 0x0000E0, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetLastInteractingLocalPlayerIndex_LocalPlayerControllerIndex_1) == 0x0000EC, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetLastInteractingLocalPlayerIndex_LocalPlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, Temp_int_Variable_2) == 0x0000F4, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetNumLocalPlayerControllers_ReturnValue_2) == 0x0000F8, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetNumLocalPlayerControllers_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000FC, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000100, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000101, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Add_IntInt_ReturnValue_4) == 0x000104, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_GetNumLocalPlayerControllers_ReturnValue_3) == 0x000108, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_GetNumLocalPlayerControllers_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00010C, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000110, "Member 'WBP_GlobalInteractableUserWidget_C_SetMultiplayerUserFocus::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetSingleplayerUserFocus
// 0x0038 (0x0038 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus final
{
public:
	class UWidget*                                FocusWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GlobalInteractableUserWidget_C*    K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus) == 0x000038, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, FocusWidget) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::FocusWidget' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000018, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000020, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget) == 0x000028, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::K2Node_DynamicCast_AsWBP_Global_Interactable_User_Widget' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WBP_GlobalInteractableUserWidget_C_SetSingleplayerUserFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetTextStyle
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetTextStyle final
{
public:
	class UTextBlock*                             TextObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFFontStyle                            Font;                                              // 0x0008(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383D[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x009C(0x0014)()
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetTextStyle) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetTextStyle");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetTextStyle) == 0x0000B0, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetTextStyle");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetTextStyle, TextObject) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetTextStyle::TextObject' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetTextStyle, Font) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_SetTextStyle::Font' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetTextStyle, Color) == 0x000088, "Member 'WBP_GlobalInteractableUserWidget_C_SetTextStyle::Color' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetTextStyle, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'WBP_GlobalInteractableUserWidget_C_SetTextStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetTextStyle, K2Node_MakeStruct_SlateColor) == 0x00009C, "Member 'WBP_GlobalInteractableUserWidget_C_SetTextStyle::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.SetThisWidgetIsMenu
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_SetThisWidgetIsMenu final
{
public:
	bool                                          bIsMenu;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_SetThisWidgetIsMenu) == 0x000001, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_SetThisWidgetIsMenu");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_SetThisWidgetIsMenu) == 0x000001, "Wrong size on WBP_GlobalInteractableUserWidget_C_SetThisWidgetIsMenu");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_SetThisWidgetIsMenu, bIsMenu) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_SetThisWidgetIsMenu::bIsMenu' has a wrong offset!");

// Function WBP_GlobalInteractableUserWidget.WBP_GlobalInteractableUserWidget_C.ShowMouseCursor
// 0x0038 (0x0038 - 0x0000)
struct WBP_GlobalInteractableUserWidget_C_ShowMouseCursor final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383F[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor) == 0x000008, "Wrong alignment on WBP_GlobalInteractableUserWidget_C_ShowMouseCursor");
static_assert(sizeof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor) == 0x000038, "Wrong size on WBP_GlobalInteractableUserWidget_C_ShowMouseCursor");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlobalInteractableUserWidget_C_ShowMouseCursor, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'WBP_GlobalInteractableUserWidget_C_ShowMouseCursor::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

}

