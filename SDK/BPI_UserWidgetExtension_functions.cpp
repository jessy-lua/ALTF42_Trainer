#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_UserWidgetExtension

#include "Basic.hpp"

#include "BPI_UserWidgetExtension_classes.hpp"
#include "BPI_UserWidgetExtension_parameters.hpp"


namespace SDK
{

// Function BPI_UserWidgetExtension.BPI_UserWidgetExtension_C.OnControllerPlatformChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ControllerPlatformName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_UserWidgetExtension_C::OnControllerPlatformChange(const class FString& ControllerPlatformName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_UserWidgetExtension_C", "OnControllerPlatformChange");

	Params::BPI_UserWidgetExtension_C_OnControllerPlatformChange Parms{};

	Parms.ControllerPlatformName = std::move(ControllerPlatformName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_UserWidgetExtension.BPI_UserWidgetExtension_C.OnSwitchBetweenKeyboardAndGamepad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputDeviceType                        InputDeviceType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_UserWidgetExtension_C::OnSwitchBetweenKeyboardAndGamepad(EInputDeviceType InputDeviceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_UserWidgetExtension_C", "OnSwitchBetweenKeyboardAndGamepad");

	Params::BPI_UserWidgetExtension_C_OnSwitchBetweenKeyboardAndGamepad Parms{};

	Parms.InputDeviceType = InputDeviceType;

	UObject::ProcessEvent(Func, &Parms);
}

}

