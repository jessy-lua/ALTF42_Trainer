#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Fence_01

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Fence_01.BP_Fence_01_C
// 0x0058 (0x02F0 - 0x0298)
class ABP_Fence_01_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Fence_Rope_01;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Big_Rope;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rope_02;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Big_Rope1;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rope_01;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_02;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_03;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_04;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodenPole_01;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Fence_01_C">();
	}
	static class ABP_Fence_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Fence_01_C>();
	}
};
static_assert(alignof(ABP_Fence_01_C) == 0x000008, "Wrong alignment on ABP_Fence_01_C");
static_assert(sizeof(ABP_Fence_01_C) == 0x0002F0, "Wrong size on ABP_Fence_01_C");
static_assert(offsetof(ABP_Fence_01_C, SM_Fence_Rope_01) == 0x000298, "Member 'ABP_Fence_01_C::SM_Fence_Rope_01' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_Big_Rope) == 0x0002A0, "Member 'ABP_Fence_01_C::SM_Big_Rope' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_Rope_02) == 0x0002A8, "Member 'ABP_Fence_01_C::SM_Rope_02' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_Big_Rope1) == 0x0002B0, "Member 'ABP_Fence_01_C::SM_Big_Rope1' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_Rope_01) == 0x0002B8, "Member 'ABP_Fence_01_C::SM_Rope_01' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_WoodenPole_02) == 0x0002C0, "Member 'ABP_Fence_01_C::SM_WoodenPole_02' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_WoodenPole_03) == 0x0002C8, "Member 'ABP_Fence_01_C::SM_WoodenPole_03' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_WoodenPole_04) == 0x0002D0, "Member 'ABP_Fence_01_C::SM_WoodenPole_04' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SM_WoodenPole_01) == 0x0002D8, "Member 'ABP_Fence_01_C::SM_WoodenPole_01' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, Arrow) == 0x0002E0, "Member 'ABP_Fence_01_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_Fence_01_C, SharedRoot) == 0x0002E8, "Member 'ABP_Fence_01_C::SharedRoot' has a wrong offset!");

}

