#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COIN_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function COIN_BP.COIN_BP_C.BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3562[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'COIN_BP_C_BndEvt__COIN_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function COIN_BP.COIN_BP_C.ExecuteUbergraph_COIN_BP
// 0x01C0 (0x01C0 - 0x0000)
struct COIN_BP_C_ExecuteUbergraph_COIN_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3563[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3564[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3565[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3566[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0078(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3567[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF42_Bike_BP_Origin_C*               K2Node_DynamicCast_AsALTF42_Bike_BP_Origin;        // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3568[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3569[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALTF42_GameInstance_C*                 K2Node_DynamicCast_AsALTF42_Game_Instance;         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356A[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356B[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COIN_BP_C_ExecuteUbergraph_COIN_BP) == 0x000008, "Wrong alignment on COIN_BP_C_ExecuteUbergraph_COIN_BP");
static_assert(sizeof(COIN_BP_C_ExecuteUbergraph_COIN_BP) == 0x0001C0, "Wrong size on COIN_BP_C_ExecuteUbergraph_COIN_BP");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, EntryPoint) == 0x000000, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000030, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_MakeRotator_ReturnValue_1) == 0x000038, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, Temp_bool_IsClosed_Variable) == 0x000050, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000058, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000060, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000068, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000070, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000074, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000078, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000160, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_DynamicCast_AsALTF42_Bike_BP_Origin) == 0x000168, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_DynamicCast_AsALTF42_Bike_BP_Origin' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000178, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000181, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_GetGameInstance_ReturnValue) == 0x000188, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_DynamicCast_AsALTF42_Game_Instance) == 0x000190, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_DynamicCast_AsALTF42_Game_Instance' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0001A0, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001A8, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0001B0, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(COIN_BP_C_ExecuteUbergraph_COIN_BP, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0001B8, "Member 'COIN_BP_C_ExecuteUbergraph_COIN_BP::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

}

