#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TextInputBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FFontStyle_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EWidgetStyleState_structs.hpp"


namespace SDK::Params
{

// Function WBP_TextInputBase.WBP_TextInputBase_C.ValidateInputIsNumeric
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_TextInputBase_C_ValidateInputIsNumeric final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ModifiedText;                                      // 0x0018(0x0018)(Parm, OutParm)
	class FString                                 ResultString;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F79[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0058(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_2;            // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7A[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_ValidateInputIsNumeric) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_ValidateInputIsNumeric");
static_assert(sizeof(WBP_TextInputBase_C_ValidateInputIsNumeric) == 0x0000B8, "Wrong size on WBP_TextInputBase_C_ValidateInputIsNumeric");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, InText) == 0x000000, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::InText' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, ModifiedText) == 0x000018, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::ModifiedText' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, ResultString) == 0x000030, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::ResultString' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000058, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00007C, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x00007D, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_NotEqual_StrStr_ReturnValue_2) == 0x00007E, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_NotEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_IsNumeric_ReturnValue) == 0x00007F, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_BooleanAND_ReturnValue) == 0x000084, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_BooleanAND_ReturnValue_1) == 0x000085, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_Less_IntInt_ReturnValue) == 0x000086, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_BooleanAND_ReturnValue_2) == 0x000087, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ValidateInputIsNumeric, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'WBP_TextInputBase_C_ValidateInputIsNumeric::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.SetWidgetState
// 0x0002 (0x0002 - 0x0000)
struct WBP_TextInputBase_C_SetWidgetState final
{
public:
	EWidgetStyleState                             Param_WidgetState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_SetWidgetState) == 0x000001, "Wrong alignment on WBP_TextInputBase_C_SetWidgetState");
static_assert(sizeof(WBP_TextInputBase_C_SetWidgetState) == 0x000002, "Wrong size on WBP_TextInputBase_C_SetWidgetState");
static_assert(offsetof(WBP_TextInputBase_C_SetWidgetState, Param_WidgetState) == 0x000000, "Member 'WBP_TextInputBase_C_SetWidgetState::Param_WidgetState' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetWidgetState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_TextInputBase_C_SetWidgetState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.SetSettingsValue
// 0x0028 (0x0028 - 0x0000)
struct WBP_TextInputBase_C_SetSettingsValue final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMenuForDirtyOptions_bIsMenuDirty;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_SetSettingsValue) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_SetSettingsValue");
static_assert(sizeof(WBP_TextInputBase_C_SetSettingsValue) == 0x000028, "Wrong size on WBP_TextInputBase_C_SetSettingsValue");
static_assert(offsetof(WBP_TextInputBase_C_SetSettingsValue, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_TextInputBase_C_SetSettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetSettingsValue, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_TextInputBase_C_SetSettingsValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetSettingsValue, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WBP_TextInputBase_C_SetSettingsValue::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetSettingsValue, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_TextInputBase_C_SetSettingsValue::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetSettingsValue, CallFunc_CheckMenuForDirtyOptions_bIsMenuDirty) == 0x000021, "Member 'WBP_TextInputBase_C_SetSettingsValue::CallFunc_CheckMenuForDirtyOptions_bIsMenuDirty' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetSettingsValue, CallFunc_NotEqual_TextText_ReturnValue) == 0x000022, "Member 'WBP_TextInputBase_C_SetSettingsValue::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.SetInputTextAppearence
// 0x12D0 (0x12D0 - 0x0000)
struct WBP_TextInputBase_C_SetInputTextAppearence final
{
public:
	class UEditableTextBox*                       TextInput;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFFontStyle                            Font;                                              // 0x0008(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0014)()
	uint8                                         Pad_3F7C[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x00B0(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7D[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToLower_ReturnValue;                  // 0x00D0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00E8(0x0018)()
	struct FTextBlockStyle                        K2Node_MakeStruct_TextBlockStyle;                  // 0x0100(0x0340)()
	struct FEditableTextBoxStyle                  K2Node_MakeStruct_EditableTextBoxStyle;            // 0x0440(0x0E80)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ShadowOffset_ImplicitCast;       // 0x12C0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_SetInputTextAppearence) == 0x000010, "Wrong alignment on WBP_TextInputBase_C_SetInputTextAppearence");
static_assert(sizeof(WBP_TextInputBase_C_SetInputTextAppearence) == 0x0012D0, "Wrong size on WBP_TextInputBase_C_SetInputTextAppearence");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, TextInput) == 0x000000, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::TextInput' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, Font) == 0x000008, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::Font' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, Color) == 0x000088, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::Color' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, CallFunc_GetText_ReturnValue) == 0x0000B0, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, K2Node_SwitchEnum_CmpSuccess) == 0x0000C8, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, CallFunc_TextToLower_ReturnValue) == 0x0000D0, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::CallFunc_TextToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, CallFunc_TextToUpper_ReturnValue) == 0x0000E8, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, K2Node_MakeStruct_TextBlockStyle) == 0x000100, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::K2Node_MakeStruct_TextBlockStyle' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, K2Node_MakeStruct_EditableTextBoxStyle) == 0x000440, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::K2Node_MakeStruct_EditableTextBoxStyle' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetInputTextAppearence, K2Node_MakeStruct_ShadowOffset_ImplicitCast) == 0x0012C0, "Member 'WBP_TextInputBase_C_SetInputTextAppearence::K2Node_MakeStruct_ShadowOffset_ImplicitCast' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.SetDefaultTextFromSettingsData
// 0x0060 (0x0060 - 0x0000)
struct WBP_TextInputBase_C_SetDefaultTextFromSettingsData final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7E[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0020(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_SetDefaultTextFromSettingsData");
static_assert(sizeof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData) == 0x000060, "Wrong size on WBP_TextInputBase_C_SetDefaultTextFromSettingsData");
static_assert(offsetof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WBP_TextInputBase_C_SetDefaultTextFromSettingsData::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000008, "Member 'WBP_TextInputBase_C_SetDefaultTextFromSettingsData::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_TextInputBase_C_SetDefaultTextFromSettingsData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_TextInputBase_C_SetDefaultTextFromSettingsData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData, CallFunc_GetSettingsManager_SettingsManager) == 0x000020, "Member 'WBP_TextInputBase_C_SetDefaultTextFromSettingsData::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetDefaultTextFromSettingsData, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'WBP_TextInputBase_C_SetDefaultTextFromSettingsData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.SetAndValidateInputText
// 0x0080 (0x0080 - 0x0000)
struct WBP_TextInputBase_C_SetAndValidateInputText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InputBoxText;                                      // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	class FText                                   CallFunc_ValidateInputIsNumeric_ModifiedText;      // 0x0068(0x0018)()
};
static_assert(alignof(WBP_TextInputBase_C_SetAndValidateInputText) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_SetAndValidateInputText");
static_assert(sizeof(WBP_TextInputBase_C_SetAndValidateInputText) == 0x000080, "Wrong size on WBP_TextInputBase_C_SetAndValidateInputText");
static_assert(offsetof(WBP_TextInputBase_C_SetAndValidateInputText, InText) == 0x000000, "Member 'WBP_TextInputBase_C_SetAndValidateInputText::InText' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetAndValidateInputText, InputBoxText) == 0x000018, "Member 'WBP_TextInputBase_C_SetAndValidateInputText::InputBoxText' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetAndValidateInputText, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'WBP_TextInputBase_C_SetAndValidateInputText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetAndValidateInputText, CallFunc_GetSubstring_ReturnValue) == 0x000040, "Member 'WBP_TextInputBase_C_SetAndValidateInputText::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetAndValidateInputText, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'WBP_TextInputBase_C_SetAndValidateInputText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_SetAndValidateInputText, CallFunc_ValidateInputIsNumeric_ModifiedText) == 0x000068, "Member 'WBP_TextInputBase_C_SetAndValidateInputText::CallFunc_ValidateInputIsNumeric_ModifiedText' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.ResetSettingsValue
// 0x0020 (0x0020 - 0x0000)
struct WBP_TextInputBase_C_ResetSettingsValue final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
};
static_assert(alignof(WBP_TextInputBase_C_ResetSettingsValue) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_ResetSettingsValue");
static_assert(sizeof(WBP_TextInputBase_C_ResetSettingsValue) == 0x000020, "Wrong size on WBP_TextInputBase_C_ResetSettingsValue");
static_assert(offsetof(WBP_TextInputBase_C_ResetSettingsValue, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_TextInputBase_C_ResetSettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ResetSettingsValue, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'WBP_TextInputBase_C_ResetSettingsValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TextInputBase_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TextInputBase_C_PreConstruct");
static_assert(sizeof(WBP_TextInputBase_C_PreConstruct) == 0x000001, "Wrong size on WBP_TextInputBase_C_PreConstruct");
static_assert(offsetof(WBP_TextInputBase_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TextInputBase_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.OverrideWidgetStyleFromConfig
// 0x0280 (0x0280 - 0x0000)
struct WBP_TextInputBase_C_OverrideWidgetStyleFromConfig final
{
public:
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_1;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_2;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_3;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_4;                   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_5;                   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_6;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_7;                   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_8;                   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFFontStyle                            CallFunc_GetFontStyleByName_FontStyle;             // 0x0090(0x0080)(HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_9;                   // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_10;                  // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFFontStyle                            CallFunc_GetFontStyleByName_FontStyle_1;           // 0x0130(0x0080)(HasGetValueTypeHash)
	struct FFFontStyle                            K2Node_MakeStruct_FFontStyle;                      // 0x01B0(0x0080)(HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_11;                  // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_12;                  // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_13;                  // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_14;                  // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_15;                  // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_OverrideWidgetStyleFromConfig");
static_assert(sizeof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig) == 0x000280, "Wrong size on WBP_TextInputBase_C_OverrideWidgetStyleFromConfig");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color) == 0x000000, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_1) == 0x000010, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_2) == 0x000020, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_2' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_3) == 0x000030, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_3' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_4) == 0x000040, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_4' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_5) == 0x000050, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_5' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_6) == 0x000060, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_6' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_7) == 0x000070, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_7' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_8) == 0x000080, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_8' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetFontStyleByName_FontStyle) == 0x000090, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetFontStyleByName_FontStyle' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_9) == 0x000110, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_9' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_10) == 0x000120, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_10' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetFontStyleByName_FontStyle_1) == 0x000130, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetFontStyleByName_FontStyle_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, K2Node_MakeStruct_FFontStyle) == 0x0001B0, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::K2Node_MakeStruct_FFontStyle' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_11) == 0x000230, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_11' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_12) == 0x000240, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_12' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_13) == 0x000250, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_13' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_14) == 0x000260, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_14' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_15) == 0x000270, "Member 'WBP_TextInputBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_15' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.OnTextInputCommitted
// 0x0020 (0x0020 - 0x0000)
struct WBP_TextInputBase_C_OnTextInputCommitted final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_OnTextInputCommitted) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_OnTextInputCommitted");
static_assert(sizeof(WBP_TextInputBase_C_OnTextInputCommitted) == 0x000020, "Wrong size on WBP_TextInputBase_C_OnTextInputCommitted");
static_assert(offsetof(WBP_TextInputBase_C_OnTextInputCommitted, Text) == 0x000000, "Member 'WBP_TextInputBase_C_OnTextInputCommitted::Text' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OnTextInputCommitted, CommitMethod) == 0x000018, "Member 'WBP_TextInputBase_C_OnTextInputCommitted::CommitMethod' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.OnTextInputChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_TextInputBase_C_OnTextInputChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_TextInputBase_C_OnTextInputChanged) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_OnTextInputChanged");
static_assert(sizeof(WBP_TextInputBase_C_OnTextInputChanged) == 0x000018, "Wrong size on WBP_TextInputBase_C_OnTextInputChanged");
static_assert(offsetof(WBP_TextInputBase_C_OnTextInputChanged, Text) == 0x000000, "Member 'WBP_TextInputBase_C_OnTextInputChanged::Text' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.OnSetHighlightEffect
// 0x0002 (0x0002 - 0x0000)
struct WBP_TextInputBase_C_OnSetHighlightEffect final
{
public:
	EWidgetStyleState                             Param_HighlightState;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_OnSetHighlightEffect) == 0x000001, "Wrong alignment on WBP_TextInputBase_C_OnSetHighlightEffect");
static_assert(sizeof(WBP_TextInputBase_C_OnSetHighlightEffect) == 0x000002, "Wrong size on WBP_TextInputBase_C_OnSetHighlightEffect");
static_assert(offsetof(WBP_TextInputBase_C_OnSetHighlightEffect, Param_HighlightState) == 0x000000, "Member 'WBP_TextInputBase_C_OnSetHighlightEffect::Param_HighlightState' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OnSetHighlightEffect, bPlaySound) == 0x000001, "Member 'WBP_TextInputBase_C_OnSetHighlightEffect::bPlaySound' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.OnPressedSelect
// 0x0040 (0x0040 - 0x0000)
struct WBP_TextInputBase_C_OnPressedSelect final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_TextInputBase_C_OnPressedSelect) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_OnPressedSelect");
static_assert(sizeof(WBP_TextInputBase_C_OnPressedSelect) == 0x000040, "Wrong size on WBP_TextInputBase_C_OnPressedSelect");
static_assert(offsetof(WBP_TextInputBase_C_OnPressedSelect, KeyEvent) == 0x000000, "Member 'WBP_TextInputBase_C_OnPressedSelect::KeyEvent' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.OnOptionChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_TextInputBase_C_OnOptionChanged__DelegateSignature final
{
public:
	class FText                                   NewText;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_TextInputBase_C*                   TextInput;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_OnOptionChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_OnOptionChanged__DelegateSignature");
static_assert(sizeof(WBP_TextInputBase_C_OnOptionChanged__DelegateSignature) == 0x000020, "Wrong size on WBP_TextInputBase_C_OnOptionChanged__DelegateSignature");
static_assert(offsetof(WBP_TextInputBase_C_OnOptionChanged__DelegateSignature, NewText) == 0x000000, "Member 'WBP_TextInputBase_C_OnOptionChanged__DelegateSignature::NewText' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_OnOptionChanged__DelegateSignature, TextInput) == 0x000018, "Member 'WBP_TextInputBase_C_OnOptionChanged__DelegateSignature::TextInput' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.OnCustomApplyMethod__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TextInputBase_C_OnCustomApplyMethod__DelegateSignature final
{
public:
	class UWBP_TextInputBase_C*                   Text_Input;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_OnCustomApplyMethod__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_OnCustomApplyMethod__DelegateSignature");
static_assert(sizeof(WBP_TextInputBase_C_OnCustomApplyMethod__DelegateSignature) == 0x000008, "Wrong size on WBP_TextInputBase_C_OnCustomApplyMethod__DelegateSignature");
static_assert(offsetof(WBP_TextInputBase_C_OnCustomApplyMethod__DelegateSignature, Text_Input) == 0x000000, "Member 'WBP_TextInputBase_C_OnCustomApplyMethod__DelegateSignature::Text_Input' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.GetSettingsValue
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_TextInputBase_C_GetSettingsValue final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F80[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F81[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0040(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F82[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStringValue_Success;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F83[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringValue_Value;                     // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0098(0x0018)()
};
static_assert(alignof(WBP_TextInputBase_C_GetSettingsValue) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_GetSettingsValue");
static_assert(sizeof(WBP_TextInputBase_C_GetSettingsValue) == 0x0000B0, "Wrong size on WBP_TextInputBase_C_GetSettingsValue");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000028, "Member 'WBP_TextInputBase_C_GetSettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_TextInputBase_C_GetSettingsValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_GetSettingsManager_SettingsManager) == 0x000040, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000068, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'WBP_TextInputBase_C_GetSettingsValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager) == 0x000078, "Member 'WBP_TextInputBase_C_GetSettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'WBP_TextInputBase_C_GetSettingsValue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_GetStringValue_Success) == 0x000081, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_GetStringValue_Success' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_GetStringValue_Value) == 0x000088, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_GetStringValue_Value' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_GetSettingsValue, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000098, "Member 'WBP_TextInputBase_C_GetSettingsValue::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.ExecuteUbergraph_WBP_TextInputBase
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWidgetStyleState                             K2Node_Event_HighlightState;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlaySound;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F84[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_Event_KeyEvent;                             // 0x0008(0x0040)()
	class FText                                   K2Node_CustomEvent_Text_1;                         // 0x0048(0x0018)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0060(0x0018)()
	ETextCommit                                   K2Node_CustomEvent_CommitMethod;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F85[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0080(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0098(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase");
static_assert(sizeof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase) == 0x0000B8, "Wrong size on WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, EntryPoint) == 0x000000, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, K2Node_Event_HighlightState) == 0x000004, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::K2Node_Event_HighlightState' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, K2Node_Event_bPlaySound) == 0x000005, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::K2Node_Event_bPlaySound' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, K2Node_Event_KeyEvent) == 0x000008, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::K2Node_Event_KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, K2Node_CustomEvent_Text_1) == 0x000048, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, K2Node_CustomEvent_Text) == 0x000060, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, K2Node_CustomEvent_CommitMethod) == 0x000078, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::K2Node_CustomEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00007A, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, CallFunc_GetText_ReturnValue) == 0x000080, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, CallFunc_GetText_ReturnValue_1) == 0x000098, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, CallFunc_EqualEqual_TextText_ReturnValue) == 0x0000B0, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase, K2Node_Event_IsDesignTime) == 0x0000B1, "Member 'WBP_TextInputBase_C_ExecuteUbergraph_WBP_TextInputBase::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.ApplyWidgetStyleNormal
// 0x0008 (0x0008 - 0x0000)
struct WBP_TextInputBase_C_ApplyWidgetStyleNormal final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F86[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_ApplyWidgetStyleNormal) == 0x000004, "Wrong alignment on WBP_TextInputBase_C_ApplyWidgetStyleNormal");
static_assert(sizeof(WBP_TextInputBase_C_ApplyWidgetStyleNormal) == 0x000008, "Wrong size on WBP_TextInputBase_C_ApplyWidgetStyleNormal");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleNormal, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleNormal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleNormal, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleNormal::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.ApplyWidgetStyleHighlighted
// 0x0008 (0x0008 - 0x0000)
struct WBP_TextInputBase_C_ApplyWidgetStyleHighlighted final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F87[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_ApplyWidgetStyleHighlighted) == 0x000004, "Wrong alignment on WBP_TextInputBase_C_ApplyWidgetStyleHighlighted");
static_assert(sizeof(WBP_TextInputBase_C_ApplyWidgetStyleHighlighted) == 0x000008, "Wrong size on WBP_TextInputBase_C_ApplyWidgetStyleHighlighted");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleHighlighted, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleHighlighted::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleHighlighted, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleHighlighted::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.ApplyWidgetStyleDisabled
// 0x0008 (0x0008 - 0x0000)
struct WBP_TextInputBase_C_ApplyWidgetStyleDisabled final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F88[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_ApplyWidgetStyleDisabled) == 0x000004, "Wrong alignment on WBP_TextInputBase_C_ApplyWidgetStyleDisabled");
static_assert(sizeof(WBP_TextInputBase_C_ApplyWidgetStyleDisabled) == 0x000008, "Wrong size on WBP_TextInputBase_C_ApplyWidgetStyleDisabled");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleDisabled, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleDisabled::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleDisabled, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleDisabled::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.ApplyWidgetStyleActive
// 0x0008 (0x0008 - 0x0000)
struct WBP_TextInputBase_C_ApplyWidgetStyleActive final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F89[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_ApplyWidgetStyleActive) == 0x000004, "Wrong alignment on WBP_TextInputBase_C_ApplyWidgetStyleActive");
static_assert(sizeof(WBP_TextInputBase_C_ApplyWidgetStyleActive) == 0x000008, "Wrong size on WBP_TextInputBase_C_ApplyWidgetStyleActive");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleActive, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleActive::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplyWidgetStyleActive, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_TextInputBase_C_ApplyWidgetStyleActive::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_TextInputBase.WBP_TextInputBase_C.ApplySettingsValue
// 0x0090 (0x0090 - 0x0000)
struct WBP_TextInputBase_C_ApplySettingsValue final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0028(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0050(0x0018)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStringValue_Success;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextInputBase_C_ApplySettingsValue) == 0x000008, "Wrong alignment on WBP_TextInputBase_C_ApplySettingsValue");
static_assert(sizeof(WBP_TextInputBase_C_ApplySettingsValue) == 0x000090, "Wrong size on WBP_TextInputBase_C_ApplySettingsValue");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_TextInputBase_C_ApplySettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WBP_TextInputBase_C_ApplySettingsValue::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000010, "Member 'WBP_TextInputBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_TextInputBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, CallFunc_GetSettingsManager_SettingsManager) == 0x000028, "Member 'WBP_TextInputBase_C_ApplySettingsValue::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, CallFunc_GetText_ReturnValue) == 0x000050, "Member 'WBP_TextInputBase_C_ApplySettingsValue::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000068, "Member 'WBP_TextInputBase_C_ApplySettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'WBP_TextInputBase_C_ApplySettingsValue::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager) == 0x000080, "Member 'WBP_TextInputBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WBP_TextInputBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_TextInputBase_C_ApplySettingsValue, CallFunc_SetStringValue_Success) == 0x000089, "Member 'WBP_TextInputBase_C_ApplySettingsValue::CallFunc_SetStringValue_Success' has a wrong offset!");

}

