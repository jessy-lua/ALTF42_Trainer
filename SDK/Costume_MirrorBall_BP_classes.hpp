#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Costume_MirrorBall_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Costume_MirrorBall_BP.Costume_MirrorBall_BP_C
// 0x0078 (0x0310 - 0x0298)
class ACostume_MirrorBall_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   Land_PointLight;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Mirroball_PointLight_02;                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Root_R;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Mirroball_PointLight_01;                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Headphones;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MirrorBall_Body;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Costume_Location;                                  // 0x02E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FRotator                               Costume_Rotation;                                  // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void Costume_TakeOFF();
	void ExecuteUbergraph_Costume_MirrorBall_BP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Costume_MirrorBall_BP_C">();
	}
	static class ACostume_MirrorBall_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACostume_MirrorBall_BP_C>();
	}
};
static_assert(alignof(ACostume_MirrorBall_BP_C) == 0x000008, "Wrong alignment on ACostume_MirrorBall_BP_C");
static_assert(sizeof(ACostume_MirrorBall_BP_C) == 0x000310, "Wrong size on ACostume_MirrorBall_BP_C");
static_assert(offsetof(ACostume_MirrorBall_BP_C, UberGraphFrame) == 0x000298, "Member 'ACostume_MirrorBall_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, Land_PointLight) == 0x0002A0, "Member 'ACostume_MirrorBall_BP_C::Land_PointLight' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, Mirroball_PointLight_02) == 0x0002A8, "Member 'ACostume_MirrorBall_BP_C::Mirroball_PointLight_02' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, Root_R) == 0x0002B0, "Member 'ACostume_MirrorBall_BP_C::Root_R' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, RotatingMovement) == 0x0002B8, "Member 'ACostume_MirrorBall_BP_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, Mirroball_PointLight_01) == 0x0002C0, "Member 'ACostume_MirrorBall_BP_C::Mirroball_PointLight_01' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, Headphones) == 0x0002C8, "Member 'ACostume_MirrorBall_BP_C::Headphones' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, MirrorBall_Body) == 0x0002D0, "Member 'ACostume_MirrorBall_BP_C::MirrorBall_Body' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, DefaultSceneRoot) == 0x0002D8, "Member 'ACostume_MirrorBall_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, Costume_Location) == 0x0002E0, "Member 'ACostume_MirrorBall_BP_C::Costume_Location' has a wrong offset!");
static_assert(offsetof(ACostume_MirrorBall_BP_C, Costume_Rotation) == 0x0002F8, "Member 'ACostume_MirrorBall_BP_C::Costume_Rotation' has a wrong offset!");

}

