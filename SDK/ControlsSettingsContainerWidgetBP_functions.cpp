#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlsSettingsContainerWidgetBP

#include "Basic.hpp"

#include "ControlsSettingsContainerWidgetBP_classes.hpp"
#include "ControlsSettingsContainerWidgetBP_parameters.hpp"


namespace SDK
{

// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.ApplyControlsSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::ApplyControlsSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "ApplyControlsSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.DirtyCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsReallyDirty                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::DirtyCheck(bool* bIsReallyDirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "DirtyCheck");

	Params::ControlsSettingsContainerWidgetBP_C_DirtyCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsReallyDirty != nullptr)
		*bIsReallyDirty = Parms.bIsReallyDirty;
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.ExecuteUbergraph_ControlsSettingsContainerWidgetBP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::ExecuteUbergraph_ControlsSettingsContainerWidgetBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "ExecuteUbergraph_ControlsSettingsContainerWidgetBP");

	Params::ControlsSettingsContainerWidgetBP_C_ExecuteUbergraph_ControlsSettingsContainerWidgetBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.GetSavedControlsSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::GetSavedControlsSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "GetSavedControlsSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.LoadControlsSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::LoadControlsSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "LoadControlsSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.MarkSettingsAsDirty
// (Public, BlueprintCallable, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::MarkSettingsAsDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "MarkSettingsAsDirty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.OnClickedBack__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::OnClickedBack__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "OnClickedBack__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.RemoveActionMappingByName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InActionName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsGamepadMapping                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::RemoveActionMappingByName(class FName InActionName, bool bIsGamepadMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "RemoveActionMappingByName");

	Params::ControlsSettingsContainerWidgetBP_C_RemoveActionMappingByName Parms{};

	Parms.InActionName = InActionName;
	Parms.bIsGamepadMapping = bIsGamepadMapping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.RemoveAxisMappingByName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InAxisName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InScale                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsGamepadMapping                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::RemoveAxisMappingByName(class FName InAxisName, double InScale, bool bIsGamepadMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "RemoveAxisMappingByName");

	Params::ControlsSettingsContainerWidgetBP_C_RemoveAxisMappingByName Parms{};

	Parms.InAxisName = InAxisName;
	Parms.InScale = InScale;
	Parms.bIsGamepadMapping = bIsGamepadMapping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.ResetBindings
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UInteractableUserWidget_C*>InInteractableUserWidgets                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bIsGamepadMapping                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::ResetBindings(TArray<class UInteractableUserWidget_C*>& InInteractableUserWidgets, bool bIsGamepadMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "ResetBindings");

	Params::ControlsSettingsContainerWidgetBP_C_ResetBindings Parms{};

	Parms.InInteractableUserWidgets = std::move(InInteractableUserWidgets);
	Parms.bIsGamepadMapping = bIsGamepadMapping;

	UObject::ProcessEvent(Func, &Parms);

	InInteractableUserWidgets = std::move(Parms.InInteractableUserWidgets);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.ResetControlsSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::ResetControlsSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "ResetControlsSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.SaveDefaultBindings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UControlsSettingsContainerWidgetBP_C::SaveDefaultBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "SaveDefaultBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.SetSensivitySliderValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOptionsSlider_C*                 InOptionsSlider                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::SetSensivitySliderValue(class UOptionsSlider_C* InOptionsSlider, double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "SetSensivitySliderValue");

	Params::ControlsSettingsContainerWidgetBP_C_SetSensivitySliderValue Parms{};

	Parms.InOptionsSlider = InOptionsSlider;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.OnNavigationEnter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractableMenuWidgetBP_C*      NavigateFromMenu                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_bIsGamepadBeingUsed                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_PlayerIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::OnNavigationEnter(class UInteractableMenuWidgetBP_C* NavigateFromMenu, bool Param_bIsGamepadBeingUsed, int32 Param_PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "OnNavigationEnter");

	Params::ControlsSettingsContainerWidgetBP_C_OnNavigationEnter Parms{};

	Parms.NavigateFromMenu = NavigateFromMenu;
	Parms.Param_bIsGamepadBeingUsed = Param_bIsGamepadBeingUsed;
	Parms.Param_PlayerIndex = Param_PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ControlsSettingsContainerWidgetBP.ControlsSettingsContainerWidgetBP_C.OnNavigationExit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractableMenuWidgetBP_C*      NavigateToMenu                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInteractableMenuWidgetBP_C*      NavigateFromMenu                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UControlsSettingsContainerWidgetBP_C::OnNavigationExit(class UInteractableMenuWidgetBP_C* NavigateToMenu, class UInteractableMenuWidgetBP_C* NavigateFromMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlsSettingsContainerWidgetBP_C", "OnNavigationExit");

	Params::ControlsSettingsContainerWidgetBP_C_OnNavigationExit Parms{};

	Parms.NavigateToMenu = NavigateToMenu;
	Parms.NavigateFromMenu = NavigateFromMenu;

	UObject::ProcessEvent(Func, &Parms);
}

}

