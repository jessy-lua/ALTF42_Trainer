#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SliderBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FFontStyle_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "EInputDeviceType_structs.hpp"
#include "EWidgetStyleState_structs.hpp"
#include "FValueTypes_structs.hpp"


namespace SDK::Params
{

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderValue
// 0x0060 (0x0060 - 0x0000)
struct WBP_SliderBase_C_UpdateSliderValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOptionChangeIgnore;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTriggerChangeEvent;                               // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBA[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewValue;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetScaledValue_OnlyByMaxValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetScaledValue_Return_Value;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBD[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_UpdateSliderValue) == 0x000008, "Wrong alignment on WBP_SliderBase_C_UpdateSliderValue");
static_assert(sizeof(WBP_SliderBase_C_UpdateSliderValue) == 0x000060, "Wrong size on WBP_SliderBase_C_UpdateSliderValue");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, InValue) == 0x000000, "Member 'WBP_SliderBase_C_UpdateSliderValue::InValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, bPlaySound) == 0x000008, "Member 'WBP_SliderBase_C_UpdateSliderValue::bPlaySound' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, bOptionChangeIgnore) == 0x000009, "Member 'WBP_SliderBase_C_UpdateSliderValue::bOptionChangeIgnore' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, bTriggerChangeEvent) == 0x00000A, "Member 'WBP_SliderBase_C_UpdateSliderValue::bTriggerChangeEvent' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, NewValue) == 0x000010, "Member 'WBP_SliderBase_C_UpdateSliderValue::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_GetScaledValue_OnlyByMaxValue) == 0x000018, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_GetScaledValue_OnlyByMaxValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_GetScaledValue_Return_Value) == 0x000020, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_GetScaledValue_Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_GetOwningContainer_OwningContainer) == 0x000028, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderValue, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'WBP_SliderBase_C_UpdateSliderValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderProgressBarAndSliderHandle
// 0x0018 (0x0018 - 0x0000)
struct WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ValueNormalized;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle) == 0x000008, "Wrong alignment on WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle");
static_assert(sizeof(WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle) == 0x000018, "Wrong size on WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle, Value) == 0x000000, "Member 'WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle::Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle, ValueNormalized) == 0x000008, "Member 'WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle::ValueNormalized' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000010, "Member 'WBP_SliderBase_C_UpdateSliderProgressBarAndSliderHandle::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderInterpolationSpeed
// 0x0050 (0x0050 - 0x0000)
struct WBP_SliderBase_C_UpdateSliderInterpolationSpeed final
{
public:
	EInputDeviceType                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed) == 0x000008, "Wrong alignment on WBP_SliderBase_C_UpdateSliderInterpolationSpeed");
static_assert(sizeof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed) == 0x000050, "Wrong size on WBP_SliderBase_C_UpdateSliderInterpolationSpeed");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, Temp_byte_Variable) == 0x000000, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000028, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000030, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000038, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, K2Node_Select_Default) == 0x000040, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderInterpolationSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000048, "Member 'WBP_SliderBase_C_UpdateSliderInterpolationSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderFromMouse
// 0x0038 (0x0038 - 0x0000)
struct WBP_SliderBase_C_UpdateSliderFromMouse final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_UpdateSliderFromMouse) == 0x000008, "Wrong alignment on WBP_SliderBase_C_UpdateSliderFromMouse");
static_assert(sizeof(WBP_SliderBase_C_UpdateSliderFromMouse) == 0x000038, "Wrong size on WBP_SliderBase_C_UpdateSliderFromMouse");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderFromMouse, InValue) == 0x000000, "Member 'WBP_SliderBase_C_UpdateSliderFromMouse::InValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderFromMouse, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_UpdateSliderFromMouse::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderFromMouse, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_SliderBase_C_UpdateSliderFromMouse::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderFromMouse, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_SliderBase_C_UpdateSliderFromMouse::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderFromMouse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_SliderBase_C_UpdateSliderFromMouse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderFromMouse, CallFunc_GridSnap_Float_ReturnValue) == 0x000028, "Member 'WBP_SliderBase_C_UpdateSliderFromMouse::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderFromMouse, CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast) == 0x000030, "Member 'WBP_SliderBase_C_UpdateSliderFromMouse::CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSliderAndIncrementRampUpSpeed
// 0x0018 (0x0018 - 0x0000)
struct WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed final
{
public:
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed) == 0x000008, "Wrong alignment on WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed");
static_assert(sizeof(WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed) == 0x000018, "Wrong size on WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed, CallFunc_FInterpTo_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000008, "Member 'WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed, CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast) == 0x000010, "Member 'WBP_SliderBase_C_UpdateSliderAndIncrementRampUpSpeed::CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateSlider
// 0x0010 (0x0010 - 0x0000)
struct WBP_SliderBase_C_UpdateSlider final
{
public:
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValueTextFromNumber_Value_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_UpdateSlider) == 0x000008, "Wrong alignment on WBP_SliderBase_C_UpdateSlider");
static_assert(sizeof(WBP_SliderBase_C_UpdateSlider) == 0x000010, "Wrong size on WBP_SliderBase_C_UpdateSlider");
static_assert(offsetof(WBP_SliderBase_C_UpdateSlider, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_UpdateSlider::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSlider, CallFunc_SetValueTextFromNumber_Value_ImplicitCast) == 0x000004, "Member 'WBP_SliderBase_C_UpdateSlider::CallFunc_SetValueTextFromNumber_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateSlider, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000008, "Member 'WBP_SliderBase_C_UpdateSlider::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.UpdateIsHoldingKey
// 0x0080 (0x0080 - 0x0000)
struct WBP_SliderBase_C_UpdateIsHoldingKey final
{
public:
	struct FKeyEvent                              Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FInputEvent                            CallFunc_GetInputEventFromKeyEvent_ReturnValue;    // 0x0040(0x0020)()
	bool                                          CallFunc_InputEvent_IsRepeat_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDeviceType                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC2[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_UpdateIsHoldingKey) == 0x000008, "Wrong alignment on WBP_SliderBase_C_UpdateIsHoldingKey");
static_assert(sizeof(WBP_SliderBase_C_UpdateIsHoldingKey) == 0x000080, "Wrong size on WBP_SliderBase_C_UpdateIsHoldingKey");
static_assert(offsetof(WBP_SliderBase_C_UpdateIsHoldingKey, Event) == 0x000000, "Member 'WBP_SliderBase_C_UpdateIsHoldingKey::Event' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateIsHoldingKey, CallFunc_GetInputEventFromKeyEvent_ReturnValue) == 0x000040, "Member 'WBP_SliderBase_C_UpdateIsHoldingKey::CallFunc_GetInputEventFromKeyEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateIsHoldingKey, CallFunc_InputEvent_IsRepeat_ReturnValue) == 0x000060, "Member 'WBP_SliderBase_C_UpdateIsHoldingKey::CallFunc_InputEvent_IsRepeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateIsHoldingKey, Temp_byte_Variable) == 0x000061, "Member 'WBP_SliderBase_C_UpdateIsHoldingKey::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateIsHoldingKey, K2Node_Select_Default) == 0x000068, "Member 'WBP_SliderBase_C_UpdateIsHoldingKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateIsHoldingKey, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_SliderBase_C_UpdateIsHoldingKey::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_UpdateIsHoldingKey, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000078, "Member 'WBP_SliderBase_C_UpdateIsHoldingKey::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.SetWidgetState
// 0x0002 (0x0002 - 0x0000)
struct WBP_SliderBase_C_SetWidgetState final
{
public:
	EWidgetStyleState                             Param_WidgetState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_SetWidgetState) == 0x000001, "Wrong alignment on WBP_SliderBase_C_SetWidgetState");
static_assert(sizeof(WBP_SliderBase_C_SetWidgetState) == 0x000002, "Wrong size on WBP_SliderBase_C_SetWidgetState");
static_assert(offsetof(WBP_SliderBase_C_SetWidgetState, Param_WidgetState) == 0x000000, "Member 'WBP_SliderBase_C_SetWidgetState::Param_WidgetState' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetWidgetState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_SliderBase_C_SetWidgetState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.SetValueTextFromNumber
// 0x0040 (0x0040 - 0x0000)
struct WBP_SliderBase_C_SetValueTextFromNumber final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0008(0x0018)()
	class FText                                   CallFunc_ConvertInputToNumeric_ModifiedText;       // 0x0020(0x0018)()
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_SetValueTextFromNumber) == 0x000008, "Wrong alignment on WBP_SliderBase_C_SetValueTextFromNumber");
static_assert(sizeof(WBP_SliderBase_C_SetValueTextFromNumber) == 0x000040, "Wrong size on WBP_SliderBase_C_SetValueTextFromNumber");
static_assert(offsetof(WBP_SliderBase_C_SetValueTextFromNumber, Value) == 0x000000, "Member 'WBP_SliderBase_C_SetValueTextFromNumber::Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetValueTextFromNumber, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_SetValueTextFromNumber::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetValueTextFromNumber, CallFunc_ConvertInputToNumeric_ModifiedText) == 0x000020, "Member 'WBP_SliderBase_C_SetValueTextFromNumber::CallFunc_ConvertInputToNumeric_ModifiedText' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetValueTextFromNumber, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000038, "Member 'WBP_SliderBase_C_SetValueTextFromNumber::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.SetupSliderInitial
// 0x0088 (0x0088 - 0x0000)
struct WBP_SliderBase_C_SetupSliderInitial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0028(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC6[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ConvertDataValueToUIValue_UI_Value;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueTextFromNumber_Value_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_SetupSliderInitial) == 0x000008, "Wrong alignment on WBP_SliderBase_C_SetupSliderInitial");
static_assert(sizeof(WBP_SliderBase_C_SetupSliderInitial) == 0x000088, "Wrong size on WBP_SliderBase_C_SetupSliderInitial");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000010, "Member 'WBP_SliderBase_C_SetupSliderInitial::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_SliderBase_C_SetupSliderInitial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_GetSettingsManager_SettingsManager) == 0x000028, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, K2Node_DynamicCast_AsBP_Settings_Manager) == 0x000058, "Member 'WBP_SliderBase_C_SetupSliderInitial::K2Node_DynamicCast_AsBP_Settings_Manager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WBP_SliderBase_C_SetupSliderInitial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_ConvertDataValueToUIValue_UI_Value) == 0x000068, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_ConvertDataValueToUIValue_UI_Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_SetValueTextFromNumber_Value_ImplicitCast) == 0x000078, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_SetValueTextFromNumber_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast) == 0x00007C, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetupSliderInitial, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x000080, "Member 'WBP_SliderBase_C_SetupSliderInitial::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.SetSliderHandleValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_SliderBase_C_SetSliderHandleValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_SetSliderHandleValue) == 0x000008, "Wrong alignment on WBP_SliderBase_C_SetSliderHandleValue");
static_assert(sizeof(WBP_SliderBase_C_SetSliderHandleValue) == 0x000018, "Wrong size on WBP_SliderBase_C_SetSliderHandleValue");
static_assert(offsetof(WBP_SliderBase_C_SetSliderHandleValue, InValue) == 0x000000, "Member 'WBP_SliderBase_C_SetSliderHandleValue::InValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSliderHandleValue, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_SetSliderHandleValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSliderHandleValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000010, "Member 'WBP_SliderBase_C_SetSliderHandleValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.SetSliderBackgroundColor
// 0x0390 (0x0390 - 0x0000)
struct WBP_SliderBase_C_SetSliderBackgroundColor final
{
public:
	struct FLinearColor                           SpecifiedColor;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
	uint8                                         Pad_2FC7[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x00D0)()
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x0100(0x0290)()
};
static_assert(alignof(WBP_SliderBase_C_SetSliderBackgroundColor) == 0x000010, "Wrong alignment on WBP_SliderBase_C_SetSliderBackgroundColor");
static_assert(sizeof(WBP_SliderBase_C_SetSliderBackgroundColor) == 0x000390, "Wrong size on WBP_SliderBase_C_SetSliderBackgroundColor");
static_assert(offsetof(WBP_SliderBase_C_SetSliderBackgroundColor, SpecifiedColor) == 0x000000, "Member 'WBP_SliderBase_C_SetSliderBackgroundColor::SpecifiedColor' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSliderBackgroundColor, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_SliderBase_C_SetSliderBackgroundColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSliderBackgroundColor, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'WBP_SliderBase_C_SetSliderBackgroundColor::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSliderBackgroundColor, K2Node_MakeStruct_ProgressBarStyle) == 0x000100, "Member 'WBP_SliderBase_C_SetSliderBackgroundColor::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.SetSettingsValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_SliderBase_C_SetSettingsValue final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMenuForDirtyOptions_bIsMenuDirty;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_SetSettingsValue) == 0x000001, "Wrong alignment on WBP_SliderBase_C_SetSettingsValue");
static_assert(sizeof(WBP_SliderBase_C_SetSettingsValue) == 0x000004, "Wrong size on WBP_SliderBase_C_SetSettingsValue");
static_assert(offsetof(WBP_SliderBase_C_SetSettingsValue, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_SliderBase_C_SetSettingsValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSettingsValue, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_SliderBase_C_SetSettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSettingsValue, CallFunc_CheckMenuForDirtyOptions_bIsMenuDirty) == 0x000002, "Member 'WBP_SliderBase_C_SetSettingsValue::CallFunc_CheckMenuForDirtyOptions_bIsMenuDirty' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_SetSettingsValue, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000003, "Member 'WBP_SliderBase_C_SetSettingsValue::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ResetSettingsValue
// 0x0078 (0x0078 - 0x0000)
struct WBP_SliderBase_C_ResetSettingsValue final
{
public:
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0030(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCA[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ConvertDataValueToUIValue_UI_Value;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ResetSettingsValue) == 0x000008, "Wrong alignment on WBP_SliderBase_C_ResetSettingsValue");
static_assert(sizeof(WBP_SliderBase_C_ResetSettingsValue) == 0x000078, "Wrong size on WBP_SliderBase_C_ResetSettingsValue");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, CallFunc_FClamp_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_ResetSettingsValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_ResetSettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WBP_SliderBase_C_ResetSettingsValue::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000018, "Member 'WBP_SliderBase_C_ResetSettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_SliderBase_C_ResetSettingsValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, CallFunc_GetSettingsManager_SettingsManager) == 0x000030, "Member 'WBP_SliderBase_C_ResetSettingsValue::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'WBP_SliderBase_C_ResetSettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager) == 0x000060, "Member 'WBP_SliderBase_C_ResetSettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WBP_SliderBase_C_ResetSettingsValue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ResetSettingsValue, CallFunc_ConvertDataValueToUIValue_UI_Value) == 0x000070, "Member 'WBP_SliderBase_C_ResetSettingsValue::CallFunc_ConvertDataValueToUIValue_UI_Value' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SliderBase_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SliderBase_C_PreConstruct");
static_assert(sizeof(WBP_SliderBase_C_PreConstruct) == 0x000001, "Wrong size on WBP_SliderBase_C_PreConstruct");
static_assert(offsetof(WBP_SliderBase_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SliderBase_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OverrideWidgetStyleFromConfig
// 0x02C0 (0x02C0 - 0x0000)
struct WBP_SliderBase_C_OverrideWidgetStyleFromConfig final
{
public:
	struct FFFontStyle                            CallFunc_GetFontStyleByName_FontStyle;             // 0x0000(0x0080)(HasGetValueTypeHash)
	struct FFFontStyle                            CallFunc_GetFontStyleByName_FontStyle_1;           // 0x0080(0x0080)(HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_1;                   // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_2;                   // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_3;                   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_4;                   // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_5;                   // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_6;                   // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_7;                   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_8;                   // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_9;                   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_10;                  // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_11;                  // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_12;                  // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_13;                  // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_14;                  // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_15;                  // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_16;                  // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_17;                  // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_18;                  // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_19;                  // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_20;                  // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_21;                  // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_22;                  // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_23;                  // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_24;                  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_25;                  // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_26;                  // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_27;                  // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig) == 0x000008, "Wrong alignment on WBP_SliderBase_C_OverrideWidgetStyleFromConfig");
static_assert(sizeof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig) == 0x0002C0, "Wrong size on WBP_SliderBase_C_OverrideWidgetStyleFromConfig");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetFontStyleByName_FontStyle) == 0x000000, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetFontStyleByName_FontStyle' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetFontStyleByName_FontStyle_1) == 0x000080, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetFontStyleByName_FontStyle_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color) == 0x000100, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_1) == 0x000110, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_2) == 0x000120, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_3) == 0x000130, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_3' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_4) == 0x000140, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_4' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_5) == 0x000150, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_5' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_6) == 0x000160, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_6' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_7) == 0x000170, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_7' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_8) == 0x000180, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_8' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_9) == 0x000190, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_9' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_10) == 0x0001A0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_10' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_11) == 0x0001B0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_11' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_12) == 0x0001C0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_12' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_13) == 0x0001D0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_13' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_14) == 0x0001E0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_14' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_15) == 0x0001F0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_15' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_16) == 0x000200, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_16' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_17) == 0x000210, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_17' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_18) == 0x000220, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_18' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_19) == 0x000230, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_19' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_20) == 0x000240, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_20' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_21) == 0x000250, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_21' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_22) == 0x000260, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_22' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_23) == 0x000270, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_23' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_24) == 0x000280, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_24' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_25) == 0x000290, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_25' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_26) == 0x0002A0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_26' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_27) == 0x0002B0, "Member 'WBP_SliderBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_27' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnSliderValueEditTextCommited
// 0x0020 (0x0020 - 0x0000)
struct WBP_SliderBase_C_OnSliderValueEditTextCommited final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_OnSliderValueEditTextCommited) == 0x000008, "Wrong alignment on WBP_SliderBase_C_OnSliderValueEditTextCommited");
static_assert(sizeof(WBP_SliderBase_C_OnSliderValueEditTextCommited) == 0x000020, "Wrong size on WBP_SliderBase_C_OnSliderValueEditTextCommited");
static_assert(offsetof(WBP_SliderBase_C_OnSliderValueEditTextCommited, Text) == 0x000000, "Member 'WBP_SliderBase_C_OnSliderValueEditTextCommited::Text' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnSliderValueEditTextCommited, CommitMethod) == 0x000018, "Member 'WBP_SliderBase_C_OnSliderValueEditTextCommited::CommitMethod' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnSliderValueEditTextChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_SliderBase_C_OnSliderValueEditTextChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_SliderBase_C_OnSliderValueEditTextChanged) == 0x000008, "Wrong alignment on WBP_SliderBase_C_OnSliderValueEditTextChanged");
static_assert(sizeof(WBP_SliderBase_C_OnSliderValueEditTextChanged) == 0x000018, "Wrong size on WBP_SliderBase_C_OnSliderValueEditTextChanged");
static_assert(offsetof(WBP_SliderBase_C_OnSliderValueEditTextChanged, Text) == 0x000000, "Member 'WBP_SliderBase_C_OnSliderValueEditTextChanged::Text' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnSetHighlightEffect
// 0x0002 (0x0002 - 0x0000)
struct WBP_SliderBase_C_OnSetHighlightEffect final
{
public:
	EWidgetStyleState                             Param_HighlightState;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_OnSetHighlightEffect) == 0x000001, "Wrong alignment on WBP_SliderBase_C_OnSetHighlightEffect");
static_assert(sizeof(WBP_SliderBase_C_OnSetHighlightEffect) == 0x000002, "Wrong size on WBP_SliderBase_C_OnSetHighlightEffect");
static_assert(offsetof(WBP_SliderBase_C_OnSetHighlightEffect, Param_HighlightState) == 0x000000, "Member 'WBP_SliderBase_C_OnSetHighlightEffect::Param_HighlightState' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnSetHighlightEffect, bPlaySound) == 0x000001, "Member 'WBP_SliderBase_C_OnSetHighlightEffect::bPlaySound' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_SliderBase_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_SliderBase_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_SliderBase_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_SliderBase_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_SliderBase_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_SliderBase_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_SliderBase_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnOptionChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_SliderBase_C_OnOptionChanged__DelegateSignature final
{
public:
	double                                        Param_CurrentValue;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_SliderBase_C*                      OptionsSlider;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_OnOptionChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_SliderBase_C_OnOptionChanged__DelegateSignature");
static_assert(sizeof(WBP_SliderBase_C_OnOptionChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_SliderBase_C_OnOptionChanged__DelegateSignature");
static_assert(offsetof(WBP_SliderBase_C_OnOptionChanged__DelegateSignature, Param_CurrentValue) == 0x000000, "Member 'WBP_SliderBase_C_OnOptionChanged__DelegateSignature::Param_CurrentValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnOptionChanged__DelegateSignature, OptionsSlider) == 0x000008, "Member 'WBP_SliderBase_C_OnOptionChanged__DelegateSignature::OptionsSlider' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnKeyUp
// 0x0268 (0x0268 - 0x0000)
struct WBP_SliderBase_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCB[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnKeyUp_ReturnValue;                      // 0x0150(0x00B8)()
	EUINavigation                                 CallFunc_KeyToUINavigation_UINavigation;           // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCC[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_KeyToUINavigation_EnhancedActionKeyMapping; // 0x0210(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_KeyToUINavigation_bIsKeyPressed;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_OnKeyUp) == 0x000008, "Wrong alignment on WBP_SliderBase_C_OnKeyUp");
static_assert(sizeof(WBP_SliderBase_C_OnKeyUp) == 0x000268, "Wrong size on WBP_SliderBase_C_OnKeyUp");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WBP_SliderBase_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WBP_SliderBase_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'WBP_SliderBase_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_SliderBase_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000148, "Member 'WBP_SliderBase_C_OnKeyUp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, CallFunc_OnKeyUp_ReturnValue) == 0x000150, "Member 'WBP_SliderBase_C_OnKeyUp::CallFunc_OnKeyUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, CallFunc_KeyToUINavigation_UINavigation) == 0x000208, "Member 'WBP_SliderBase_C_OnKeyUp::CallFunc_KeyToUINavigation_UINavigation' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, CallFunc_KeyToUINavigation_EnhancedActionKeyMapping) == 0x000210, "Member 'WBP_SliderBase_C_OnKeyUp::CallFunc_KeyToUINavigation_EnhancedActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, CallFunc_KeyToUINavigation_bIsKeyPressed) == 0x000260, "Member 'WBP_SliderBase_C_OnKeyUp::CallFunc_KeyToUINavigation_bIsKeyPressed' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyUp, K2Node_SwitchEnum_CmpSuccess) == 0x000261, "Member 'WBP_SliderBase_C_OnKeyUp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnKeyDown
// 0x0268 (0x0268 - 0x0000)
struct WBP_SliderBase_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCD[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0138(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnKeyDown_ReturnValue;                    // 0x0150(0x00B8)()
	EUINavigation                                 CallFunc_KeyToUINavigation_UINavigation;           // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCE[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_KeyToUINavigation_EnhancedActionKeyMapping; // 0x0210(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_KeyToUINavigation_bIsKeyPressed;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_SliderBase_C_OnKeyDown");
static_assert(sizeof(WBP_SliderBase_C_OnKeyDown) == 0x000268, "Wrong size on WBP_SliderBase_C_OnKeyDown");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_SliderBase_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_SliderBase_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_SliderBase_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000130, "Member 'WBP_SliderBase_C_OnKeyDown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000138, "Member 'WBP_SliderBase_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, CallFunc_OnKeyDown_ReturnValue) == 0x000150, "Member 'WBP_SliderBase_C_OnKeyDown::CallFunc_OnKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, CallFunc_KeyToUINavigation_UINavigation) == 0x000208, "Member 'WBP_SliderBase_C_OnKeyDown::CallFunc_KeyToUINavigation_UINavigation' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, CallFunc_KeyToUINavigation_EnhancedActionKeyMapping) == 0x000210, "Member 'WBP_SliderBase_C_OnKeyDown::CallFunc_KeyToUINavigation_EnhancedActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, CallFunc_KeyToUINavigation_bIsKeyPressed) == 0x000260, "Member 'WBP_SliderBase_C_OnKeyDown::CallFunc_KeyToUINavigation_bIsKeyPressed' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_OnKeyDown, K2Node_SwitchEnum_CmpSuccess) == 0x000261, "Member 'WBP_SliderBase_C_OnKeyDown::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.OnCustomApplyMethod__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature final
{
public:
	class UWBP_SliderBase_C*                      OptionSliderBase;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature) == 0x000008, "Wrong alignment on WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature");
static_assert(sizeof(WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature) == 0x000008, "Wrong size on WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature");
static_assert(offsetof(WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature, OptionSliderBase) == 0x000000, "Member 'WBP_SliderBase_C_OnCustomApplyMethod__DelegateSignature::OptionSliderBase' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.IncrementWithRampUpSpeed
// 0x0030 (0x0030 - 0x0000)
struct WBP_SliderBase_C_IncrementWithRampUpSpeed final
{
public:
	EInputDeviceType                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_IncrementWithRampUpSpeed) == 0x000008, "Wrong alignment on WBP_SliderBase_C_IncrementWithRampUpSpeed");
static_assert(sizeof(WBP_SliderBase_C_IncrementWithRampUpSpeed) == 0x000030, "Wrong size on WBP_SliderBase_C_IncrementWithRampUpSpeed");
static_assert(offsetof(WBP_SliderBase_C_IncrementWithRampUpSpeed, Temp_byte_Variable) == 0x000000, "Member 'WBP_SliderBase_C_IncrementWithRampUpSpeed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementWithRampUpSpeed, K2Node_Select_Default) == 0x000008, "Member 'WBP_SliderBase_C_IncrementWithRampUpSpeed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementWithRampUpSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_SliderBase_C_IncrementWithRampUpSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementWithRampUpSpeed, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_SliderBase_C_IncrementWithRampUpSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementWithRampUpSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'WBP_SliderBase_C_IncrementWithRampUpSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementWithRampUpSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'WBP_SliderBase_C_IncrementWithRampUpSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.IncrementSlider
// 0x0018 (0x0018 - 0x0000)
struct WBP_SliderBase_C_IncrementSlider final
{
public:
	double                                        InIncrementValue;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueTextFromNumber_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_IncrementSlider) == 0x000008, "Wrong alignment on WBP_SliderBase_C_IncrementSlider");
static_assert(sizeof(WBP_SliderBase_C_IncrementSlider) == 0x000018, "Wrong size on WBP_SliderBase_C_IncrementSlider");
static_assert(offsetof(WBP_SliderBase_C_IncrementSlider, InIncrementValue) == 0x000000, "Member 'WBP_SliderBase_C_IncrementSlider::InIncrementValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementSlider, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_IncrementSlider::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementSlider, CallFunc_SetValueTextFromNumber_Value_ImplicitCast) == 0x000010, "Member 'WBP_SliderBase_C_IncrementSlider::CallFunc_SetValueTextFromNumber_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.IncrementSingleStep
// 0x0010 (0x0010 - 0x0000)
struct WBP_SliderBase_C_IncrementSingleStep final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_IncrementSingleStep) == 0x000008, "Wrong alignment on WBP_SliderBase_C_IncrementSingleStep");
static_assert(sizeof(WBP_SliderBase_C_IncrementSingleStep) == 0x000010, "Wrong size on WBP_SliderBase_C_IncrementSingleStep");
static_assert(offsetof(WBP_SliderBase_C_IncrementSingleStep, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_IncrementSingleStep::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncrementSingleStep, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_IncrementSingleStep::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.IncreaseSliderRampUpSpeed
// 0x0010 (0x0010 - 0x0000)
struct WBP_SliderBase_C_IncreaseSliderRampUpSpeed final
{
public:
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_IncreaseSliderRampUpSpeed) == 0x000008, "Wrong alignment on WBP_SliderBase_C_IncreaseSliderRampUpSpeed");
static_assert(sizeof(WBP_SliderBase_C_IncreaseSliderRampUpSpeed) == 0x000010, "Wrong size on WBP_SliderBase_C_IncreaseSliderRampUpSpeed");
static_assert(offsetof(WBP_SliderBase_C_IncreaseSliderRampUpSpeed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_IncreaseSliderRampUpSpeed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_IncreaseSliderRampUpSpeed, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_IncreaseSliderRampUpSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.GetSettingsValue
// 0x0110 (0x0110 - 0x0000)
struct WBP_SliderBase_C_GetSettingsValue final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD1[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0028(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD2[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatValue_Success;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD3[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFloatValue_Value;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD4[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ConvertDataValueToUIValue_UI_Value;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager_1;     // 0x00A0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager_1;        // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD5[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameUserSettingsValue_Index;           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameUserSettingsValue_Value;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameUserSettingsValue_StringValue;     // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_ConvertDataValueToUIValue_UI_Value_1;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueTextFromNumber_Value_ImplicitCast; // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueTextFromNumber_Value_ImplicitCast_1; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_GetSettingsValue) == 0x000008, "Wrong alignment on WBP_SliderBase_C_GetSettingsValue");
static_assert(sizeof(WBP_SliderBase_C_GetSettingsValue) == 0x000110, "Wrong size on WBP_SliderBase_C_GetSettingsValue");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000010, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetSettingsManager_SettingsManager) == 0x000028, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager) == 0x000058, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetGameInstance_ReturnValue_1) == 0x000068, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetFloatValue_Success) == 0x000070, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetFloatValue_Success' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetFloatValue_Value) == 0x000078, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetFloatValue_Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1) == 0x000080, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_ConvertDataValueToUIValue_UI_Value) == 0x000098, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_ConvertDataValueToUIValue_UI_Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetSettingsManager_SettingsManager_1) == 0x0000A0, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetSettingsManager_SettingsManager_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000C8, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager_1) == 0x0000D0, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'WBP_SliderBase_C_GetSettingsValue::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetGameUserSettingsValue_Index) == 0x0000DC, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetGameUserSettingsValue_Index' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetGameUserSettingsValue_Value) == 0x0000E0, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetGameUserSettingsValue_Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_GetGameUserSettingsValue_StringValue) == 0x0000E8, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_GetGameUserSettingsValue_StringValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_ConvertDataValueToUIValue_UI_Value_1) == 0x0000F8, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_ConvertDataValueToUIValue_UI_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast) == 0x000100, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_UpdateSliderProgressBarAndSliderHandle_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_SetValueTextFromNumber_Value_ImplicitCast) == 0x000104, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_SetValueTextFromNumber_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetSettingsValue, CallFunc_SetValueTextFromNumber_Value_ImplicitCast_1) == 0x000108, "Member 'WBP_SliderBase_C_GetSettingsValue::CallFunc_SetValueTextFromNumber_Value_ImplicitCast_1' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.GetScaledValue
// 0x0030 (0x0030 - 0x0000)
struct WBP_SliderBase_C_GetScaledValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OnlyByMaxValue;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Return_Value;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_GetScaledValue) == 0x000008, "Wrong alignment on WBP_SliderBase_C_GetScaledValue");
static_assert(sizeof(WBP_SliderBase_C_GetScaledValue) == 0x000030, "Wrong size on WBP_SliderBase_C_GetScaledValue");
static_assert(offsetof(WBP_SliderBase_C_GetScaledValue, InValue) == 0x000000, "Member 'WBP_SliderBase_C_GetScaledValue::InValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetScaledValue, OnlyByMaxValue) == 0x000008, "Member 'WBP_SliderBase_C_GetScaledValue::OnlyByMaxValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetScaledValue, Return_Value) == 0x000010, "Member 'WBP_SliderBase_C_GetScaledValue::Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetScaledValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_SliderBase_C_GetScaledValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetScaledValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000020, "Member 'WBP_SliderBase_C_GetScaledValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetScaledValue, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'WBP_SliderBase_C_GetScaledValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.GetDefaultValueNormalized
// 0x0010 (0x0010 - 0x0000)
struct WBP_SliderBase_C_GetDefaultValueNormalized final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_GetDefaultValueNormalized) == 0x000008, "Wrong alignment on WBP_SliderBase_C_GetDefaultValueNormalized");
static_assert(sizeof(WBP_SliderBase_C_GetDefaultValueNormalized) == 0x000010, "Wrong size on WBP_SliderBase_C_GetDefaultValueNormalized");
static_assert(offsetof(WBP_SliderBase_C_GetDefaultValueNormalized, ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_GetDefaultValueNormalized::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_GetDefaultValueNormalized, CallFunc_NormalizeToRange_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_GetDefaultValueNormalized::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ExecuteUbergraph_WBP_SliderBase
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text_1;                         // 0x0008(0x0018)()
	ETextCommit                                   K2Node_CustomEvent_CommitMethod;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0028(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD8[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ConvertInputToNumeric_ModifiedText;       // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD9[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x00B4(0x0008)(NoDestructor)
	EWidgetStyleState                             K2Node_Event_HighlightState;                       // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlaySound;                           // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueTextFromNumber_Value_ImplicitCast; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase) == 0x000008, "Wrong alignment on WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase");
static_assert(sizeof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase) == 0x0000C8, "Wrong size on WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, EntryPoint) == 0x000000, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_CustomEvent_Text_1) == 0x000008, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_CustomEvent_CommitMethod) == 0x000020, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_CustomEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_CustomEvent_Text) == 0x000028, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_ConvertInputToNumeric_ModifiedText) == 0x000048, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_ConvertInputToNumeric_ModifiedText' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000070, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000080, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_Left_ReturnValue) == 0x000088, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_Event_InFocusEvent) == 0x0000B4, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_Event_HighlightState) == 0x0000BC, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_Event_HighlightState' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_Event_bPlaySound) == 0x0000BD, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_Event_bPlaySound' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000BE, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, K2Node_Event_IsDesignTime) == 0x0000BF, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C1, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000C2, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000C3, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase, CallFunc_SetValueTextFromNumber_Value_ImplicitCast) == 0x0000C4, "Member 'WBP_SliderBase_C_ExecuteUbergraph_WBP_SliderBase::CallFunc_SetValueTextFromNumber_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ConvertInputToNumeric
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_SliderBase_C_ConvertInputToNumeric final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ModifiedText;                                      // 0x0018(0x0018)(Parm, OutParm)
	class FString                                 ResultString;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDA[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0058(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_2;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDB[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDC[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDD[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDE[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDF[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ConvertInputToNumeric) == 0x000008, "Wrong alignment on WBP_SliderBase_C_ConvertInputToNumeric");
static_assert(sizeof(WBP_SliderBase_C_ConvertInputToNumeric) == 0x0000E0, "Wrong size on WBP_SliderBase_C_ConvertInputToNumeric");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, InText) == 0x000000, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::InText' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, ModifiedText) == 0x000018, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::ModifiedText' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, ResultString) == 0x000030, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::ResultString' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000058, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_IsNumeric_ReturnValue) == 0x00007C, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00007D, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x00007E, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue) == 0x00007F, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_NotEqual_StrStr_ReturnValue_2) == 0x000080, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_NotEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue_1) == 0x000081, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Replace_ReturnValue) == 0x000088, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue_2) == 0x000098, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000099, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00009A, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_BooleanAND_ReturnValue_3) == 0x0000C8, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ConvertInputToNumeric, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'WBP_SliderBase_C_ConvertInputToNumeric::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleNormal
// 0x0008 (0x0008 - 0x0000)
struct WBP_SliderBase_C_ApplyWidgetStyleNormal final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ApplyWidgetStyleNormal) == 0x000004, "Wrong alignment on WBP_SliderBase_C_ApplyWidgetStyleNormal");
static_assert(sizeof(WBP_SliderBase_C_ApplyWidgetStyleNormal) == 0x000008, "Wrong size on WBP_SliderBase_C_ApplyWidgetStyleNormal");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleNormal, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_SliderBase_C_ApplyWidgetStyleNormal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleNormal, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_SliderBase_C_ApplyWidgetStyleNormal::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleHighlighted
// 0x0008 (0x0008 - 0x0000)
struct WBP_SliderBase_C_ApplyWidgetStyleHighlighted final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ApplyWidgetStyleHighlighted) == 0x000004, "Wrong alignment on WBP_SliderBase_C_ApplyWidgetStyleHighlighted");
static_assert(sizeof(WBP_SliderBase_C_ApplyWidgetStyleHighlighted) == 0x000008, "Wrong size on WBP_SliderBase_C_ApplyWidgetStyleHighlighted");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleHighlighted, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_SliderBase_C_ApplyWidgetStyleHighlighted::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleHighlighted, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_SliderBase_C_ApplyWidgetStyleHighlighted::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleDisabled
// 0x0008 (0x0008 - 0x0000)
struct WBP_SliderBase_C_ApplyWidgetStyleDisabled final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ApplyWidgetStyleDisabled) == 0x000004, "Wrong alignment on WBP_SliderBase_C_ApplyWidgetStyleDisabled");
static_assert(sizeof(WBP_SliderBase_C_ApplyWidgetStyleDisabled) == 0x000008, "Wrong size on WBP_SliderBase_C_ApplyWidgetStyleDisabled");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleDisabled, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_SliderBase_C_ApplyWidgetStyleDisabled::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleDisabled, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_SliderBase_C_ApplyWidgetStyleDisabled::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ApplyWidgetStyleActive
// 0x0008 (0x0008 - 0x0000)
struct WBP_SliderBase_C_ApplyWidgetStyleActive final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ApplyWidgetStyleActive) == 0x000004, "Wrong alignment on WBP_SliderBase_C_ApplyWidgetStyleActive");
static_assert(sizeof(WBP_SliderBase_C_ApplyWidgetStyleActive) == 0x000008, "Wrong size on WBP_SliderBase_C_ApplyWidgetStyleActive");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleActive, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_SliderBase_C_ApplyWidgetStyleActive::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplyWidgetStyleActive, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'WBP_SliderBase_C_ApplyWidgetStyleActive::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_SliderBase.WBP_SliderBase_C.ApplySettingsValue
// 0x0168 (0x0168 - 0x0000)
struct WBP_SliderBase_C_ApplySettingsValue final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0028(0x0028)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE6[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE7[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager_1;     // 0x0088(0x0028)(HasGetValueTypeHash)
	double                                        CallFunc_ConvertUIValueToDataValue_ReturnValue;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager_1;        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE8[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ConvertUIValueToDataValue_ReturnValue_1;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension_2; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFloatValue_Success;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE9[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager_2;     // 0x00F8(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager_2;        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEA[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ConvertUIValueToDataValue_ReturnValue_2;  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFValueTypes                           K2Node_MakeStruct_FValueTypes;                     // 0x0140(0x0028)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SliderBase_C_ApplySettingsValue) == 0x000008, "Wrong alignment on WBP_SliderBase_C_ApplySettingsValue");
static_assert(sizeof(WBP_SliderBase_C_ApplySettingsValue) == 0x000168, "Wrong size on WBP_SliderBase_C_ApplySettingsValue");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000010, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_GetSettingsManager_SettingsManager) == 0x000028, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_GetGameInstance_ReturnValue_1) == 0x000050, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1) == 0x000060, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager) == 0x000078, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_GetSettingsManager_SettingsManager_1) == 0x000088, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_GetSettingsManager_SettingsManager_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_ConvertUIValueToDataValue_ReturnValue) == 0x0000B0, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_ConvertUIValueToDataValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000B8, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager_1) == 0x0000C0, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000D0, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_ConvertUIValueToDataValue_ReturnValue_1) == 0x0000D8, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_ConvertUIValueToDataValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBPI_Game_Instance_Extension_2) == 0x0000E0, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBPI_Game_Instance_Extension_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_SetFloatValue_Success) == 0x0000F1, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_SetFloatValue_Success' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_GetSettingsManager_SettingsManager_2) == 0x0000F8, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_GetSettingsManager_SettingsManager_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000120, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_AsBP_Settings_Manager_2) == 0x000128, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_AsBP_Settings_Manager_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_DynamicCast_bSuccess_5) == 0x000130, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_SwitchEnum_CmpSuccess) == 0x000131, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, CallFunc_ConvertUIValueToDataValue_ReturnValue_2) == 0x000138, "Member 'WBP_SliderBase_C_ApplySettingsValue::CallFunc_ConvertUIValueToDataValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SliderBase_C_ApplySettingsValue, K2Node_MakeStruct_FValueTypes) == 0x000140, "Member 'WBP_SliderBase_C_ApplySettingsValue::K2Node_MakeStruct_FValueTypes' has a wrong offset!");

}

