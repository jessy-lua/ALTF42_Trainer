#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_SkelZombie_Ver02_BP

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"
#include "MantleType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ALS_ComponentAndTransform_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "Mantle_Asset_structs.hpp"


namespace SDK::Params
{

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.AI_Zone_InPlayer_Event
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_AI_Zone_InPlayer_Event final
{
public:
	bool                                          Param_SeePlayer;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_AI_Zone_InPlayer_Event) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_AI_Zone_InPlayer_Event");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_AI_Zone_InPlayer_Event) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_AI_Zone_InPlayer_Event");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AI_Zone_InPlayer_Event, Param_SeePlayer) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_AI_Zone_InPlayer_Event::Param_SeePlayer' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.AttachToHand
// 0x0148 (0x0148 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_AttachToHand final
{
public:
	class UStaticMesh*                            NewStaticMesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          NewSkeletalMesh;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewAnimClass;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LeftHand;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F4[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F5[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_Select_Default;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_AttachToHand) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_AttachToHand");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_AttachToHand) == 0x000148, "Wrong size on AI_SkelZombie_Ver02_BP_C_AttachToHand");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, NewStaticMesh) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::NewStaticMesh' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, NewSkeletalMesh) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::NewSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, NewAnimClass) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::NewAnimClass' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, LeftHand) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::LeftHand' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, Offset) == 0x000020, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::Offset' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, Temp_bool_Variable) == 0x00003A, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, Temp_name_Variable) == 0x00003C, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, Temp_name_Variable_1) == 0x000044, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, CallFunc_IsValidClass_ReturnValue) == 0x00004C, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, CallFunc_SetStaticMesh_ReturnValue) == 0x00004D, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000050, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, K2Node_Select_Default) == 0x000138, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_AttachToHand, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000140, "Member 'AI_SkelZombie_Ver02_BP_C_AttachToHand::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_Enemy_RedKnight_BP_Foot_Block_SM_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature) == 0x000008, "Wrong size on AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature, Pawn) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_BP_PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature::Pawn' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F6[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AI_SkelZombie_Ver02_BP_C_BndEvt__AI_SkelZombie_Ver02_BP_UnderOverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.ClearHeldObject
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_ClearHeldObject final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_ClearHeldObject) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_ClearHeldObject");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_ClearHeldObject) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_ClearHeldObject");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ClearHeldObject, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_ClearHeldObject::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.ExecuteUbergraph_AI_SkelZombie_Ver02_BP
// 0x06E8 (0x06E8 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F7[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F8[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F9[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SeePlayer;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FA[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_CaptainKnight_AI_Controller_C*  K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FB[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FC[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x00D0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x01E8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_2;                // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_3;                // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BombHit_;                       // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_5;               // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FD[0x1];                                     // 0x02D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x02D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FE[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x02F0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FF[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A00[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue_1;               // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALTF42_CaptainKnight_AI_Controller_C*  K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_1; // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A01[0x7];                                     // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A02[0x2];                                     // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x048C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_2;                              // 0x049D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A03[0x2];                                     // 0x049E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_ComponentBoundEvent_Pawn;                   // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A04[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_4;               // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A05[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_1;    // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_2;    // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A06[0x6];                                     // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue_2;               // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_2;            // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_CaptainKnight_AI_Controller_C*  K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_2; // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A07[0x6];                                     // 0x057A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0580(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0590(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A08[0x3];                                     // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x05A0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A09[0x7];                                     // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawnOwner_ReturnValue_3;               // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_3;            // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_CaptainKnight_AI_Controller_C*  K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_3; // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0A[0x3];                                     // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x06AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0B[0x4];                                     // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0C[0x3];                                     // 0x06CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast;        // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0D[0x4];                                     // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP) == 0x0006E8, "Wrong size on AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, EntryPoint) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000005, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_MovementResult_1) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_MovementResult) == 0x000019, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, Temp_byte_Variable) == 0x00002C, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_MovementResult_2) == 0x00002D, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_BooleanOR_ReturnValue) == 0x00002E, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_SeePlayer) == 0x000044, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_SeePlayer' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPawnOwner_ReturnValue) == 0x000048, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetAIController_ReturnValue) == 0x000050, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller) == 0x000058, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_BooleanOR_ReturnValue_1) == 0x000061, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_MyComp) == 0x000068, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_Other) == 0x000070, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_OtherComp) == 0x000078, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_bSelfMoved) == 0x000080, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_HitLocation) == 0x000088, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_HitNormal) == 0x0000A0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_NormalImpulse) == 0x0000B8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_Hit_1) == 0x0000D0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_HitComponent) == 0x0001B8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0001C0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0001C8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001D0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_Hit) == 0x0001E8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_ActorHasTag_ReturnValue) == 0x0002D0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_ActorHasTag_ReturnValue_1) == 0x0002D1, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_ActorHasTag_ReturnValue_2) == 0x0002D2, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_ActorHasTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_ActorHasTag_ReturnValue_3) == 0x0002D3, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_ActorHasTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_BombHit_) == 0x0002D4, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_BombHit_' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_MovementResult_5) == 0x0002D5, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_MovementResult_5' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_MovementResult_3) == 0x0002D6, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002D8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0002E8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_Event_Hit) == 0x0002F0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_BooleanOR_ReturnValue_2) == 0x0003D8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0003E0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003E8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000400, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, Temp_byte_Variable_1) == 0x000418, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000420, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPlayerController_ReturnValue) == 0x000438, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPawnOwner_ReturnValue_1) == 0x000440, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_K2_GetPawn_ReturnValue) == 0x000448, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetAIController_ReturnValue_1) == 0x000450, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000458, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_1) == 0x000470, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_bSuccess_1) == 0x000478, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000480, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_IsValid_ReturnValue) == 0x000488, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000489, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CreateDelegate_OutputDelegate_4) == 0x00048C, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, Temp_bool_IsClosed_Variable) == 0x00049C, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, Temp_byte_Variable_2) == 0x00049D, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_Pawn) == 0x0004A0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_Pawn' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0004A8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004B0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0004B8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0004D0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_BreakVector_X) == 0x0004E8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_BreakVector_Y) == 0x0004F0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_BreakVector_Z) == 0x0004F8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPlayerController_ReturnValue_1) == 0x000500, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000508, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CustomEvent_MovementResult_4) == 0x000510, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CustomEvent_MovementResult_4' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000518, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_CreateMoveToProxyObject_ReturnValue_1) == 0x000530, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_CreateMoveToProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_CreateMoveToProxyObject_ReturnValue_2) == 0x000538, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_CreateMoveToProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_IsValid_ReturnValue_1) == 0x000540, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_IsValid_ReturnValue_2) == 0x000541, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPawnOwner_ReturnValue_2) == 0x000548, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_MakeVector_ReturnValue) == 0x000550, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetAIController_ReturnValue_2) == 0x000568, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetAIController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_2) == 0x000570, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_bSuccess_2) == 0x000578, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000579, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000580, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000588, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000590, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000598, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x00059C, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x0005A0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, Temp_bool_IsClosed_Variable_1) == 0x000688, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPawnOwner_ReturnValue_3) == 0x000690, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetAIController_ReturnValue_3) == 0x000698, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetAIController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_3) == 0x0006A0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_AsALTF42_Captain_Knight_AI_Controller_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_DynamicCast_bSuccess_3) == 0x0006A8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, K2Node_CreateDelegate_OutputDelegate_5) == 0x0006AC, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0006C0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_GetDistanceTo_ReturnValue) == 0x0006C8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0006CC, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_SetMorphTarget_Value_ImplicitCast) == 0x0006D0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_SetMorphTarget_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0006D8, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0006E0, "Member 'AI_SkelZombie_Ver02_BP_C_ExecuteUbergraph_AI_SkelZombie_Ver02_BP::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.F_AtkPossible_Caculation
// 0x0078 (0x0078 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation) == 0x000078, "Wrong size on AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_BreakVector_X) == 0x000038, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_BreakVector_Y) == 0x000040, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_BreakVector_Z) == 0x000048, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_BreakVector_X_1) == 0x000050, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000071, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000072, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000073, "Member 'AI_SkelZombie_Ver02_BP_C_F_AtkPossible_Caculation::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.Hit_Event
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_Hit_Event final
{
public:
	bool                                          BombHit_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_Hit_Event) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_Hit_Event");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_Hit_Event) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_Hit_Event");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_Hit_Event, BombHit_) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_Hit_Event::BombHit_' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnFail_13AAA33C475D5E984E31C18F149BF1E2
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F149BF1E2 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F149BF1E2) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F149BF1E2");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F149BF1E2) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F149BF1E2");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F149BF1E2, MovementResult) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F149BF1E2::MovementResult' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnFail_13AAA33C475D5E984E31C18F729E411A
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F729E411A final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F729E411A) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F729E411A");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F729E411A) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F729E411A");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F729E411A, MovementResult) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18F729E411A::MovementResult' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnFail_13AAA33C475D5E984E31C18FABFB5F35
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18FABFB5F35 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18FABFB5F35) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18FABFB5F35");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18FABFB5F35) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18FABFB5F35");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18FABFB5F35, MovementResult) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnFail_13AAA33C475D5E984E31C18FABFB5F35::MovementResult' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnSuccess_13AAA33C475D5E984E31C18F149BF1E2
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F149BF1E2 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F149BF1E2) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F149BF1E2");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F149BF1E2) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F149BF1E2");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F149BF1E2, MovementResult) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F149BF1E2::MovementResult' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnSuccess_13AAA33C475D5E984E31C18F729E411A
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F729E411A final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F729E411A) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F729E411A");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F729E411A) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F729E411A");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F729E411A, MovementResult) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18F729E411A::MovementResult' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnSuccess_13AAA33C475D5E984E31C18FABFB5F35
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18FABFB5F35 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18FABFB5F35) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18FABFB5F35");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18FABFB5F35) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18FABFB5F35");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18FABFB5F35, MovementResult) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnSuccess_13AAA33C475D5E984E31C18FABFB5F35::MovementResult' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_ReceiveHit) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_ReceiveHit");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_ReceiveHit) == 0x000150, "Wrong size on AI_SkelZombie_Ver02_BP_C_ReceiveHit");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, MyComp) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, Other) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, OtherComp) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, HitLocation) == 0x000020, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, HitNormal) == 0x000038, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveHit, Hit) == 0x000068, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveHit::Hit' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.UpdateHeldObject
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_UpdateHeldObject final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObject) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_UpdateHeldObject");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObject) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_UpdateHeldObject");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObject, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_UpdateHeldObject::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.UpdateHeldObjectAnimations
// 0x0028 (0x0028 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations final
{
public:
	double                                        CallFunc_GetAnimCurveValue_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBow_AnimBP_C*                          K2Node_DynamicCast_AsBow_Anim_BP;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations) == 0x000028, "Wrong size on AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations, CallFunc_GetAnimCurveValue_ReturnValue) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations::CallFunc_GetAnimCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations, K2Node_DynamicCast_AsBow_Anim_BP) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations::K2Node_DynamicCast_AsBow_Anim_BP' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AI_SkelZombie_Ver02_BP_C_UpdateHeldObjectAnimations::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_UserConstructionScript final
{
public:
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_UserConstructionScript");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_UserConstructionScript) == 0x000030, "Wrong size on AI_SkelZombie_Ver02_BP_C_UserConstructionScript");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UserConstructionScript, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_UserConstructionScript::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_UserConstructionScript, K2Node_SwitchString_CmpSuccess) == 0x000028, "Member 'AI_SkelZombie_Ver02_BP_C_UserConstructionScript::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.BPI_Get_3P_PivotTarget
// 0x0130 (0x0130 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetVectorArrayAverage_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget) == 0x000010, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget) == 0x000130, "Wrong size on AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget, ReturnValue) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000060, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x000078, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000090, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget, K2Node_MakeArray_Array) == 0x0000A8, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget, CallFunc_GetVectorArrayAverage_ReturnValue) == 0x0000B8, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget::CallFunc_GetVectorArrayAverage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_PivotTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.BPI_Get_3P_TraceParams
// 0x0058 (0x0058 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams final
{
public:
	struct FVector                                TraceOrigin;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceRadius;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A10[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams) == 0x000058, "Wrong size on AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams, TraceOrigin) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams::TraceOrigin' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams, TraceRadius) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams::TraceRadius' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams, TraceChannel) == 0x000020, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams::TraceChannel' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000040, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_3P_TraceParams::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.BPI_Get_CaptainKnight_Attack
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_BPI_Get_CaptainKnight_Attack final
{
public:
	bool                                          SimpleAttack_;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_BPI_Get_CaptainKnight_Attack) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_BPI_Get_CaptainKnight_Attack");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_BPI_Get_CaptainKnight_Attack) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_BPI_Get_CaptainKnight_Attack");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_CaptainKnight_Attack, SimpleAttack_) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_CaptainKnight_Attack::SimpleAttack_' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.BPI_Get_FP_CameraTarget
// 0x0030 (0x0030 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget) == 0x000030, "Wrong size on AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget, ReturnValue) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'AI_SkelZombie_Ver02_BP_C_BPI_Get_FP_CameraTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.GetGetUpAnimation
// 0x0018 (0x0018 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation final
{
public:
	bool                                          Param_RagdollFaceUp;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A11[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation) == 0x000018, "Wrong size on AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation, Param_RagdollFaceUp) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation::Param_RagdollFaceUp' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation, ReturnValue) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation, K2Node_SwitchEnum_CmpSuccess_1) == 0x000011, "Member 'AI_SkelZombie_Ver02_BP_C_GetGetUpAnimation::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.GetMantleAsset
// 0x0050 (0x0050 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_GetMantleAsset final
{
public:
	EMantleType                                   MantleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A12[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantle_Asset                          ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_GetMantleAsset) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_GetMantleAsset");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_GetMantleAsset) == 0x000050, "Wrong size on AI_SkelZombie_Ver02_BP_C_GetMantleAsset");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetMantleAsset, MantleType) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_GetMantleAsset::MantleType' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetMantleAsset, ReturnValue) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_GetMantleAsset::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetMantleAsset, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'AI_SkelZombie_Ver02_BP_C_GetMantleAsset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetMantleAsset, K2Node_SwitchEnum_CmpSuccess_1) == 0x000049, "Member 'AI_SkelZombie_Ver02_BP_C_GetMantleAsset::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.GetRollAnimation
// 0x0010 (0x0010 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_GetRollAnimation final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_GetRollAnimation) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_GetRollAnimation");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_GetRollAnimation) == 0x000010, "Wrong size on AI_SkelZombie_Ver02_BP_C_GetRollAnimation");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetRollAnimation, ReturnValue) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_GetRollAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_GetRollAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'AI_SkelZombie_Ver02_BP_C_GetRollAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.MantleStart
// 0x0090 (0x0090 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_MantleStart final
{
public:
	double                                        MantleHeight;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A13[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             MantleLedgeWS;                                     // 0x0010(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EMantleType                                   MantleType;                                        // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_MantleStart) == 0x000010, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_MantleStart");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_MantleStart) == 0x000090, "Wrong size on AI_SkelZombie_Ver02_BP_C_MantleStart");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_MantleStart, MantleHeight) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_MantleStart::MantleHeight' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_MantleStart, MantleLedgeWS) == 0x000010, "Member 'AI_SkelZombie_Ver02_BP_C_MantleStart::MantleLedgeWS' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_MantleStart, MantleType) == 0x000080, "Member 'AI_SkelZombie_Ver02_BP_C_MantleStart::MantleType' has a wrong offset!");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_MantleStart, K2Node_SwitchEnum_CmpSuccess) == 0x000081, "Member 'AI_SkelZombie_Ver02_BP_C_MantleStart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnLanded
// 0x00E8 (0x00E8 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnLanded) == 0x000008, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnLanded");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnLanded) == 0x0000E8, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnLanded");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnLanded, Hit) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnLanded::Hit' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.OnOverlayStateChanged
// 0x0001 (0x0001 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_OnOverlayStateChanged final
{
public:
	EALS_OverlayState                             NewOverlayState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_OnOverlayStateChanged) == 0x000001, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_OnOverlayStateChanged");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_OnOverlayStateChanged) == 0x000001, "Wrong size on AI_SkelZombie_Ver02_BP_C_OnOverlayStateChanged");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_OnOverlayStateChanged, NewOverlayState) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_OnOverlayStateChanged::NewOverlayState' has a wrong offset!");

// Function AI_SkelZombie_Ver02_BP.AI_SkelZombie_Ver02_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AI_SkelZombie_Ver02_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_SkelZombie_Ver02_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on AI_SkelZombie_Ver02_BP_C_ReceiveTick");
static_assert(sizeof(AI_SkelZombie_Ver02_BP_C_ReceiveTick) == 0x000004, "Wrong size on AI_SkelZombie_Ver02_BP_C_ReceiveTick");
static_assert(offsetof(AI_SkelZombie_Ver02_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AI_SkelZombie_Ver02_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

