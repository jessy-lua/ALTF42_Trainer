#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trampoline_01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Trampoline_01_BP.Trampoline_01_BP_C.BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4175[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Trampoline_01_BP.Trampoline_01_BP_C.BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_JumpArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Trampoline_01_BP.Trampoline_01_BP_C.BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4176[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Trampoline_01_BP.Trampoline_01_BP_C.BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Trampoline_01_BP_C_BndEvt__Trampoline_01_BP_TrampolineArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Trampoline_01_BP.Trampoline_01_BP_C.ExecuteUbergraph_Trampoline_01_BP
// 0x02D8 (0x02D8 - 0x0000)
struct Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4177[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALTF42_InGame_PC_Loco_C*               K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4178[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4179[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0048(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP;                // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417A[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417B[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_1;              // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417C[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417D[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0190(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417E[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_2;              // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417F[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Loco_BP_C*                       K2Node_DynamicCast_AsALTF4_Loco_BP_3;              // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4180[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP) == 0x000008, "Wrong alignment on Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP");
static_assert(sizeof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP) == 0x0002D8, "Wrong size on Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, EntryPoint) == 0x000000, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco) == 0x000018, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_AsALTF42_in_Game_PC_Loco' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000028, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000030, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000038, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000040, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000044, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000048, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_AsALTF4_Loco_BP) == 0x000130, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_AsALTF4_Loco_BP' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000140, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000148, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000150, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000158, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_1) == 0x000160, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000170, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000178, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000180, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000188, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x00018C, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000190, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000278, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000280, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000288, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000290, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_2) == 0x000298, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_2' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_bSuccess_3) == 0x0002A0, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_AsALTF4_Loco_BP_3) == 0x0002A8, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_AsALTF4_Loco_BP_3' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, K2Node_DynamicCast_bSuccess_4) == 0x0002B0, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, CallFunc_MakeVector_ReturnValue) == 0x0002B8, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, Temp_bool_Has_Been_Initd_Variable_2) == 0x0002D0, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, Temp_bool_IsClosed_Variable_1) == 0x0002D1, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP, Temp_bool_IsClosed_Variable_2) == 0x0002D2, "Member 'Trampoline_01_BP_C_ExecuteUbergraph_Trampoline_01_BP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");

}

