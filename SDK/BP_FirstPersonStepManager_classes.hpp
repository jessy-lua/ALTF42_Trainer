#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FirstPersonStepManager

#include "Basic.hpp"

#include "ECharacterMoveType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ECharacterStairsType_structs.hpp"
#include "ECharacterDeltaSpeed_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FirstPersonStepManager.BP_FirstPersonStepManager_C
// 0x0088 (0x0128 - 0x00A0)
class UBP_FirstPersonStepManager_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        CurrentForwardScale;                               // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentRightScale;                                 // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentWorldLocation;                              // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastWorldLocation;                                 // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CharacterGait;                                     // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PlayFootstep;                                      // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ECharacterMoveType                            MoveType;                                          // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterStairsType                          StairMoveType;                                     // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterDeltaSpeed                          DeltaSpeed;                                        // 0x0102(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOnStairs;                                         // 0x0103(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRunning;                                          // 0x0104(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413C[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MovementIntensity;                                 // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFootHanging;                                      // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413D[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinWalkScale;                                      // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxWalkScale;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FirstPersonStepManager(int32 EntryPoint);
	void PlayFootstep__DelegateSignature(ECharacterMoveType MoveTypeOut, ECharacterStairsType StairTypeOut, ECharacterDeltaSpeed DeltaSpeedOut, double Param_MovementIntensity);
	void TakeFootstep();
	void UpdateValues(double ForwardScaleIn, double RightScaleIn, const struct FVector& CurrentWorldLocationIn, bool bOnStairsIn, bool bRunningIn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FirstPersonStepManager_C">();
	}
	static class UBP_FirstPersonStepManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FirstPersonStepManager_C>();
	}
};
static_assert(alignof(UBP_FirstPersonStepManager_C) == 0x000008, "Wrong alignment on UBP_FirstPersonStepManager_C");
static_assert(sizeof(UBP_FirstPersonStepManager_C) == 0x000128, "Wrong size on UBP_FirstPersonStepManager_C");
static_assert(offsetof(UBP_FirstPersonStepManager_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_FirstPersonStepManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, CurrentForwardScale) == 0x0000A8, "Member 'UBP_FirstPersonStepManager_C::CurrentForwardScale' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, CurrentRightScale) == 0x0000B0, "Member 'UBP_FirstPersonStepManager_C::CurrentRightScale' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, CurrentWorldLocation) == 0x0000B8, "Member 'UBP_FirstPersonStepManager_C::CurrentWorldLocation' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, LastWorldLocation) == 0x0000D0, "Member 'UBP_FirstPersonStepManager_C::LastWorldLocation' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, CharacterGait) == 0x0000E8, "Member 'UBP_FirstPersonStepManager_C::CharacterGait' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, PlayFootstep) == 0x0000F0, "Member 'UBP_FirstPersonStepManager_C::PlayFootstep' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, MoveType) == 0x000100, "Member 'UBP_FirstPersonStepManager_C::MoveType' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, StairMoveType) == 0x000101, "Member 'UBP_FirstPersonStepManager_C::StairMoveType' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, DeltaSpeed) == 0x000102, "Member 'UBP_FirstPersonStepManager_C::DeltaSpeed' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, bOnStairs) == 0x000103, "Member 'UBP_FirstPersonStepManager_C::bOnStairs' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, bRunning) == 0x000104, "Member 'UBP_FirstPersonStepManager_C::bRunning' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, MovementIntensity) == 0x000108, "Member 'UBP_FirstPersonStepManager_C::MovementIntensity' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, bFootHanging) == 0x000110, "Member 'UBP_FirstPersonStepManager_C::bFootHanging' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, MinWalkScale) == 0x000118, "Member 'UBP_FirstPersonStepManager_C::MinWalkScale' has a wrong offset!");
static_assert(offsetof(UBP_FirstPersonStepManager_C, MaxWalkScale) == 0x000120, "Member 'UBP_FirstPersonStepManager_C::MaxWalkScale' has a wrong offset!");

}

