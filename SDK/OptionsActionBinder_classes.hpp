#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsActionBinder

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InteractableUserWidget_classes.hpp"
#include "Slate_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OptionsActionBinder.OptionsActionBinder_C
// 0x01C8 (0x0940 - 0x0778)
class UOptionsActionBinder_C final : public UInteractableUserWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_OptionsActionBinder_C;              // 0x0778(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                ActionButton;                                      // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DisplayNameText;                                   // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadButtonImage;                                // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeyText;                                           // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OuterBorder;                                       // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   InputName;                                         // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CurrentActionMapping;                              // 0x07B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsAxisMapping;                                     // 0x07D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B0[0x7];                                     // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CurrentAxisMapping;                                // 0x07E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        AxisScale;                                         // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            SelectedKey;                                       // 0x0810(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FInputChord                            LastSelectedKey;                                   // 0x0830(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bAllowKeyChangeInput;                              // 0x0850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B1[0x7];                                     // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnKeyChanged;                                      // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnKeyInit;                                         // 0x0868(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsGamepadBinding;                                  // 0x0878(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B2[0x7];                                     // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecisionDialogWidgetBP_C*              DecisionDialogWidget;                              // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 OldActionMapping;                                  // 0x0888(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInputAxisKeyMapping                   OldAxisMapping;                                    // 0x08B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           OptionsActionBinderBgColor;                        // 0x08D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OptionsActionBinderHightlightColor;                // 0x08E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UGamepadKey_C*>                  GamepadKeys;                                       // 0x08F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           OptionsActionBinderIconColor;                      // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInEditMode;                                     // 0x0918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsModifierKeyPressed;                             // 0x0919(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B3[0x6];                                     // 0x091A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   ModifierKey;                                       // 0x0920(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UInputMappingContext*                   ControllerMapping;                                 // 0x0938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__ActionButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ActionButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void ChangeInputBinding(const struct FInputChord& InInputChord);
	bool CheckIfNotSameKey(const struct FInputChord& InNewKey);
	void CheckIfNotSameModifierKey(bool NewParam, bool* IsNotSame);
	void Construct();
	void ExecuteUbergraph_OptionsActionBinder(int32 EntryPoint);
	void Get_InputKeyName(class FName Input_Name, EInputActionValueType Value_Type, struct FKey* Key);
	void GetModifierKey(const struct FKey& InKey, bool* bIsShift, bool* bIsCtrl, bool* bIsAlt, bool* bIsCmd);
	void IsBlacklistedKey(const struct FKey& InKey, bool* bIsBlacklisted);
	void IsKeyAlreadyBound(const struct FInputChord& InInputChord, bool bIsGamepad, bool* bIsAlreadyInUse, struct FInputActionKeyMapping* Param_OldActionMapping, struct FInputAxisKeyMapping* Param_OldAxisMapping);
	void OnCancelKeyChange();
	void OnEndKeyChange(const struct FInputChord& InInputChord);
	void OnGlobalSettingsApply();
	void OnKeyChanged__DelegateSignature();
	void OnKeyInit__DelegateSignature();
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnLeaveEditMode();
	void OnModifierKeyCooldownStart();
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnRebindAccept();
	void OnRebindDecline();
	void OnSetHoverEffect(bool bIsHovered, bool bPlaySound);
	void OnStartKeyChange();
	void RebindInput(bool bRemoveOld);
	void SetAllowMenuNavigation(bool bIsAllowed);
	void SetCurrentActionMapping();
	void SetCurrentAxisMapping();
	void SetGlobalSettings();
	void SetHoverEffect(bool Param_IsHovered);
	void SetKeyTextOrIcon(const struct FInputChord& InInputChord, bool bIsWaitingForInput);
	void SetupDisplayNameText();
	void SetupInputBinding();
	void ShowGamepadIcon();
	void ShowRebindDialog();
	void OnPressedBack();
	void OnPressedLeft();
	void OnPressedRight();
	void OnPressedSelect();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OptionsActionBinder_C">();
	}
	static class UOptionsActionBinder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptionsActionBinder_C>();
	}
};
static_assert(alignof(UOptionsActionBinder_C) == 0x000008, "Wrong alignment on UOptionsActionBinder_C");
static_assert(sizeof(UOptionsActionBinder_C) == 0x000940, "Wrong size on UOptionsActionBinder_C");
static_assert(offsetof(UOptionsActionBinder_C, UberGraphFrame_OptionsActionBinder_C) == 0x000778, "Member 'UOptionsActionBinder_C::UberGraphFrame_OptionsActionBinder_C' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, ActionButton) == 0x000780, "Member 'UOptionsActionBinder_C::ActionButton' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, DisplayNameText) == 0x000788, "Member 'UOptionsActionBinder_C::DisplayNameText' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, GamepadButtonImage) == 0x000790, "Member 'UOptionsActionBinder_C::GamepadButtonImage' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, KeyText) == 0x000798, "Member 'UOptionsActionBinder_C::KeyText' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OuterBorder) == 0x0007A0, "Member 'UOptionsActionBinder_C::OuterBorder' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, InputName) == 0x0007A8, "Member 'UOptionsActionBinder_C::InputName' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, CurrentActionMapping) == 0x0007B0, "Member 'UOptionsActionBinder_C::CurrentActionMapping' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, IsAxisMapping) == 0x0007D8, "Member 'UOptionsActionBinder_C::IsAxisMapping' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, CurrentAxisMapping) == 0x0007E0, "Member 'UOptionsActionBinder_C::CurrentAxisMapping' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, AxisScale) == 0x000808, "Member 'UOptionsActionBinder_C::AxisScale' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, SelectedKey) == 0x000810, "Member 'UOptionsActionBinder_C::SelectedKey' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, LastSelectedKey) == 0x000830, "Member 'UOptionsActionBinder_C::LastSelectedKey' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, bAllowKeyChangeInput) == 0x000850, "Member 'UOptionsActionBinder_C::bAllowKeyChangeInput' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OnKeyChanged) == 0x000858, "Member 'UOptionsActionBinder_C::OnKeyChanged' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OnKeyInit) == 0x000868, "Member 'UOptionsActionBinder_C::OnKeyInit' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, IsGamepadBinding) == 0x000878, "Member 'UOptionsActionBinder_C::IsGamepadBinding' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, DecisionDialogWidget) == 0x000880, "Member 'UOptionsActionBinder_C::DecisionDialogWidget' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OldActionMapping) == 0x000888, "Member 'UOptionsActionBinder_C::OldActionMapping' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OldAxisMapping) == 0x0008B0, "Member 'UOptionsActionBinder_C::OldAxisMapping' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OptionsActionBinderBgColor) == 0x0008D8, "Member 'UOptionsActionBinder_C::OptionsActionBinderBgColor' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OptionsActionBinderHightlightColor) == 0x0008E8, "Member 'UOptionsActionBinder_C::OptionsActionBinderHightlightColor' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, GamepadKeys) == 0x0008F8, "Member 'UOptionsActionBinder_C::GamepadKeys' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, OptionsActionBinderIconColor) == 0x000908, "Member 'UOptionsActionBinder_C::OptionsActionBinderIconColor' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, bIsInEditMode) == 0x000918, "Member 'UOptionsActionBinder_C::bIsInEditMode' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, bIsModifierKeyPressed) == 0x000919, "Member 'UOptionsActionBinder_C::bIsModifierKeyPressed' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, ModifierKey) == 0x000920, "Member 'UOptionsActionBinder_C::ModifierKey' has a wrong offset!");
static_assert(offsetof(UOptionsActionBinder_C, ControllerMapping) == 0x000938, "Member 'UOptionsActionBinder_C::ControllerMapping' has a wrong offset!");

}

